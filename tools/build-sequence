# This file specifies the sequence of directories that the build
# program builds.  Each non-comment, non-blank line specifies a
# directory which will be visited by the build program.  Directories
# that are not absolute are interpreted with respect to the root of
# the HOL directory. Build is special-cased so that some directories
# are treated differently, but the default behaviour is that in each,
# it will call Holmake --qof.

# The **KERNEL** line stands for the directory containing the sytem's
# kernel, which may be selected as a command-line option to the build
# command (the possibilities are src/0 or src/experimental-kernel as
# of 17 May 2011).

# Comments can be added; all text on a line after a # symbol is
# ignored.  Similarly blank lines are ignored.  If you are going to
# edit this file, be aware that it does not record various
# dependencies between the directories.  If dir1 is earlier than dir2,
# then dir1 can not depend on dir2, but if dir1 is later than dir2,
# then it may or may not depend on dir2.

# If a directory name is preceded by an !, then it will only be built
# if the -selftest flag is passed to Holmake, and the object files
# that it builds will not be transferred to the sigobj directory.  If
# there is more than one ! then the number of them indicates the level
# of -selftest required in order to get that directory to be built at
# all.  (If -selftest appears on its own, then that's level 1.  If you
# write -selftest 2, that's level 2, which means directories with 2 !s
# will get tested.)

# If a directory name is preceded by a string inside []-brackets, then
# that directory/target will only be considered if the string is the
# name of the current ML implementation.  Thus the line [poly]foo
# will cause foo to be built only if the current implementation is
# Poly/ML.  (The other supported implementation at the time of writing
# is [mosml].)  If combining this with exclamation marks, the [system]
# annotation should come first, i.e., [mosml]!!foo, not !![mosml]foo.


tools/mlyacc/mlyacclib
[mosml]src/portableML/mosml
[poly]src/portableML/poly
src/portableML
src/prekernel
**KERNEL**
src/postkernel
# these three directories are required to even run hol.bare.unquote
src/parse
src/bool
src/1
src/proofman
[poly]bin/hol.bare

src/compute/src
src/HolSat/sat_solvers/minisat
src/HolSat/sat_solvers/zc2hs
src/HolSat
src/taut
src/marker
src/q
src/combin
src/lite
src/refute
src/simp/src
src/metis
src/meson/src
src/IndDef
src/basicProof
src/relation
src/one
src/pair/src
src/sum
src/tfl/src
src/option
src/num/theories
src/num/reduce/src
src/num/arith/src
src/num
src/num/termination
src/num/extra_theories
src/pred_set/src
src/datatype/equiv
src/datatype/record
src/datatype
src/list/src
src/quantHeuristics
src/unwind
src/boss
# Up to this point is needed for hol (which loads bossLib).
# (Maybe unwind could be omitted).
[poly]bin/hol

!src/tfl/src/test
src/TeX
!examples/RSA
src/sort
src/string
!src/string/theorytesting
!examples/STE
src/res_quan/src
src/quotient/src
!src/quotient/examples
src/finite_map
!examples/ind_def
!!examples/decidable_separationLogic/src/
src/bag
!!examples/unification/triangular/first-order
src/n-bit
examples/HolOmega
examples/HolOmega/interim
!examples/ARM/arm6-verification
!!examples/ARM/arm6-verification/correctness
src/ring/src
src/integer
!examples/rings
src/llist
src/path
!src/integer/testing
src/patricia
src/update
src/emit
!!examples/ARM/v4
!examples/ARM/v7
src/hol88
!src/quotient/examples/lambda
!src/quotient/examples/sigma
src/rational
src/real
src/complex
!!examples/separationLogic/src/
src/HolQbf
src/HolSmt
src/opentheory
!examples/misc
# these examples require Muddy, which is MoscowML specific
[mosml]!examples/muddy/muddyC
[mosml]!examples/muddy
[mosml]!examples/HolBdd
[mosml]!!!!examples/HolCheck
src/datatype/inftree
!examples/lambda/basics
!!examples/unification/triangular/nominal
!examples/lambda/barendregt
!examples/computability
!!examples/lambda/other-models
!!examples/lambda/typing
!!examples/computability/lambda
src/Boolify/src
src/float
src/prob
src/temporal/src

#
# Examples only from here on
#
!examples/MLsyntax
!examples/zfset
!!examples/category
!!examples/miller/ho_prover
!!examples/miller/miller
!examples/ordinal

# Crypto examples
!!examples/Crypto/AES
!!examples/Crypto/IDEA
!!examples/Crypto/MARS
!!examples/Crypto/RC6
# the Crypto/Serpent/Reference example causes Poly/ML to crash
[mosml]!!examples/Crypto/Serpent/Reference
!!examples/Crypto/Serpent/Bitslice
!!examples/Crypto/SHA-1
!!examples/Crypto/TEA
!!examples/Crypto/TWOFISH

[poly]!!!examples/machine-code/garbage-collectors
[poly]!!!examples/machine-code/lisp
