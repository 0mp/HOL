(* mipsScript.sml - generated by L<3> - Tue Jul 23 14:42:26 2013 *)

open HolKernel boolLib bossLib Import

val () = Import.start "mips"

val _ = Record
  ("StatusRegister",
   [("'rst",FTy 23),("BEV",bTy),("ERL",bTy),("EXL",bTy),("IE",bTy),
    ("IM0",bTy),("IM1",bTy),("KSU",FTy 2),("RE",bTy)])
;

val _ = Record("ConfigRegister",[("'rst",FTy 31),("BE",bTy)])
;

val _ = Record("CauseRegister",[("'rst",FTy 27),("ExcCode",FTy 5)])
;

val _ = Record
  ("CP0",
   [("Cause",CTy"CauseRegister"),("Config",CTy"ConfigRegister"),
    ("Count",F32),("EPC",F64),("ErrorEPC",F64),
    ("Status",CTy"StatusRegister")])
;

val _ = Construct
  [("HLStatus",[("HLarith",[]),("HLok",[]),("HLmthi",[]),("HLmtlo",[])])]
;

val _ = Construct[("IorD",[("INSTRUCTION",[]),("DATA",[])])]
;

val _ = Construct[("LorS",[("LOAD",[]),("STORE",[])])]
;

val _ = Construct
  [("ExceptionType",
    [("AdEL",[]),("AdES",[]),("Sys",[]),("Bp",[]),("RI",[]),("Ov",[]),
     ("Tr",[])])]
;

val _ = Construct
  [("Branch",
    [("BEQ",[PTy(FTy 5,PTy(FTy 5,F16))]),
     ("BEQL",[PTy(FTy 5,PTy(FTy 5,F16))]),("BGEZ",[PTy(FTy 5,F16)]),
     ("BGEZAL",[PTy(FTy 5,F16)]),("BGEZALL",[PTy(FTy 5,F16)]),
     ("BGEZL",[PTy(FTy 5,F16)]),("BGTZ",[PTy(FTy 5,F16)]),
     ("BGTZL",[PTy(FTy 5,F16)]),("BLEZ",[PTy(FTy 5,F16)]),
     ("BLEZL",[PTy(FTy 5,F16)]),("BLTZ",[PTy(FTy 5,F16)]),
     ("BLTZAL",[PTy(FTy 5,F16)]),("BLTZALL",[PTy(FTy 5,F16)]),
     ("BLTZL",[PTy(FTy 5,F16)]),("BNE",[PTy(FTy 5,PTy(FTy 5,F16))]),
     ("BNEL",[PTy(FTy 5,PTy(FTy 5,F16))]),("J",[FTy 26]),("JAL",[FTy 26]),
     ("JALR",[PTy(FTy 5,FTy 5)]),("JR",[FTy 5])])]
;

val _ = Construct
  [("CP",
    [("DMFC0",[PTy(FTy 5,PTy(FTy 5,FTy 3))]),
     ("DMTC0",[PTy(FTy 5,PTy(FTy 5,FTy 3))]),
     ("MFC0",[PTy(FTy 5,PTy(FTy 5,FTy 3))]),
     ("MTC0",[PTy(FTy 5,PTy(FTy 5,FTy 3))])])]
;

val _ = Construct
  [("Store",
    [("SB",[PTy(FTy 5,PTy(FTy 5,F16))]),
     ("SC",[PTy(FTy 5,PTy(FTy 5,F16))]),
     ("SCD",[PTy(FTy 5,PTy(FTy 5,F16))]),
     ("SD",[PTy(FTy 5,PTy(FTy 5,F16))]),
     ("SDL",[PTy(FTy 5,PTy(FTy 5,F16))]),
     ("SDR",[PTy(FTy 5,PTy(FTy 5,F16))]),
     ("SH",[PTy(FTy 5,PTy(FTy 5,F16))]),
     ("SW",[PTy(FTy 5,PTy(FTy 5,F16))]),
     ("SWL",[PTy(FTy 5,PTy(FTy 5,F16))]),
     ("SWR",[PTy(FTy 5,PTy(FTy 5,F16))])])]
;

val _ = Construct
  [("Load",
    [("LB",[PTy(FTy 5,PTy(FTy 5,F16))]),
     ("LBU",[PTy(FTy 5,PTy(FTy 5,F16))]),
     ("LD",[PTy(FTy 5,PTy(FTy 5,F16))]),
     ("LDL",[PTy(FTy 5,PTy(FTy 5,F16))]),
     ("LDR",[PTy(FTy 5,PTy(FTy 5,F16))]),
     ("LH",[PTy(FTy 5,PTy(FTy 5,F16))]),
     ("LHU",[PTy(FTy 5,PTy(FTy 5,F16))]),
     ("LL",[PTy(FTy 5,PTy(FTy 5,F16))]),
     ("LLD",[PTy(FTy 5,PTy(FTy 5,F16))]),
     ("LW",[PTy(FTy 5,PTy(FTy 5,F16))]),
     ("LWL",[PTy(FTy 5,PTy(FTy 5,F16))]),
     ("LWR",[PTy(FTy 5,PTy(FTy 5,F16))]),
     ("LWU",[PTy(FTy 5,PTy(FTy 5,F16))])])]
;

val _ = Construct
  [("Trap",
    [("TEQ",[PTy(FTy 5,FTy 5)]),("TEQI",[PTy(FTy 5,F16)]),
     ("TGE",[PTy(FTy 5,FTy 5)]),("TGEI",[PTy(FTy 5,F16)]),
     ("TGEIU",[PTy(FTy 5,F16)]),("TGEU",[PTy(FTy 5,FTy 5)]),
     ("TLT",[PTy(FTy 5,FTy 5)]),("TLTI",[PTy(FTy 5,F16)]),
     ("TLTIU",[PTy(FTy 5,F16)]),("TLTU",[PTy(FTy 5,FTy 5)]),
     ("TNE",[PTy(FTy 5,FTy 5)]),("TNEI",[PTy(FTy 5,F16)])])]
;

val _ = Construct
  [("Shift",
    [("DSLL",[PTy(FTy 5,PTy(FTy 5,FTy 5))]),
     ("DSLL32",[PTy(FTy 5,PTy(FTy 5,FTy 5))]),
     ("DSLLV",[PTy(FTy 5,PTy(FTy 5,FTy 5))]),
     ("DSRA",[PTy(FTy 5,PTy(FTy 5,FTy 5))]),
     ("DSRA32",[PTy(FTy 5,PTy(FTy 5,FTy 5))]),
     ("DSRAV",[PTy(FTy 5,PTy(FTy 5,FTy 5))]),
     ("DSRL",[PTy(FTy 5,PTy(FTy 5,FTy 5))]),
     ("DSRL32",[PTy(FTy 5,PTy(FTy 5,FTy 5))]),
     ("DSRLV",[PTy(FTy 5,PTy(FTy 5,FTy 5))]),
     ("SLL",[PTy(FTy 5,PTy(FTy 5,FTy 5))]),
     ("SLLV",[PTy(FTy 5,PTy(FTy 5,FTy 5))]),
     ("SRA",[PTy(FTy 5,PTy(FTy 5,FTy 5))]),
     ("SRAV",[PTy(FTy 5,PTy(FTy 5,FTy 5))]),
     ("SRL",[PTy(FTy 5,PTy(FTy 5,FTy 5))]),
     ("SRLV",[PTy(FTy 5,PTy(FTy 5,FTy 5))])])]
;

val _ = Construct
  [("MultDiv",
    [("DDIV",[PTy(FTy 5,FTy 5)]),("DDIVU",[PTy(FTy 5,FTy 5)]),
     ("DIV",[PTy(FTy 5,FTy 5)]),("DIVU",[PTy(FTy 5,FTy 5)]),
     ("DMULT",[PTy(FTy 5,FTy 5)]),("DMULTU",[PTy(FTy 5,FTy 5)]),
     ("MFHI",[FTy 5]),("MFLO",[FTy 5]),("MTHI",[FTy 5]),("MTLO",[FTy 5]),
     ("MULT",[PTy(FTy 5,FTy 5)]),("MULTU",[PTy(FTy 5,FTy 5)])])]
;

val _ = Construct
  [("ArithR",
    [("ADD",[PTy(FTy 5,PTy(FTy 5,FTy 5))]),
     ("ADDU",[PTy(FTy 5,PTy(FTy 5,FTy 5))]),
     ("AND",[PTy(FTy 5,PTy(FTy 5,FTy 5))]),
     ("DADD",[PTy(FTy 5,PTy(FTy 5,FTy 5))]),
     ("DADDU",[PTy(FTy 5,PTy(FTy 5,FTy 5))]),
     ("DSUB",[PTy(FTy 5,PTy(FTy 5,FTy 5))]),
     ("DSUBU",[PTy(FTy 5,PTy(FTy 5,FTy 5))]),
     ("NOR",[PTy(FTy 5,PTy(FTy 5,FTy 5))]),
     ("OR",[PTy(FTy 5,PTy(FTy 5,FTy 5))]),
     ("SLT",[PTy(FTy 5,PTy(FTy 5,FTy 5))]),
     ("SLTU",[PTy(FTy 5,PTy(FTy 5,FTy 5))]),
     ("SUB",[PTy(FTy 5,PTy(FTy 5,FTy 5))]),
     ("SUBU",[PTy(FTy 5,PTy(FTy 5,FTy 5))]),
     ("XOR",[PTy(FTy 5,PTy(FTy 5,FTy 5))])])]
;

val _ = Construct
  [("ArithI",
    [("ADDI",[PTy(FTy 5,PTy(FTy 5,F16))]),
     ("ADDIU",[PTy(FTy 5,PTy(FTy 5,F16))]),
     ("ANDI",[PTy(FTy 5,PTy(FTy 5,F16))]),
     ("DADDI",[PTy(FTy 5,PTy(FTy 5,F16))]),
     ("DADDIU",[PTy(FTy 5,PTy(FTy 5,F16))]),("LUI",[PTy(FTy 5,F16)]),
     ("ORI",[PTy(FTy 5,PTy(FTy 5,F16))]),
     ("SLTI",[PTy(FTy 5,PTy(FTy 5,F16))]),
     ("SLTIU",[PTy(FTy 5,PTy(FTy 5,F16))]),
     ("XORI",[PTy(FTy 5,PTy(FTy 5,F16))])])]
;

val _ = Construct
  [("instruction",
    [("ArithI",[CTy"ArithI"]),("ArithR",[CTy"ArithR"]),("BREAK",[]),
     ("Branch",[CTy"Branch"]),("CP",[CTy"CP"]),("ERET",[]),
     ("Load",[CTy"Load"]),("MultDiv",[CTy"MultDiv"]),
     ("ReservedInstruction",[]),("SYNC",[FTy 5]),("SYSCALL",[]),
     ("Shift",[CTy"Shift"]),("Store",[CTy"Store"]),("Trap",[CTy"Trap"])])]
;

val _ = Construct
  [("exception",[("NoException",[]),("UNPREDICTABLE",[sTy])])]
;

val _ = Record
  ("mips_state",
   [("BranchStatus",OTy F64),("CP0",CTy"CP0"),("HI",F64),
    ("HLStatus",CTy"HLStatus"),("LLbit",OTy bTy),("LO",F64),
    ("MEM",ATy(F64,F8)),("PC",F64),("exception",CTy"exception"),
    ("gpr",ATy(FTy 5,F64))])
;

val qTy = CTy "mips_state"
;

fun qVar v = Term.mk_var (v, ParseDatatype.pretypeToType qTy)
;

val raise'exception_def = Def
  ("raise'exception",Var("e",CTy"exception"),
   Close
     (qVar"state",
      TP[LX(VTy"a"),
         ITE
           (EQ(Dest("exception",CTy"exception",qVar"state"),
               Const("NoException",CTy"exception")),
            Rupd("exception",TP[qVar"state",Var("e",CTy"exception")]),
            qVar"state")]))
;

val rec'StatusRegister_def = Def
  ("rec'StatusRegister",Var("x",F32),
   Rec
     (CTy"StatusRegister",
      [CC[EX(Var("x",F32),LN 7,LN 5,FTy 3),
          EX(Var("x",F32),LN 21,LN 10,FTy 12),
          EX(Var("x",F32),LN 25,LN 23,FTy 3),
          EX(Var("x",F32),LN 31,LN 27,FTy 5)],Bop(Bit,Var("x",F32),LN 22),
       Bop(Bit,Var("x",F32),LN 2),Bop(Bit,Var("x",F32),LN 1),
       Bop(Bit,Var("x",F32),LN 0),Bop(Bit,Var("x",F32),LN 8),
       Bop(Bit,Var("x",F32),LN 9),EX(Var("x",F32),LN 4,LN 3,FTy 2),
       Bop(Bit,Var("x",F32),LN 26)]))
;

val reg'StatusRegister_def = Def
  ("reg'StatusRegister",Var("x",CTy"StatusRegister"),
   CS(Var("x",CTy"StatusRegister"),
      [(Rec
          (CTy"StatusRegister",
           [Var("'rst",FTy 23),bVar"BEV",bVar"ERL",bVar"EXL",bVar"IE",
            bVar"IM0",bVar"IM1",Var("KSU",FTy 2),bVar"RE"]),
        Bop
          (Mdfy,
           Close
             (TP[nVar"i",AVar bTy],
              ITB
                ([(EQ(nVar"i",LN 31),Bop(Bit,Var("'rst",FTy 23),LN 4)),
                  (EQ(nVar"i",LN 30),Bop(Bit,Var("'rst",FTy 23),LN 3)),
                  (EQ(nVar"i",LN 29),Bop(Bit,Var("'rst",FTy 23),LN 2)),
                  (EQ(nVar"i",LN 28),Bop(Bit,Var("'rst",FTy 23),LN 1)),
                  (EQ(nVar"i",LN 27),Bop(Bit,Var("'rst",FTy 23),LN 0)),
                  (EQ(nVar"i",LN 26),bVar"RE"),
                  (EQ(nVar"i",LN 25),Bop(Bit,Var("'rst",FTy 23),LN 7)),
                  (EQ(nVar"i",LN 24),Bop(Bit,Var("'rst",FTy 23),LN 6)),
                  (EQ(nVar"i",LN 23),Bop(Bit,Var("'rst",FTy 23),LN 5)),
                  (EQ(nVar"i",LN 22),bVar"BEV"),
                  (EQ(nVar"i",LN 21),Bop(Bit,Var("'rst",FTy 23),LN 19)),
                  (EQ(nVar"i",LN 20),Bop(Bit,Var("'rst",FTy 23),LN 18)),
                  (EQ(nVar"i",LN 19),Bop(Bit,Var("'rst",FTy 23),LN 17)),
                  (EQ(nVar"i",LN 18),Bop(Bit,Var("'rst",FTy 23),LN 16)),
                  (EQ(nVar"i",LN 17),Bop(Bit,Var("'rst",FTy 23),LN 15)),
                  (EQ(nVar"i",LN 16),Bop(Bit,Var("'rst",FTy 23),LN 14)),
                  (EQ(nVar"i",LN 15),Bop(Bit,Var("'rst",FTy 23),LN 13)),
                  (EQ(nVar"i",LN 14),Bop(Bit,Var("'rst",FTy 23),LN 12)),
                  (EQ(nVar"i",LN 13),Bop(Bit,Var("'rst",FTy 23),LN 11)),
                  (EQ(nVar"i",LN 12),Bop(Bit,Var("'rst",FTy 23),LN 10)),
                  (EQ(nVar"i",LN 11),Bop(Bit,Var("'rst",FTy 23),LN 9)),
                  (EQ(nVar"i",LN 10),Bop(Bit,Var("'rst",FTy 23),LN 8)),
                  (EQ(nVar"i",LN 9),bVar"IM1"),
                  (EQ(nVar"i",LN 8),bVar"IM0"),
                  (EQ(nVar"i",LN 7),Bop(Bit,Var("'rst",FTy 23),LN 22)),
                  (EQ(nVar"i",LN 6),Bop(Bit,Var("'rst",FTy 23),LN 21)),
                  (EQ(nVar"i",LN 5),Bop(Bit,Var("'rst",FTy 23),LN 20)),
                  (EQ(nVar"i",LN 4),Bop(Bit,Var("KSU",FTy 2),LN 1)),
                  (EQ(nVar"i",LN 3),Bop(Bit,Var("KSU",FTy 2),LN 0)),
                  (EQ(nVar"i",LN 2),bVar"ERL"),
                  (EQ(nVar"i",LN 1),bVar"EXL")],bVar"IE")),LW(0,32)))]))
;

val write'rec'StatusRegister_def = Def
  ("write'rec'StatusRegister",TP[AVar F32,Var("x",CTy"StatusRegister")],
   Call("reg'StatusRegister",F32,Var("x",CTy"StatusRegister")))
;

val write'reg'StatusRegister_def = Def
  ("write'reg'StatusRegister",TP[AVar(CTy"StatusRegister"),Var("x",F32)],
   Call("rec'StatusRegister",CTy"StatusRegister",Var("x",F32)))
;

val rec'ConfigRegister_def = Def
  ("rec'ConfigRegister",Var("x",F32),
   Rec
     (CTy"ConfigRegister",
      [CC[EX(Var("x",F32),LN 14,LN 0,FTy 15),
          EX(Var("x",F32),LN 31,LN 16,F16)],Bop(Bit,Var("x",F32),LN 15)]))
;

val reg'ConfigRegister_def = Def
  ("reg'ConfigRegister",Var("x",CTy"ConfigRegister"),
   CS(Var("x",CTy"ConfigRegister"),
      [(Rec(CTy"ConfigRegister",[Var("'rst",FTy 31),bVar"BE"]),
        Bop
          (Mdfy,
           Close
             (TP[nVar"i",AVar bTy],
              ITB
                ([(EQ(nVar"i",LN 31),Bop(Bit,Var("'rst",FTy 31),LN 15)),
                  (EQ(nVar"i",LN 30),Bop(Bit,Var("'rst",FTy 31),LN 14)),
                  (EQ(nVar"i",LN 29),Bop(Bit,Var("'rst",FTy 31),LN 13)),
                  (EQ(nVar"i",LN 28),Bop(Bit,Var("'rst",FTy 31),LN 12)),
                  (EQ(nVar"i",LN 27),Bop(Bit,Var("'rst",FTy 31),LN 11)),
                  (EQ(nVar"i",LN 26),Bop(Bit,Var("'rst",FTy 31),LN 10)),
                  (EQ(nVar"i",LN 25),Bop(Bit,Var("'rst",FTy 31),LN 9)),
                  (EQ(nVar"i",LN 24),Bop(Bit,Var("'rst",FTy 31),LN 8)),
                  (EQ(nVar"i",LN 23),Bop(Bit,Var("'rst",FTy 31),LN 7)),
                  (EQ(nVar"i",LN 22),Bop(Bit,Var("'rst",FTy 31),LN 6)),
                  (EQ(nVar"i",LN 21),Bop(Bit,Var("'rst",FTy 31),LN 5)),
                  (EQ(nVar"i",LN 20),Bop(Bit,Var("'rst",FTy 31),LN 4)),
                  (EQ(nVar"i",LN 19),Bop(Bit,Var("'rst",FTy 31),LN 3)),
                  (EQ(nVar"i",LN 18),Bop(Bit,Var("'rst",FTy 31),LN 2)),
                  (EQ(nVar"i",LN 17),Bop(Bit,Var("'rst",FTy 31),LN 1)),
                  (EQ(nVar"i",LN 16),Bop(Bit,Var("'rst",FTy 31),LN 0)),
                  (EQ(nVar"i",LN 15),bVar"BE"),
                  (EQ(nVar"i",LN 14),Bop(Bit,Var("'rst",FTy 31),LN 30)),
                  (EQ(nVar"i",LN 13),Bop(Bit,Var("'rst",FTy 31),LN 29)),
                  (EQ(nVar"i",LN 12),Bop(Bit,Var("'rst",FTy 31),LN 28)),
                  (EQ(nVar"i",LN 11),Bop(Bit,Var("'rst",FTy 31),LN 27)),
                  (EQ(nVar"i",LN 10),Bop(Bit,Var("'rst",FTy 31),LN 26)),
                  (EQ(nVar"i",LN 9),Bop(Bit,Var("'rst",FTy 31),LN 25)),
                  (EQ(nVar"i",LN 8),Bop(Bit,Var("'rst",FTy 31),LN 24)),
                  (EQ(nVar"i",LN 7),Bop(Bit,Var("'rst",FTy 31),LN 23)),
                  (EQ(nVar"i",LN 6),Bop(Bit,Var("'rst",FTy 31),LN 22)),
                  (EQ(nVar"i",LN 5),Bop(Bit,Var("'rst",FTy 31),LN 21)),
                  (EQ(nVar"i",LN 4),Bop(Bit,Var("'rst",FTy 31),LN 20)),
                  (EQ(nVar"i",LN 3),Bop(Bit,Var("'rst",FTy 31),LN 19)),
                  (EQ(nVar"i",LN 2),Bop(Bit,Var("'rst",FTy 31),LN 18)),
                  (EQ(nVar"i",LN 1),Bop(Bit,Var("'rst",FTy 31),LN 17))],
                 Bop(Bit,Var("'rst",FTy 31),LN 16))),LW(0,32)))]))
;

val write'rec'ConfigRegister_def = Def
  ("write'rec'ConfigRegister",TP[AVar F32,Var("x",CTy"ConfigRegister")],
   Call("reg'ConfigRegister",F32,Var("x",CTy"ConfigRegister")))
;

val write'reg'ConfigRegister_def = Def
  ("write'reg'ConfigRegister",TP[AVar(CTy"ConfigRegister"),Var("x",F32)],
   Call("rec'ConfigRegister",CTy"ConfigRegister",Var("x",F32)))
;

val rec'CauseRegister_def = Def
  ("rec'CauseRegister",Var("x",F32),
   Rec
     (CTy"CauseRegister",
      [CC[EX(Var("x",F32),LN 1,LN 0,FTy 2),
          EX(Var("x",F32),LN 31,LN 7,FTy 25)],
       EX(Var("x",F32),LN 6,LN 2,FTy 5)]))
;

val reg'CauseRegister_def = Def
  ("reg'CauseRegister",Var("x",CTy"CauseRegister"),
   CS(Var("x",CTy"CauseRegister"),
      [(Rec(CTy"CauseRegister",[Var("'rst",FTy 27),Var("ExcCode",FTy 5)]),
        Bop
          (Mdfy,
           Close
             (TP[nVar"i",AVar bTy],
              ITB
                ([(EQ(nVar"i",LN 31),Bop(Bit,Var("'rst",FTy 27),LN 24)),
                  (EQ(nVar"i",LN 30),Bop(Bit,Var("'rst",FTy 27),LN 23)),
                  (EQ(nVar"i",LN 29),Bop(Bit,Var("'rst",FTy 27),LN 22)),
                  (EQ(nVar"i",LN 28),Bop(Bit,Var("'rst",FTy 27),LN 21)),
                  (EQ(nVar"i",LN 27),Bop(Bit,Var("'rst",FTy 27),LN 20)),
                  (EQ(nVar"i",LN 26),Bop(Bit,Var("'rst",FTy 27),LN 19)),
                  (EQ(nVar"i",LN 25),Bop(Bit,Var("'rst",FTy 27),LN 18)),
                  (EQ(nVar"i",LN 24),Bop(Bit,Var("'rst",FTy 27),LN 17)),
                  (EQ(nVar"i",LN 23),Bop(Bit,Var("'rst",FTy 27),LN 16)),
                  (EQ(nVar"i",LN 22),Bop(Bit,Var("'rst",FTy 27),LN 15)),
                  (EQ(nVar"i",LN 21),Bop(Bit,Var("'rst",FTy 27),LN 14)),
                  (EQ(nVar"i",LN 20),Bop(Bit,Var("'rst",FTy 27),LN 13)),
                  (EQ(nVar"i",LN 19),Bop(Bit,Var("'rst",FTy 27),LN 12)),
                  (EQ(nVar"i",LN 18),Bop(Bit,Var("'rst",FTy 27),LN 11)),
                  (EQ(nVar"i",LN 17),Bop(Bit,Var("'rst",FTy 27),LN 10)),
                  (EQ(nVar"i",LN 16),Bop(Bit,Var("'rst",FTy 27),LN 9)),
                  (EQ(nVar"i",LN 15),Bop(Bit,Var("'rst",FTy 27),LN 8)),
                  (EQ(nVar"i",LN 14),Bop(Bit,Var("'rst",FTy 27),LN 7)),
                  (EQ(nVar"i",LN 13),Bop(Bit,Var("'rst",FTy 27),LN 6)),
                  (EQ(nVar"i",LN 12),Bop(Bit,Var("'rst",FTy 27),LN 5)),
                  (EQ(nVar"i",LN 11),Bop(Bit,Var("'rst",FTy 27),LN 4)),
                  (EQ(nVar"i",LN 10),Bop(Bit,Var("'rst",FTy 27),LN 3)),
                  (EQ(nVar"i",LN 9),Bop(Bit,Var("'rst",FTy 27),LN 2)),
                  (EQ(nVar"i",LN 8),Bop(Bit,Var("'rst",FTy 27),LN 1)),
                  (EQ(nVar"i",LN 7),Bop(Bit,Var("'rst",FTy 27),LN 0)),
                  (EQ(nVar"i",LN 6),Bop(Bit,Var("ExcCode",FTy 5),LN 4)),
                  (EQ(nVar"i",LN 5),Bop(Bit,Var("ExcCode",FTy 5),LN 3)),
                  (EQ(nVar"i",LN 4),Bop(Bit,Var("ExcCode",FTy 5),LN 2)),
                  (EQ(nVar"i",LN 3),Bop(Bit,Var("ExcCode",FTy 5),LN 1)),
                  (EQ(nVar"i",LN 2),Bop(Bit,Var("ExcCode",FTy 5),LN 0)),
                  (EQ(nVar"i",LN 1),Bop(Bit,Var("'rst",FTy 27),LN 26))],
                 Bop(Bit,Var("'rst",FTy 27),LN 25))),LW(0,32)))]))
;

val write'rec'CauseRegister_def = Def
  ("write'rec'CauseRegister",TP[AVar F32,Var("x",CTy"CauseRegister")],
   Call("reg'CauseRegister",F32,Var("x",CTy"CauseRegister")))
;

val write'reg'CauseRegister_def = Def
  ("write'reg'CauseRegister",TP[AVar(CTy"CauseRegister"),Var("x",F32)],
   Call("rec'CauseRegister",CTy"CauseRegister",Var("x",F32)))
;

val GPR_def = Def
  ("GPR",Var("n",FTy 5),
   Close
     (qVar"state",
      TP[ITE
           (EQ(Var("n",FTy 5),LW(0,5)),LW(0,64),
            Apply(Dest("gpr",ATy(FTy 5,F64),qVar"state"),Var("n",FTy 5))),
         qVar"state"]))
;

val write'GPR_def = Def
  ("write'GPR",TP[Var("value",F64),Var("n",FTy 5)],
   Close
     (qVar"state",
      TP[LU,
         ITE
           (Mop(Not,EQ(Var("n",FTy 5),LW(0,5))),
            Rupd
              ("gpr",
               TP[qVar"state",
                  Fupd
                    (Dest("gpr",ATy(FTy 5,F64),qVar"state"),
                     Var("n",FTy 5),Var("value",F64))]),qVar"state")]))
;

val CPR_def = Def
  ("CPR",TP[nVar"n",Var("reg",FTy 5),Var("sel",FTy 3)],
   Close
     (qVar"state",
      CS(TP[nVar"n",Var("reg",FTy 5),Var("sel",FTy 3)],
         [(TP[LN 0,LW(9,5),LW(0,3)],
           TP[Mop
                (Cast F64,
                 Dest("Count",F32,Dest("CP0",CTy"CP0",qVar"state"))),
              qVar"state"]),
          (TP[LN 0,LW(12,5),LW(0,3)],
           TP[Mop
                (Cast F64,
                 Call
                   ("reg'StatusRegister",F32,
                    Dest
                      ("Status",CTy"StatusRegister",
                       Dest("CP0",CTy"CP0",qVar"state")))),qVar"state"]),
          (TP[LN 0,LW(13,5),LW(0,3)],
           TP[Mop
                (Cast F64,
                 Call
                   ("reg'CauseRegister",F32,
                    Dest
                      ("Cause",CTy"CauseRegister",
                       Dest("CP0",CTy"CP0",qVar"state")))),qVar"state"]),
          (TP[LN 0,LW(14,5),LW(0,3)],
           TP[Dest("EPC",F64,Dest("CP0",CTy"CP0",qVar"state")),qVar"state"]),
          (TP[LN 0,LW(16,5),LW(0,3)],
           TP[Mop
                (Cast F64,
                 Call
                   ("reg'ConfigRegister",F32,
                    Dest
                      ("Config",CTy"ConfigRegister",
                       Dest("CP0",CTy"CP0",qVar"state")))),qVar"state"]),
          (TP[LN 0,LW(30,5),LW(0,3)],
           TP[Dest("ErrorEPC",F64,Dest("CP0",CTy"CP0",qVar"state")),
              qVar"state"]),
          (AVar(PTy(nTy,PTy(FTy 5,FTy 3))),TP[LX F64,qVar"state"])])))
;

val write'CPR_def = Def
  ("write'CPR",
   TP[Var("value",F64),nVar"n",Var("reg",FTy 5),Var("sel",FTy 3)],
   Close
     (qVar"state",
      CS(TP[nVar"n",Var("reg",FTy 5),Var("sel",FTy 3)],
         [(TP[LN 0,LW(9,5),LW(0,3)],
           TP[LU,
              Rupd
                ("CP0",
                 TP[qVar"state",
                    Rupd
                      ("Count",
                       TP[Dest("CP0",CTy"CP0",qVar"state"),
                          EX(Var("value",F64),LN 31,LN 0,F32)])])]),
          (TP[LN 0,LW(12,5),LW(0,3)],
           Let
             (Var("v",CTy"CP0"),Dest("CP0",CTy"CP0",qVar"state"),
              TP[LU,
                 Rupd
                   ("CP0",
                    TP[qVar"state",
                       Rupd
                         ("Status",
                          TP[Var("v",CTy"CP0"),
                             Call
                               ("write'reg'StatusRegister",
                                CTy"StatusRegister",
                                TP[Dest
                                     ("Status",CTy"StatusRegister",
                                      Var("v",CTy"CP0")),
                                   EX(Var("value",F64),LN 31,LN 0,F32)])])])])),
          (TP[LN 0,LW(13,5),LW(0,3)],
           Let
             (Var("v",CTy"CP0"),Dest("CP0",CTy"CP0",qVar"state"),
              TP[LU,
                 Rupd
                   ("CP0",
                    TP[qVar"state",
                       Rupd
                         ("Cause",
                          TP[Var("v",CTy"CP0"),
                             Call
                               ("write'reg'CauseRegister",
                                CTy"CauseRegister",
                                TP[Dest
                                     ("Cause",CTy"CauseRegister",
                                      Var("v",CTy"CP0")),
                                   EX(Var("value",F64),LN 31,LN 0,F32)])])])])),
          (TP[LN 0,LW(14,5),LW(0,3)],
           TP[LU,
              Rupd
                ("CP0",
                 TP[qVar"state",
                    Rupd
                      ("EPC",
                       TP[Dest("CP0",CTy"CP0",qVar"state"),
                          Var("value",F64)])])]),
          (TP[LN 0,LW(16,5),LW(0,3)],
           Let
             (Var("v",CTy"CP0"),Dest("CP0",CTy"CP0",qVar"state"),
              TP[LU,
                 Rupd
                   ("CP0",
                    TP[qVar"state",
                       Rupd
                         ("Config",
                          TP[Var("v",CTy"CP0"),
                             Call
                               ("write'reg'ConfigRegister",
                                CTy"ConfigRegister",
                                TP[Dest
                                     ("Config",CTy"ConfigRegister",
                                      Var("v",CTy"CP0")),
                                   EX(Var("value",F64),LN 31,LN 0,F32)])])])])),
          (TP[LN 0,LW(30,5),LW(0,3)],
           TP[LU,
              Rupd
                ("CP0",
                 TP[qVar"state",
                    Rupd
                      ("ErrorEPC",
                       TP[Dest("CP0",CTy"CP0",qVar"state"),
                          Var("value",F64)])])]),
          (AVar(PTy(nTy,PTy(FTy 5,FTy 3))),TP[LU,qVar"state"])])))
;

val BYTE_def = Def0("BYTE",LW(0,3))
;

val HALFWORD_def = Def0("HALFWORD",LW(1,3))
;

val WORD_def = Def0("WORD",LW(3,3))
;

val DOUBLEWORD_def = Def0("DOUBLEWORD",LW(7,3))
;

val PSIZE_def = Def0("PSIZE",LN 64)
;

val UserMode_def = Def
  ("UserMode",qVar"state",
   TP[Bop
        (And,
         Bop
           (And,
            EQ(Dest
                 ("KSU",FTy 2,
                  Dest
                    ("Status",CTy"StatusRegister",
                     Dest("CP0",CTy"CP0",qVar"state"))),LW(2,2)),
            Mop
              (Not,
               Dest
                 ("EXL",bTy,
                  Dest
                    ("Status",CTy"StatusRegister",
                     Dest("CP0",CTy"CP0",qVar"state"))))),
         Mop
           (Not,
            Dest
              ("ERL",bTy,
               Dest
                 ("Status",CTy"StatusRegister",
                  Dest("CP0",CTy"CP0",qVar"state"))))),qVar"state"])
;

val BigEndianMem_def = Def
  ("BigEndianMem",qVar"state",
   TP[Dest
        ("BE",bTy,
         Dest
           ("Config",CTy"ConfigRegister",Dest("CP0",CTy"CP0",qVar"state"))),
      qVar"state"])
;

val ReverseEndian_def = Def
  ("ReverseEndian",qVar"state",
   TP[Mop
        (Cast F1,
         Bop
           (And,
            Dest
              ("RE",bTy,
               Dest
                 ("Status",CTy"StatusRegister",
                  Dest("CP0",CTy"CP0",qVar"state"))),
            Mop
              (Fst,
               Apply(Const("UserMode",ATy(qTy,PTy(bTy,qTy))),qVar"state")))),
      qVar"state"])
;

val BigEndianCPU_def = Def
  ("BigEndianCPU",qVar"state",
   TP[Bop
        (BXor,
         Mop
           (Cast F1,
            Mop
              (Fst,
               Apply
                 (Const("BigEndianMem",ATy(qTy,PTy(bTy,qTy))),qVar"state"))),
         Mop
           (Fst,
            Apply(Const("ReverseEndian",ATy(qTy,PTy(F1,qTy))),qVar"state"))),
      qVar"state"])
;

val AddressTranslation_def = Def
  ("AddressTranslation",
   TP[Var("vAddr",F64),Var("IorD",CTy"IorD"),Var("LorS",CTy"LorS")],
   TP[Var("vAddr",F64),LX(FTy 3)])
;

val LoadMemory_def = Def
  ("LoadMemory",
   TP[Var("CCA",FTy 3),Var("AccessLength",FTy 3),Var("pAddr",F64),
      Var("vAddr",F64),Var("IorD",CTy"IorD")],
   Close
     (qVar"state",
      Let
        (Var("a",F64),Bop(BAnd,Var("pAddr",F64),Mop(BNot,LW(7,64))),
         TP[ITE
              (EQ(Mop
                    (Fst,
                     Apply
                       (Const("BigEndianCPU",ATy(qTy,PTy(F1,qTy))),
                        qVar"state")),LW(1,1)),
               CC[Apply(Dest("MEM",ATy(F64,F8),qVar"state"),Var("a",F64)),
                  Apply
                    (Dest("MEM",ATy(F64,F8),qVar"state"),
                     Bop(Add,Var("a",F64),LW(1,64))),
                  Apply
                    (Dest("MEM",ATy(F64,F8),qVar"state"),
                     Bop(Add,Var("a",F64),LW(2,64))),
                  Apply
                    (Dest("MEM",ATy(F64,F8),qVar"state"),
                     Bop(Add,Var("a",F64),LW(3,64))),
                  Apply
                    (Dest("MEM",ATy(F64,F8),qVar"state"),
                     Bop(Add,Var("a",F64),LW(4,64))),
                  Apply
                    (Dest("MEM",ATy(F64,F8),qVar"state"),
                     Bop(Add,Var("a",F64),LW(5,64))),
                  Apply
                    (Dest("MEM",ATy(F64,F8),qVar"state"),
                     Bop(Add,Var("a",F64),LW(6,64))),
                  Apply
                    (Dest("MEM",ATy(F64,F8),qVar"state"),
                     Bop(Add,Var("a",F64),LW(7,64)))],
               CC[Apply
                    (Dest("MEM",ATy(F64,F8),qVar"state"),
                     Bop(Add,Var("a",F64),LW(7,64))),
                  Apply
                    (Dest("MEM",ATy(F64,F8),qVar"state"),
                     Bop(Add,Var("a",F64),LW(6,64))),
                  Apply
                    (Dest("MEM",ATy(F64,F8),qVar"state"),
                     Bop(Add,Var("a",F64),LW(5,64))),
                  Apply
                    (Dest("MEM",ATy(F64,F8),qVar"state"),
                     Bop(Add,Var("a",F64),LW(4,64))),
                  Apply
                    (Dest("MEM",ATy(F64,F8),qVar"state"),
                     Bop(Add,Var("a",F64),LW(3,64))),
                  Apply
                    (Dest("MEM",ATy(F64,F8),qVar"state"),
                     Bop(Add,Var("a",F64),LW(2,64))),
                  Apply
                    (Dest("MEM",ATy(F64,F8),qVar"state"),
                     Bop(Add,Var("a",F64),LW(1,64))),
                  Apply(Dest("MEM",ATy(F64,F8),qVar"state"),Var("a",F64))]),
            qVar"state"])))
;

val StoreMemory_def = Def
  ("StoreMemory",
   TP[Var("CCA",FTy 3),Var("AccessLength",FTy 3),Var("MemElem",F64),
      Var("pAddr",F64),Var("vAddr",F64),Var("IorD",CTy"IorD")],
   Close
     (qVar"state",
      Let
        (Var("a",F64),Bop(BAnd,Var("pAddr",F64),Mop(BNot,LW(7,64))),
         Let
           (Var("l",FTy 3),EX(Var("vAddr",F64),LN 2,LN 0,FTy 3),
            Let
              (Var("h",FTy 3),
               Bop(Add,Var("l",FTy 3),Var("AccessLength",FTy 3)),
               ITE
                 (EQ(Mop
                       (Fst,
                        Apply
                          (Const("BigEndianCPU",ATy(qTy,PTy(F1,qTy))),
                           qVar"state")),LW(1,1)),
                  Let
                    (qVar"s",
                     ITE
                       (EQ(Var("l",FTy 3),LW(0,3)),
                        Rupd
                          ("MEM",
                           TP[qVar"state",
                              Fupd
                                (Dest("MEM",ATy(F64,F8),qVar"state"),
                                 Var("a",F64),
                                 EX(Var("MemElem",F64),LN 63,LN 56,F8))]),
                        qVar"state"),
                     Let
                       (qVar"s",
                        ITE
                          (Bop
                             (And,Bop(Ule,Var("l",FTy 3),LW(1,3)),
                              Bop(Ule,LW(1,3),Var("h",FTy 3))),
                           Rupd
                             ("MEM",
                              TP[qVar"s",
                                 Fupd
                                   (Dest("MEM",ATy(F64,F8),qVar"s"),
                                    Bop(Add,Var("a",F64),LW(1,64)),
                                    EX(Var("MemElem",F64),LN 55,LN 48,F8))]),
                           qVar"s"),
                        Let
                          (qVar"s",
                           ITE
                             (Bop
                                (And,Bop(Ule,Var("l",FTy 3),LW(2,3)),
                                 Bop(Ule,LW(2,3),Var("h",FTy 3))),
                              Rupd
                                ("MEM",
                                 TP[qVar"s",
                                    Fupd
                                      (Dest("MEM",ATy(F64,F8),qVar"s"),
                                       Bop(Add,Var("a",F64),LW(2,64)),
                                       EX(Var("MemElem",F64),LN 47,LN 40,
                                          F8))]),qVar"s"),
                           Let
                             (qVar"s",
                              ITE
                                (Bop
                                   (And,Bop(Ule,Var("l",FTy 3),LW(3,3)),
                                    Bop(Ule,LW(3,3),Var("h",FTy 3))),
                                 Rupd
                                   ("MEM",
                                    TP[qVar"s",
                                       Fupd
                                         (Dest("MEM",ATy(F64,F8),qVar"s"),
                                          Bop(Add,Var("a",F64),LW(3,64)),
                                          EX(Var("MemElem",F64),LN 39,
                                             LN 32,F8))]),qVar"s"),
                              Let
                                (qVar"s",
                                 ITE
                                   (Bop
                                      (And,
                                       Bop(Ule,Var("l",FTy 3),LW(4,3)),
                                       Bop(Ule,LW(4,3),Var("h",FTy 3))),
                                    Rupd
                                      ("MEM",
                                       TP[qVar"s",
                                          Fupd
                                            (Dest
                                               ("MEM",ATy(F64,F8),qVar"s"),
                                             Bop
                                               (Add,Var("a",F64),LW(4,64)),
                                             EX(Var("MemElem",F64),LN 31,
                                                LN 24,F8))]),qVar"s"),
                                 Let
                                   (qVar"s",
                                    ITE
                                      (Bop
                                         (And,
                                          Bop(Ule,Var("l",FTy 3),LW(5,3)),
                                          Bop(Ule,LW(5,3),Var("h",FTy 3))),
                                       Rupd
                                         ("MEM",
                                          TP[qVar"s",
                                             Fupd
                                               (Dest
                                                  ("MEM",ATy(F64,F8),
                                                   qVar"s"),
                                                Bop
                                                  (Add,Var("a",F64),
                                                   LW(5,64)),
                                                EX(Var("MemElem",F64),
                                                   LN 23,LN 16,F8))]),
                                       qVar"s"),
                                    Let
                                      (qVar"s",
                                       ITE
                                         (Bop
                                            (And,
                                             Bop
                                               (Ule,Var("l",FTy 3),
                                                LW(6,3)),
                                             Bop
                                               (Ule,LW(6,3),
                                                Var("h",FTy 3))),
                                          Rupd
                                            ("MEM",
                                             TP[qVar"s",
                                                Fupd
                                                  (Dest
                                                     ("MEM",ATy(F64,F8),
                                                      qVar"s"),
                                                   Bop
                                                     (Add,Var("a",F64),
                                                      LW(6,64)),
                                                   EX(Var("MemElem",F64),
                                                      LN 15,LN 8,F8))]),
                                          qVar"s"),
                                       TP[LU,
                                          ITE
                                            (Bop
                                               (And,
                                                Bop
                                                  (Ule,Var("l",FTy 3),
                                                   LW(7,3)),
                                                Bop
                                                  (Ule,LW(7,3),
                                                   Var("h",FTy 3))),
                                             Rupd
                                               ("MEM",
                                                TP[qVar"s",
                                                   Fupd
                                                     (Dest
                                                        ("MEM",
                                                         ATy(F64,F8),
                                                         qVar"s"),
                                                      Bop
                                                        (Add,Var("a",F64),
                                                         LW(7,64)),
                                                      EX(Var
                                                           ("MemElem",F64),
                                                         LN 7,LN 0,F8))]),
                                             qVar"s")]))))))),
                  Let
                    (qVar"s",
                     ITE
                       (Bop
                          (And,Bop(Ule,Var("l",FTy 3),LW(7,3)),
                           Bop(Ule,LW(7,3),Var("h",FTy 3))),
                        Rupd
                          ("MEM",
                           TP[qVar"state",
                              Fupd
                                (Dest("MEM",ATy(F64,F8),qVar"state"),
                                 Bop(Add,Var("a",F64),LW(7,64)),
                                 EX(Var("MemElem",F64),LN 63,LN 56,F8))]),
                        qVar"state"),
                     Let
                       (qVar"s",
                        ITE
                          (Bop
                             (And,Bop(Ule,Var("l",FTy 3),LW(6,3)),
                              Bop(Ule,LW(6,3),Var("h",FTy 3))),
                           Rupd
                             ("MEM",
                              TP[qVar"s",
                                 Fupd
                                   (Dest("MEM",ATy(F64,F8),qVar"s"),
                                    Bop(Add,Var("a",F64),LW(6,64)),
                                    EX(Var("MemElem",F64),LN 55,LN 48,F8))]),
                           qVar"s"),
                        Let
                          (qVar"s",
                           ITE
                             (Bop
                                (And,Bop(Ule,Var("l",FTy 3),LW(5,3)),
                                 Bop(Ule,LW(5,3),Var("h",FTy 3))),
                              Rupd
                                ("MEM",
                                 TP[qVar"s",
                                    Fupd
                                      (Dest("MEM",ATy(F64,F8),qVar"s"),
                                       Bop(Add,Var("a",F64),LW(5,64)),
                                       EX(Var("MemElem",F64),LN 47,LN 40,
                                          F8))]),qVar"s"),
                           Let
                             (qVar"s",
                              ITE
                                (Bop
                                   (And,Bop(Ule,Var("l",FTy 3),LW(4,3)),
                                    Bop(Ule,LW(4,3),Var("h",FTy 3))),
                                 Rupd
                                   ("MEM",
                                    TP[qVar"s",
                                       Fupd
                                         (Dest("MEM",ATy(F64,F8),qVar"s"),
                                          Bop(Add,Var("a",F64),LW(4,64)),
                                          EX(Var("MemElem",F64),LN 39,
                                             LN 32,F8))]),qVar"s"),
                              Let
                                (qVar"s",
                                 ITE
                                   (Bop
                                      (And,
                                       Bop(Ule,Var("l",FTy 3),LW(3,3)),
                                       Bop(Ule,LW(3,3),Var("h",FTy 3))),
                                    Rupd
                                      ("MEM",
                                       TP[qVar"s",
                                          Fupd
                                            (Dest
                                               ("MEM",ATy(F64,F8),qVar"s"),
                                             Bop
                                               (Add,Var("a",F64),LW(3,64)),
                                             EX(Var("MemElem",F64),LN 31,
                                                LN 24,F8))]),qVar"s"),
                                 Let
                                   (qVar"s",
                                    ITE
                                      (Bop
                                         (And,
                                          Bop(Ule,Var("l",FTy 3),LW(2,3)),
                                          Bop(Ule,LW(2,3),Var("h",FTy 3))),
                                       Rupd
                                         ("MEM",
                                          TP[qVar"s",
                                             Fupd
                                               (Dest
                                                  ("MEM",ATy(F64,F8),
                                                   qVar"s"),
                                                Bop
                                                  (Add,Var("a",F64),
                                                   LW(2,64)),
                                                EX(Var("MemElem",F64),
                                                   LN 23,LN 16,F8))]),
                                       qVar"s"),
                                    Let
                                      (qVar"s",
                                       ITE
                                         (Bop
                                            (And,
                                             Bop
                                               (Ule,Var("l",FTy 3),
                                                LW(1,3)),
                                             Bop
                                               (Ule,LW(1,3),
                                                Var("h",FTy 3))),
                                          Rupd
                                            ("MEM",
                                             TP[qVar"s",
                                                Fupd
                                                  (Dest
                                                     ("MEM",ATy(F64,F8),
                                                      qVar"s"),
                                                   Bop
                                                     (Add,Var("a",F64),
                                                      LW(1,64)),
                                                   EX(Var("MemElem",F64),
                                                      LN 15,LN 8,F8))]),
                                          qVar"s"),
                                       TP[LU,
                                          ITE
                                            (EQ(Var("l",FTy 3),LW(0,3)),
                                             Rupd
                                               ("MEM",
                                                TP[qVar"s",
                                                   Fupd
                                                     (Dest
                                                        ("MEM",
                                                         ATy(F64,F8),
                                                         qVar"s"),
                                                      Var("a",F64),
                                                      EX(Var
                                                           ("MemElem",F64),
                                                         LN 7,LN 0,F8))]),
                                             qVar"s")])))))))))))))
;

val ExceptionCode_def = Def
  ("ExceptionCode",Var("ExceptionType",CTy"ExceptionType"),
   CS(Var("ExceptionType",CTy"ExceptionType"),
      [(LC("AdEL",CTy"ExceptionType"),LW(4,5)),
       (LC("AdES",CTy"ExceptionType"),LW(5,5)),
       (LC("Sys",CTy"ExceptionType"),LW(8,5)),
       (LC("Bp",CTy"ExceptionType"),LW(9,5)),
       (LC("RI",CTy"ExceptionType"),LW(10,5)),
       (LC("Ov",CTy"ExceptionType"),LW(12,5)),
       (LC("Tr",CTy"ExceptionType"),LW(13,5))]))
;

val SignalException_def = Def
  ("SignalException",Var("ExceptionType",CTy"ExceptionType"),
   Close
     (qVar"state",
      Let
        (qVar"s",
         ITE
           (Mop
              (Not,
               Dest
                 ("EXL",bTy,
                  Dest
                    ("Status",CTy"StatusRegister",
                     Dest("CP0",CTy"CP0",qVar"state")))),
            Rupd
              ("CP0",
               TP[qVar"state",
                  Rupd
                    ("EPC",
                     TP[Dest("CP0",CTy"CP0",qVar"state"),
                        Dest("PC",F64,qVar"state")])]),qVar"state"),
         Let
           (Var("v",CTy"CP0"),Dest("CP0",CTy"CP0",qVar"s"),
            Let
              (qVar"s",
               Rupd
                 ("CP0",
                  TP[qVar"s",
                     Rupd
                       ("Cause",
                        TP[Var("v",CTy"CP0"),
                           Rupd
                             ("ExcCode",
                              TP[Dest
                                   ("Cause",CTy"CauseRegister",
                                    Var("v",CTy"CP0")),
                                 Call
                                   ("ExceptionCode",FTy 5,
                                    Var
                                      ("ExceptionType",CTy"ExceptionType"))])])]),
               Let
                 (Var("v",CTy"CP0"),Dest("CP0",CTy"CP0",qVar"s"),
                  Let
                    (qVar"s",
                     Rupd
                       ("CP0",
                        TP[qVar"s",
                           Rupd
                             ("Status",
                              TP[Var("v",CTy"CP0"),
                                 Rupd
                                   ("EXL",
                                    TP[Dest
                                         ("Status",CTy"StatusRegister",
                                          Var("v",CTy"CP0")),LT])])]),
                     Let
                       (Var("v",F64),
                        ITE
                          (Dest
                             ("BEV",bTy,
                              Dest
                                ("Status",CTy"StatusRegister",
                                 Dest("CP0",CTy"CP0",qVar"s"))),
                           LW(18446744072631616000,64),
                           LW(18446744071562067968,64)),
                        TP[LU,
                           Rupd
                             ("PC",
                              TP[qVar"s",
                                 CC[EX(Var("v",F64),LN 63,LN 30,FTy 34),
                                    Bop
                                      (Add,
                                       EX(Var("v",F64),LN 29,LN 0,FTy 30),
                                       LW(384,30))]])]))))))))
;

val NotWordValue_def = Def
  ("NotWordValue",Var("value",F64),
   Let
     (Var("top",F32),EX(Var("value",F64),LN 63,LN 32,F32),
      ITE
        (Bop(Bit,Var("value",F64),LN 31),
         Mop(Not,EQ(Var("top",F32),LW(4294967295,32))),
         Mop(Not,EQ(Var("top",F32),LW(0,32))))))
;

val dfn'ADDI_def = Def
  ("dfn'ADDI",TP[Var("rs",FTy 5),Var("rt",FTy 5),Var("immediate",F16)],
   Close
     (qVar"state",
      Let
        (qVar"s",
         ITE
           (Call
              ("NotWordValue",bTy,
               Mop
                 (Fst,
                  Apply
                    (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                     qVar"state"))),
            Mop
              (Snd,
               Apply
                 (Call
                    ("raise'exception",ATy(qTy,PTy(uTy,qTy)),
                     Call
                       ("UNPREDICTABLE",CTy"exception",
                        LS"ADDI: NotWordValue")),qVar"state")),
            qVar"state"),
         Let
           (Var("v",FTy 33),
            Bop
              (Add,
               EX(Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                        qVar"s")),LN 32,LN 0,FTy 33),
               Mop(SE(FTy 33),Var("immediate",F16))),
            ITE
              (Mop
                 (Not,
                  EQ(Bop(Bit,Var("v",FTy 33),LN 32),
                     Bop(Bit,Var("v",FTy 33),LN 31))),
               Apply
                 (Call
                    ("SignalException",ATy(qTy,PTy(uTy,qTy)),
                     LC("Ov",CTy"ExceptionType")),qVar"s"),
               Apply
                 (Call
                    ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
                     TP[Mop(SE F64,EX(Var("v",FTy 33),LN 31,LN 0,F32)),
                        Var("rt",FTy 5)]),qVar"s"))))))
;

val dfn'ADDIU_def = Def
  ("dfn'ADDIU",TP[Var("rs",FTy 5),Var("rt",FTy 5),Var("immediate",F16)],
   Close
     (qVar"state",
      Let
        (qVar"s",
         ITE
           (Call
              ("NotWordValue",bTy,
               Mop
                 (Fst,
                  Apply
                    (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                     qVar"state"))),
            Mop
              (Snd,
               Apply
                 (Call
                    ("raise'exception",ATy(qTy,PTy(uTy,qTy)),
                     Call
                       ("UNPREDICTABLE",CTy"exception",
                        LS"ADDIU: NotWordValue")),qVar"state")),
            qVar"state"),
         Apply
           (Call
              ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
               TP[Mop
                    (SE F64,
                     Bop
                       (Add,
                        EX(Mop
                             (Fst,
                              Apply
                                (Call
                                   ("GPR",ATy(qTy,PTy(F64,qTy)),
                                    Var("rs",FTy 5)),qVar"s")),LN 31,LN 0,
                           F32),Mop(SE F32,Var("immediate",F16)))),
                  Var("rt",FTy 5)]),qVar"s"))))
;

val dfn'DADDI_def = Def
  ("dfn'DADDI",TP[Var("rs",FTy 5),Var("rt",FTy 5),Var("immediate",F16)],
   Close
     (qVar"state",
      Let
        (Var("v",FTy 65),
         Bop
           (Add,
            Mop
              (SE(FTy 65),
               Mop
                 (Fst,
                  Apply
                    (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                     qVar"state"))),Mop(SE(FTy 65),Var("immediate",F16))),
         ITE
           (Mop
              (Not,
               EQ(Bop(Bit,Var("v",FTy 65),LN 64),
                  Bop(Bit,Var("v",FTy 65),LN 63))),
            Apply
              (Call
                 ("SignalException",ATy(qTy,PTy(uTy,qTy)),
                  LC("Ov",CTy"ExceptionType")),qVar"state"),
            Apply
              (Call
                 ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
                  TP[EX(Var("v",FTy 65),LN 63,LN 0,F64),Var("rt",FTy 5)]),
               qVar"state")))))
;

val dfn'DADDIU_def = Def
  ("dfn'DADDIU",TP[Var("rs",FTy 5),Var("rt",FTy 5),Var("immediate",F16)],
   Close
     (qVar"state",
      Apply
        (Call
           ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
            TP[Bop
                 (Add,
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                        qVar"state")),Mop(SE F64,Var("immediate",F16))),
               Var("rt",FTy 5)]),qVar"state")))
;

val dfn'SLTI_def = Def
  ("dfn'SLTI",TP[Var("rs",FTy 5),Var("rt",FTy 5),Var("immediate",F16)],
   Close
     (qVar"state",
      Apply
        (Call
           ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
            TP[Mop
                 (Cast F64,
                  Bop
                    (Lt,
                     Mop
                       (Fst,
                        Apply
                          (Call
                             ("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                           qVar"state")),Mop(SE F64,Var("immediate",F16)))),
               Var("rt",FTy 5)]),qVar"state")))
;

val dfn'SLTIU_def = Def
  ("dfn'SLTIU",TP[Var("rs",FTy 5),Var("rt",FTy 5),Var("immediate",F16)],
   Close
     (qVar"state",
      Apply
        (Call
           ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
            TP[Mop
                 (Cast F64,
                  Bop
                    (Ult,
                     Mop
                       (Fst,
                        Apply
                          (Call
                             ("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                           qVar"state")),Mop(SE F64,Var("immediate",F16)))),
               Var("rt",FTy 5)]),qVar"state")))
;

val dfn'ANDI_def = Def
  ("dfn'ANDI",TP[Var("rs",FTy 5),Var("rt",FTy 5),Var("immediate",F16)],
   Close
     (qVar"state",
      Apply
        (Call
           ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
            TP[Bop
                 (BAnd,
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                        qVar"state")),Mop(Cast F64,Var("immediate",F16))),
               Var("rt",FTy 5)]),qVar"state")))
;

val dfn'ORI_def = Def
  ("dfn'ORI",TP[Var("rs",FTy 5),Var("rt",FTy 5),Var("immediate",F16)],
   Close
     (qVar"state",
      Apply
        (Call
           ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
            TP[Bop
                 (BOr,
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                        qVar"state")),Mop(Cast F64,Var("immediate",F16))),
               Var("rt",FTy 5)]),qVar"state")))
;

val dfn'XORI_def = Def
  ("dfn'XORI",TP[Var("rs",FTy 5),Var("rt",FTy 5),Var("immediate",F16)],
   Close
     (qVar"state",
      Apply
        (Call
           ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
            TP[Bop
                 (BXor,
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                        qVar"state")),Mop(Cast F64,Var("immediate",F16))),
               Var("rt",FTy 5)]),qVar"state")))
;

val dfn'LUI_def = Def
  ("dfn'LUI",TP[Var("rt",FTy 5),Var("immediate",F16)],
   Close
     (qVar"state",
      Apply
        (Call
           ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
            TP[Mop(SE F64,CC[Var("immediate",F16),LW(0,16)]),
               Var("rt",FTy 5)]),qVar"state")))
;

val dfn'ADD_def = Def
  ("dfn'ADD",TP[Var("rs",FTy 5),Var("rt",FTy 5),Var("rd",FTy 5)],
   Close
     (qVar"state",
      Let
        (qVar"s",
         ITE
           (Bop
              (Or,
               Call
                 ("NotWordValue",bTy,
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                        qVar"state"))),
               Call
                 ("NotWordValue",bTy,
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                        qVar"state")))),
            Mop
              (Snd,
               Apply
                 (Call
                    ("raise'exception",ATy(qTy,PTy(uTy,qTy)),
                     Call
                       ("UNPREDICTABLE",CTy"exception",
                        LS"ADD: NotWordValue")),qVar"state")),qVar"state"),
         Let
           (Var("v",FTy 33),
            Bop
              (Add,
               EX(Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                        qVar"s")),LN 32,LN 0,FTy 33),
               EX(Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                        qVar"s")),LN 32,LN 0,FTy 33)),
            ITE
              (Mop
                 (Not,
                  EQ(Bop(Bit,Var("v",FTy 33),LN 32),
                     Bop(Bit,Var("v",FTy 33),LN 31))),
               Apply
                 (Call
                    ("SignalException",ATy(qTy,PTy(uTy,qTy)),
                     LC("Ov",CTy"ExceptionType")),qVar"s"),
               Apply
                 (Call
                    ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
                     TP[Mop(SE F64,EX(Var("v",FTy 33),LN 31,LN 0,F32)),
                        Var("rd",FTy 5)]),qVar"s"))))))
;

val dfn'ADDU_def = Def
  ("dfn'ADDU",TP[Var("rs",FTy 5),Var("rt",FTy 5),Var("rd",FTy 5)],
   Close
     (qVar"state",
      Let
        (qVar"s",
         ITE
           (Bop
              (Or,
               Call
                 ("NotWordValue",bTy,
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                        qVar"state"))),
               Call
                 ("NotWordValue",bTy,
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                        qVar"state")))),
            Mop
              (Snd,
               Apply
                 (Call
                    ("raise'exception",ATy(qTy,PTy(uTy,qTy)),
                     Call
                       ("UNPREDICTABLE",CTy"exception",
                        LS"ADDU: NotWordValue")),qVar"state")),
            qVar"state"),
         Apply
           (Call
              ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
               TP[Mop
                    (SE F64,
                     Bop
                       (Add,
                        EX(Mop
                             (Fst,
                              Apply
                                (Call
                                   ("GPR",ATy(qTy,PTy(F64,qTy)),
                                    Var("rs",FTy 5)),qVar"s")),LN 31,LN 0,
                           F32),
                        EX(Mop
                             (Fst,
                              Apply
                                (Call
                                   ("GPR",ATy(qTy,PTy(F64,qTy)),
                                    Var("rt",FTy 5)),qVar"s")),LN 31,LN 0,
                           F32))),Var("rd",FTy 5)]),qVar"s"))))
;

val dfn'SUB_def = Def
  ("dfn'SUB",TP[Var("rs",FTy 5),Var("rt",FTy 5),Var("rd",FTy 5)],
   Close
     (qVar"state",
      Let
        (qVar"s",
         ITE
           (Bop
              (Or,
               Call
                 ("NotWordValue",bTy,
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                        qVar"state"))),
               Call
                 ("NotWordValue",bTy,
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                        qVar"state")))),
            Mop
              (Snd,
               Apply
                 (Call
                    ("raise'exception",ATy(qTy,PTy(uTy,qTy)),
                     Call
                       ("UNPREDICTABLE",CTy"exception",
                        LS"SUB: NotWordValue")),qVar"state")),qVar"state"),
         Let
           (Var("v",FTy 33),
            Bop
              (Sub,
               EX(Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                        qVar"s")),LN 32,LN 0,FTy 33),
               EX(Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                        qVar"s")),LN 32,LN 0,FTy 33)),
            ITE
              (Mop
                 (Not,
                  EQ(Bop(Bit,Var("v",FTy 33),LN 32),
                     Bop(Bit,Var("v",FTy 33),LN 31))),
               Apply
                 (Call
                    ("SignalException",ATy(qTy,PTy(uTy,qTy)),
                     LC("Ov",CTy"ExceptionType")),qVar"s"),
               Apply
                 (Call
                    ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
                     TP[Mop(SE F64,EX(Var("v",FTy 33),LN 31,LN 0,F32)),
                        Var("rd",FTy 5)]),qVar"s"))))))
;

val dfn'SUBU_def = Def
  ("dfn'SUBU",TP[Var("rs",FTy 5),Var("rt",FTy 5),Var("rd",FTy 5)],
   Close
     (qVar"state",
      Let
        (qVar"s",
         ITE
           (Bop
              (Or,
               Call
                 ("NotWordValue",bTy,
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                        qVar"state"))),
               Call
                 ("NotWordValue",bTy,
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                        qVar"state")))),
            Mop
              (Snd,
               Apply
                 (Call
                    ("raise'exception",ATy(qTy,PTy(uTy,qTy)),
                     Call
                       ("UNPREDICTABLE",CTy"exception",
                        LS"SUBU: NotWordValue")),qVar"state")),
            qVar"state"),
         Apply
           (Call
              ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
               TP[Mop
                    (SE F64,
                     Bop
                       (Sub,
                        EX(Mop
                             (Fst,
                              Apply
                                (Call
                                   ("GPR",ATy(qTy,PTy(F64,qTy)),
                                    Var("rs",FTy 5)),qVar"s")),LN 32,LN 0,
                           FTy 33),
                        EX(Mop
                             (Fst,
                              Apply
                                (Call
                                   ("GPR",ATy(qTy,PTy(F64,qTy)),
                                    Var("rt",FTy 5)),qVar"s")),LN 32,LN 0,
                           FTy 33))),Var("rd",FTy 5)]),qVar"s"))))
;

val dfn'DADD_def = Def
  ("dfn'DADD",TP[Var("rs",FTy 5),Var("rt",FTy 5),Var("rd",FTy 5)],
   Close
     (qVar"state",
      Let
        (Var("v",FTy 65),
         Bop
           (Add,
            Mop
              (SE(FTy 65),
               Mop
                 (Fst,
                  Apply
                    (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                     qVar"state"))),
            Mop
              (SE(FTy 65),
               Mop
                 (Fst,
                  Apply
                    (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                     qVar"state")))),
         ITE
           (Mop
              (Not,
               EQ(Bop(Bit,Var("v",FTy 65),LN 64),
                  Bop(Bit,Var("v",FTy 65),LN 63))),
            Apply
              (Call
                 ("SignalException",ATy(qTy,PTy(uTy,qTy)),
                  LC("Ov",CTy"ExceptionType")),qVar"state"),
            Apply
              (Call
                 ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
                  TP[EX(Var("v",FTy 65),LN 63,LN 0,F64),Var("rd",FTy 5)]),
               qVar"state")))))
;

val dfn'DADDU_def = Def
  ("dfn'DADDU",TP[Var("rs",FTy 5),Var("rt",FTy 5),Var("rd",FTy 5)],
   Close
     (qVar"state",
      Apply
        (Call
           ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
            TP[Bop
                 (Add,
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                        qVar"state")),
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                        qVar"state"))),Var("rd",FTy 5)]),qVar"state")))
;

val dfn'DSUB_def = Def
  ("dfn'DSUB",TP[Var("rs",FTy 5),Var("rt",FTy 5),Var("rd",FTy 5)],
   Close
     (qVar"state",
      Let
        (Var("v",FTy 65),
         Bop
           (Sub,
            Mop
              (SE(FTy 65),
               Mop
                 (Fst,
                  Apply
                    (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                     qVar"state"))),
            Mop
              (SE(FTy 65),
               Mop
                 (Fst,
                  Apply
                    (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                     qVar"state")))),
         ITE
           (Mop
              (Not,
               EQ(Bop(Bit,Var("v",FTy 65),LN 64),
                  Bop(Bit,Var("v",FTy 65),LN 63))),
            Apply
              (Call
                 ("SignalException",ATy(qTy,PTy(uTy,qTy)),
                  LC("Ov",CTy"ExceptionType")),qVar"state"),
            Apply
              (Call
                 ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
                  TP[EX(Var("v",FTy 65),LN 63,LN 0,F64),Var("rd",FTy 5)]),
               qVar"state")))))
;

val dfn'DSUBU_def = Def
  ("dfn'DSUBU",TP[Var("rs",FTy 5),Var("rt",FTy 5),Var("rd",FTy 5)],
   Close
     (qVar"state",
      Apply
        (Call
           ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
            TP[Bop
                 (Sub,
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                        qVar"state")),
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                        qVar"state"))),Var("rd",FTy 5)]),qVar"state")))
;

val dfn'SLT_def = Def
  ("dfn'SLT",TP[Var("rs",FTy 5),Var("rt",FTy 5),Var("rd",FTy 5)],
   Close
     (qVar"state",
      Apply
        (Call
           ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
            TP[Mop
                 (Cast F64,
                  Bop
                    (Lt,
                     Mop
                       (Fst,
                        Apply
                          (Call
                             ("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                           qVar"state")),
                     Mop
                       (Fst,
                        Apply
                          (Call
                             ("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                           qVar"state")))),Var("rd",FTy 5)]),qVar"state")))
;

val dfn'SLTU_def = Def
  ("dfn'SLTU",TP[Var("rs",FTy 5),Var("rt",FTy 5),Var("rd",FTy 5)],
   Close
     (qVar"state",
      Apply
        (Call
           ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
            TP[Mop
                 (Cast F64,
                  Bop
                    (Ult,
                     Mop
                       (Fst,
                        Apply
                          (Call
                             ("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                           qVar"state")),
                     Mop
                       (Fst,
                        Apply
                          (Call
                             ("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                           qVar"state")))),Var("rd",FTy 5)]),qVar"state")))
;

val dfn'AND_def = Def
  ("dfn'AND",TP[Var("rs",FTy 5),Var("rt",FTy 5),Var("rd",FTy 5)],
   Close
     (qVar"state",
      Apply
        (Call
           ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
            TP[Bop
                 (BAnd,
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                        qVar"state")),
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                        qVar"state"))),Var("rd",FTy 5)]),qVar"state")))
;

val dfn'OR_def = Def
  ("dfn'OR",TP[Var("rs",FTy 5),Var("rt",FTy 5),Var("rd",FTy 5)],
   Close
     (qVar"state",
      Apply
        (Call
           ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
            TP[Bop
                 (BOr,
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                        qVar"state")),
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                        qVar"state"))),Var("rd",FTy 5)]),qVar"state")))
;

val dfn'XOR_def = Def
  ("dfn'XOR",TP[Var("rs",FTy 5),Var("rt",FTy 5),Var("rd",FTy 5)],
   Close
     (qVar"state",
      Apply
        (Call
           ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
            TP[Bop
                 (BXor,
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                        qVar"state")),
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                        qVar"state"))),Var("rd",FTy 5)]),qVar"state")))
;

val dfn'NOR_def = Def
  ("dfn'NOR",TP[Var("rs",FTy 5),Var("rt",FTy 5),Var("rd",FTy 5)],
   Close
     (qVar"state",
      Apply
        (Call
           ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
            TP[Mop
                 (BNot,
                  Bop
                    (BOr,
                     Mop
                       (Fst,
                        Apply
                          (Call
                             ("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                           qVar"state")),
                     Mop
                       (Fst,
                        Apply
                          (Call
                             ("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                           qVar"state")))),Var("rd",FTy 5)]),qVar"state")))
;

val dfn'MULT_def = Def
  ("dfn'MULT",TP[Var("rs",FTy 5),Var("rt",FTy 5)],
   Close
     (qVar"state",
      Let
        (qVar"s",
         ITE
           (Bop
              (Or,
               Call
                 ("NotWordValue",bTy,
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                        qVar"state"))),
               Call
                 ("NotWordValue",bTy,
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                        qVar"state")))),
            Mop
              (Snd,
               Apply
                 (Call
                    ("raise'exception",ATy(qTy,PTy(uTy,qTy)),
                     Call
                       ("UNPREDICTABLE",CTy"exception",
                        LS"MULT: NotWordValue")),qVar"state")),
            qVar"state"),
         Let
           (Var("v",F64),
            Bop
              (Mul,
               Mop
                 (SE F64,
                  EX(Mop
                       (Fst,
                        Apply
                          (Call
                             ("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                           qVar"s")),LN 31,LN 0,F32)),
               Mop
                 (SE F64,
                  EX(Mop
                       (Fst,
                        Apply
                          (Call
                             ("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                           qVar"s")),LN 31,LN 0,F32))),
            TP[LU,
               Rupd
                 ("HLStatus",
                  TP[Rupd
                       ("HI",
                        TP[Rupd
                             ("LO",
                              TP[qVar"s",
                                 Mop
                                   (SE F64,
                                    EX(Var("v",F64),LN 31,LN 0,F32))]),
                           Mop(SE F64,EX(Var("v",F64),LN 63,LN 32,F32))]),
                     LC("HLarith",CTy"HLStatus")])]))))
;

val dfn'MULTU_def = Def
  ("dfn'MULTU",TP[Var("rs",FTy 5),Var("rt",FTy 5)],
   Close
     (qVar"state",
      Let
        (qVar"s",
         ITE
           (Bop
              (Or,
               Call
                 ("NotWordValue",bTy,
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                        qVar"state"))),
               Call
                 ("NotWordValue",bTy,
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                        qVar"state")))),
            Mop
              (Snd,
               Apply
                 (Call
                    ("raise'exception",ATy(qTy,PTy(uTy,qTy)),
                     Call
                       ("UNPREDICTABLE",CTy"exception",
                        LS"MULTU: NotWordValue")),qVar"state")),
            qVar"state"),
         Let
           (Var("v",F64),
            Bop
              (Mul,
               Mop
                 (Cast F64,
                  EX(Mop
                       (Fst,
                        Apply
                          (Call
                             ("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                           qVar"s")),LN 31,LN 0,F32)),
               Mop
                 (Cast F64,
                  EX(Mop
                       (Fst,
                        Apply
                          (Call
                             ("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                           qVar"s")),LN 31,LN 0,F32))),
            TP[LU,
               Rupd
                 ("HLStatus",
                  TP[Rupd
                       ("HI",
                        TP[Rupd
                             ("LO",
                              TP[qVar"s",
                                 Mop
                                   (SE F64,
                                    EX(Var("v",F64),LN 31,LN 0,F32))]),
                           Mop(SE F64,EX(Var("v",F64),LN 63,LN 32,F32))]),
                     LC("HLarith",CTy"HLStatus")])]))))
;

val dfn'DMULT_def = Def
  ("dfn'DMULT",TP[Var("rs",FTy 5),Var("rt",FTy 5)],
   Close
     (qVar"state",
      Let
        (Var("v",FTy 128),
         Bop
           (Mul,
            Mop
              (SE(FTy 128),
               Mop
                 (Fst,
                  Apply
                    (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                     qVar"state"))),
            Mop
              (SE(FTy 128),
               Mop
                 (Fst,
                  Apply
                    (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                     qVar"state")))),
         TP[LU,
            Rupd
              ("HLStatus",
               TP[Rupd
                    ("HI",
                     TP[Rupd
                          ("LO",
                           TP[qVar"state",
                              EX(Var("v",FTy 128),LN 63,LN 0,F64)]),
                        EX(Var("v",FTy 128),LN 127,LN 64,F64)]),
                  LC("HLarith",CTy"HLStatus")])])))
;

val dfn'DMULTU_def = Def
  ("dfn'DMULTU",TP[Var("rs",FTy 5),Var("rt",FTy 5)],
   Close
     (qVar"state",
      Let
        (Var("v",FTy 128),
         Bop
           (Mul,
            Mop
              (Cast(FTy 128),
               Mop
                 (Fst,
                  Apply
                    (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                     qVar"state"))),
            Mop
              (Cast(FTy 128),
               Mop
                 (Fst,
                  Apply
                    (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                     qVar"state")))),
         TP[LU,
            Rupd
              ("HLStatus",
               TP[Rupd
                    ("HI",
                     TP[Rupd
                          ("LO",
                           TP[qVar"state",
                              EX(Var("v",FTy 128),LN 63,LN 0,F64)]),
                        EX(Var("v",FTy 128),LN 127,LN 64,F64)]),
                  LC("HLarith",CTy"HLStatus")])])))
;

val dfn'DIV_def = Def
  ("dfn'DIV",TP[Var("rs",FTy 5),Var("rt",FTy 5)],
   Close
     (qVar"state",
      Let
        (qVar"s",
         ITE
           (EQ(Mop
                 (Fst,
                  Apply
                    (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                     qVar"state")),LW(0,64)),
            Mop
              (Snd,
               Apply
                 (Call
                    ("raise'exception",ATy(qTy,PTy(uTy,qTy)),
                     Call
                       ("UNPREDICTABLE",CTy"exception",
                        LS"DIV: divide by zero")),qVar"state")),
            qVar"state"),
         Let
           (qVar"s",
            ITE
              (Bop
                 (Or,
                  Call
                    ("NotWordValue",bTy,
                     Mop
                       (Fst,
                        Apply
                          (Call
                             ("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                           qVar"s"))),
                  Call
                    ("NotWordValue",bTy,
                     Mop
                       (Fst,
                        Apply
                          (Call
                             ("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                           qVar"s")))),
               Mop
                 (Snd,
                  Apply
                    (Call
                       ("raise'exception",ATy(qTy,PTy(uTy,qTy)),
                        Call
                          ("UNPREDICTABLE",CTy"exception",
                           LS"DIV: NotWordValue")),qVar"s")),qVar"s"),
            Let
              (qVar"s",
               Rupd
                 ("LO",
                  TP[qVar"s",
                     Mop
                       (SE F64,
                        Bop
                          (Quot,
                           EX(Mop
                                (Fst,
                                 Apply
                                   (Call
                                      ("GPR",ATy(qTy,PTy(F64,qTy)),
                                       Var("rs",FTy 5)),qVar"s")),LN 31,
                              LN 0,F32),
                           EX(Mop
                                (Fst,
                                 Apply
                                   (Call
                                      ("GPR",ATy(qTy,PTy(F64,qTy)),
                                       Var("rt",FTy 5)),qVar"s")),LN 31,
                              LN 0,F32)))]),
               TP[LU,
                  Rupd
                    ("HLStatus",
                     TP[Rupd
                          ("HI",
                           TP[qVar"s",
                              Mop
                                (SE F64,
                                 Bop
                                   (Rem,
                                    EX(Mop
                                         (Fst,
                                          Apply
                                            (Call
                                               ("GPR",
                                                ATy(qTy,PTy(F64,qTy)),
                                                Var("rs",FTy 5)),qVar"s")),
                                       LN 31,LN 0,F32),
                                    EX(Mop
                                         (Fst,
                                          Apply
                                            (Call
                                               ("GPR",
                                                ATy(qTy,PTy(F64,qTy)),
                                                Var("rt",FTy 5)),qVar"s")),
                                       LN 31,LN 0,F32)))]),
                        LC("HLarith",CTy"HLStatus")])])))))
;

val dfn'DIVU_def = Def
  ("dfn'DIVU",TP[Var("rs",FTy 5),Var("rt",FTy 5)],
   Close
     (qVar"state",
      Let
        (qVar"s",
         ITE
           (EQ(Mop
                 (Fst,
                  Apply
                    (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                     qVar"state")),LW(0,64)),
            Mop
              (Snd,
               Apply
                 (Call
                    ("raise'exception",ATy(qTy,PTy(uTy,qTy)),
                     Call
                       ("UNPREDICTABLE",CTy"exception",
                        LS"DIVU: divide by zero")),qVar"state")),
            qVar"state"),
         Let
           (qVar"s",
            ITE
              (Bop
                 (Or,
                  Call
                    ("NotWordValue",bTy,
                     Mop
                       (Fst,
                        Apply
                          (Call
                             ("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                           qVar"s"))),
                  Call
                    ("NotWordValue",bTy,
                     Mop
                       (Fst,
                        Apply
                          (Call
                             ("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                           qVar"s")))),
               Mop
                 (Snd,
                  Apply
                    (Call
                       ("raise'exception",ATy(qTy,PTy(uTy,qTy)),
                        Call
                          ("UNPREDICTABLE",CTy"exception",
                           LS"DIVU: NotWordValue")),qVar"s")),qVar"s"),
            TP[LU,
               Rupd
                 ("HLStatus",
                  TP[Rupd
                       ("HI",
                        TP[Rupd
                             ("LO",
                              TP[qVar"s",
                                 Mop
                                   (SE F64,
                                    Bop
                                      (Div,
                                       EX(Mop
                                            (Fst,
                                             Apply
                                               (Call
                                                  ("GPR",
                                                   ATy(qTy,PTy(F64,qTy)),
                                                   Var("rs",FTy 5)),
                                                qVar"s")),LN 31,LN 0,F32),
                                       EX(Mop
                                            (Fst,
                                             Apply
                                               (Call
                                                  ("GPR",
                                                   ATy(qTy,PTy(F64,qTy)),
                                                   Var("rt",FTy 5)),
                                                qVar"s")),LN 31,LN 0,F32)))]),
                           Mop
                             (SE F64,
                              Bop
                                (Mod,
                                 EX(Mop
                                      (Fst,
                                       Apply
                                         (Call
                                            ("GPR",ATy(qTy,PTy(F64,qTy)),
                                             Var("rs",FTy 5)),qVar"s")),
                                    LN 31,LN 0,F32),
                                 EX(Mop
                                      (Fst,
                                       Apply
                                         (Call
                                            ("GPR",ATy(qTy,PTy(F64,qTy)),
                                             Var("rt",FTy 5)),qVar"s")),
                                    LN 31,LN 0,F32)))]),
                     LC("HLarith",CTy"HLStatus")])]))))
;

val dfn'DDIV_def = Def
  ("dfn'DDIV",TP[Var("rs",FTy 5),Var("rt",FTy 5)],
   Close
     (qVar"state",
      Let
        (qVar"s",
         ITE
           (EQ(Mop
                 (Fst,
                  Apply
                    (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                     qVar"state")),LW(0,64)),
            Mop
              (Snd,
               Apply
                 (Call
                    ("raise'exception",ATy(qTy,PTy(uTy,qTy)),
                     Call
                       ("UNPREDICTABLE",CTy"exception",
                        LS"DDIV: divide by zero")),qVar"state")),
            qVar"state"),
         Let
           (qVar"s",
            Rupd
              ("LO",
               TP[qVar"s",
                  Bop
                    (Quot,
                     Mop
                       (Fst,
                        Apply
                          (Call
                             ("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                           qVar"s")),
                     Mop
                       (Fst,
                        Apply
                          (Call
                             ("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                           qVar"s")))]),
            TP[LU,
               Rupd
                 ("HLStatus",
                  TP[Rupd
                       ("HI",
                        TP[qVar"s",
                           Bop
                             (Rem,
                              Mop
                                (Fst,
                                 Apply
                                   (Call
                                      ("GPR",ATy(qTy,PTy(F64,qTy)),
                                       Var("rs",FTy 5)),qVar"s")),
                              Mop
                                (Fst,
                                 Apply
                                   (Call
                                      ("GPR",ATy(qTy,PTy(F64,qTy)),
                                       Var("rt",FTy 5)),qVar"s")))]),
                     LC("HLarith",CTy"HLStatus")])]))))
;

val dfn'DDIVU_def = Def
  ("dfn'DDIVU",TP[Var("rs",FTy 5),Var("rt",FTy 5)],
   Close
     (qVar"state",
      Let
        (qVar"s",
         ITE
           (EQ(Mop
                 (Fst,
                  Apply
                    (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                     qVar"state")),LW(0,64)),
            Mop
              (Snd,
               Apply
                 (Call
                    ("raise'exception",ATy(qTy,PTy(uTy,qTy)),
                     Call
                       ("UNPREDICTABLE",CTy"exception",
                        LS"DDIVU: divide by zero")),qVar"state")),
            qVar"state"),
         Let
           (qVar"s",
            Rupd
              ("LO",
               TP[qVar"s",
                  Bop
                    (Div,
                     Mop
                       (Fst,
                        Apply
                          (Call
                             ("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                           qVar"s")),
                     Mop
                       (Fst,
                        Apply
                          (Call
                             ("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                           qVar"s")))]),
            TP[LU,
               Rupd
                 ("HLStatus",
                  TP[Rupd
                       ("HI",
                        TP[qVar"s",
                           Bop
                             (Mod,
                              Mop
                                (Fst,
                                 Apply
                                   (Call
                                      ("GPR",ATy(qTy,PTy(F64,qTy)),
                                       Var("rs",FTy 5)),qVar"s")),
                              Mop
                                (Fst,
                                 Apply
                                   (Call
                                      ("GPR",ATy(qTy,PTy(F64,qTy)),
                                       Var("rt",FTy 5)),qVar"s")))]),
                     LC("HLarith",CTy"HLStatus")])]))))
;

val dfn'MFHI_def = Def
  ("dfn'MFHI",Var("rd",FTy 5),
   Close
     (qVar"state",
      Let
        (qVar"s",
         ITE
           (EQ(Dest("HLStatus",CTy"HLStatus",qVar"state"),
               LC("HLmtlo",CTy"HLStatus")),
            Mop
              (Snd,
               Apply
                 (Call
                    ("raise'exception",ATy(qTy,PTy(uTy,qTy)),
                     Call("UNPREDICTABLE",CTy"exception",LS"MFHI")),
                  qVar"state")),qVar"state"),
         Let
           (qVar"s",
            ITE
              (EQ(Dest("HLStatus",CTy"HLStatus",qVar"s"),
                  LC("HLarith",CTy"HLStatus")),
               Rupd("HLStatus",TP[qVar"s",LC("HLok",CTy"HLStatus")]),
               qVar"s"),
            Apply
              (Call
                 ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
                  TP[Dest("HI",F64,qVar"s"),Var("rd",FTy 5)]),qVar"s")))))
;

val dfn'MFLO_def = Def
  ("dfn'MFLO",Var("rd",FTy 5),
   Close
     (qVar"state",
      Let
        (qVar"s",
         ITE
           (EQ(Dest("HLStatus",CTy"HLStatus",qVar"state"),
               LC("HLmthi",CTy"HLStatus")),
            Mop
              (Snd,
               Apply
                 (Call
                    ("raise'exception",ATy(qTy,PTy(uTy,qTy)),
                     Call("UNPREDICTABLE",CTy"exception",LS"MFLO")),
                  qVar"state")),qVar"state"),
         Let
           (qVar"s",
            ITE
              (EQ(Dest("HLStatus",CTy"HLStatus",qVar"s"),
                  LC("HLarith",CTy"HLStatus")),
               Rupd("HLStatus",TP[qVar"s",LC("HLok",CTy"HLStatus")]),
               qVar"s"),
            Apply
              (Call
                 ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
                  TP[Dest("LO",F64,qVar"s"),Var("rd",FTy 5)]),qVar"s")))))
;

val dfn'MTHI_def = Def
  ("dfn'MTHI",Var("rd",FTy 5),
   Close
     (qVar"state",
      Let
        (qVar"s",
         ITB
           ([(EQ(Dest("HLStatus",CTy"HLStatus",qVar"state"),
                 LC("HLarith",CTy"HLStatus")),
              Rupd("HLStatus",TP[qVar"state",LC("HLmthi",CTy"HLStatus")])),
             (EQ(Dest("HLStatus",CTy"HLStatus",qVar"state"),
                 LC("HLmtlo",CTy"HLStatus")),
              Rupd("HLStatus",TP[qVar"state",LC("HLok",CTy"HLStatus")]))],
            qVar"state"),
         TP[LU,
            Rupd
              ("HI",
               TP[qVar"s",
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rd",FTy 5)),
                        qVar"s"))])])))
;

val dfn'MTLO_def = Def
  ("dfn'MTLO",Var("rd",FTy 5),
   Close
     (qVar"state",
      Let
        (qVar"s",
         ITB
           ([(EQ(Dest("HLStatus",CTy"HLStatus",qVar"state"),
                 LC("HLarith",CTy"HLStatus")),
              Rupd("HLStatus",TP[qVar"state",LC("HLmtlo",CTy"HLStatus")])),
             (EQ(Dest("HLStatus",CTy"HLStatus",qVar"state"),
                 LC("HLmthi",CTy"HLStatus")),
              Rupd("HLStatus",TP[qVar"state",LC("HLok",CTy"HLStatus")]))],
            qVar"state"),
         TP[LU,
            Rupd
              ("LO",
               TP[qVar"s",
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rd",FTy 5)),
                        qVar"s"))])])))
;

val dfn'SLL_def = Def
  ("dfn'SLL",TP[Var("rt",FTy 5),Var("rd",FTy 5),Var("sa",FTy 5)],
   Close
     (qVar"state",
      Apply
        (Call
           ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
            TP[Mop
                 (SE F64,
                  Bop
                    (Lsl,
                     EX(Mop
                          (Fst,
                           Apply
                             (Call
                                ("GPR",ATy(qTy,PTy(F64,qTy)),
                                 Var("rt",FTy 5)),qVar"state")),LN 31,
                        LN 0,F32),Mop(Cast nTy,Var("sa",FTy 5)))),
               Var("rd",FTy 5)]),qVar"state")))
;

val dfn'SRL_def = Def
  ("dfn'SRL",TP[Var("rt",FTy 5),Var("rd",FTy 5),Var("sa",FTy 5)],
   Close
     (qVar"state",
      Let
        (qVar"s",
         ITE
           (Call
              ("NotWordValue",bTy,
               Mop
                 (Fst,
                  Apply
                    (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                     qVar"state"))),
            Mop
              (Snd,
               Apply
                 (Call
                    ("raise'exception",ATy(qTy,PTy(uTy,qTy)),
                     Call
                       ("UNPREDICTABLE",CTy"exception",
                        LS"SRL: NotWordValue")),qVar"state")),qVar"state"),
         Apply
           (Call
              ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
               TP[Mop
                    (SE F64,
                     Bop
                       (Lsr,
                        EX(Mop
                             (Fst,
                              Apply
                                (Call
                                   ("GPR",ATy(qTy,PTy(F64,qTy)),
                                    Var("rt",FTy 5)),qVar"s")),LN 31,LN 0,
                           F32),Mop(Cast nTy,Var("sa",FTy 5)))),
                  Var("rd",FTy 5)]),qVar"s"))))
;

val dfn'SRA_def = Def
  ("dfn'SRA",TP[Var("rt",FTy 5),Var("rd",FTy 5),Var("sa",FTy 5)],
   Close
     (qVar"state",
      Let
        (qVar"s",
         ITE
           (Call
              ("NotWordValue",bTy,
               Mop
                 (Fst,
                  Apply
                    (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                     qVar"state"))),
            Mop
              (Snd,
               Apply
                 (Call
                    ("raise'exception",ATy(qTy,PTy(uTy,qTy)),
                     Call
                       ("UNPREDICTABLE",CTy"exception",
                        LS"SRA: NotWordValue")),qVar"state")),qVar"state"),
         Apply
           (Call
              ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
               TP[Mop
                    (SE F64,
                     Bop
                       (Asr,
                        EX(Mop
                             (Fst,
                              Apply
                                (Call
                                   ("GPR",ATy(qTy,PTy(F64,qTy)),
                                    Var("rt",FTy 5)),qVar"s")),LN 31,LN 0,
                           F32),Mop(Cast nTy,Var("sa",FTy 5)))),
                  Var("rd",FTy 5)]),qVar"s"))))
;

val dfn'SLLV_def = Def
  ("dfn'SLLV",TP[Var("rs",FTy 5),Var("rt",FTy 5),Var("rd",FTy 5)],
   Close
     (qVar"state",
      Apply
        (Call
           ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
            TP[Mop
                 (SE F64,
                  Bop
                    (Lsl,
                     EX(Mop
                          (Fst,
                           Apply
                             (Call
                                ("GPR",ATy(qTy,PTy(F64,qTy)),
                                 Var("rt",FTy 5)),qVar"state")),LN 31,
                        LN 0,F32),
                     Mop
                       (Cast nTy,
                        EX(Mop
                             (Fst,
                              Apply
                                (Call
                                   ("GPR",ATy(qTy,PTy(F64,qTy)),
                                    Var("rs",FTy 5)),qVar"state")),LN 4,
                           LN 0,FTy 5)))),Var("rd",FTy 5)]),qVar"state")))
;

val dfn'SRLV_def = Def
  ("dfn'SRLV",TP[Var("rs",FTy 5),Var("rt",FTy 5),Var("rd",FTy 5)],
   Close
     (qVar"state",
      Let
        (qVar"s",
         ITE
           (Call
              ("NotWordValue",bTy,
               Mop
                 (Fst,
                  Apply
                    (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                     qVar"state"))),
            Mop
              (Snd,
               Apply
                 (Call
                    ("raise'exception",ATy(qTy,PTy(uTy,qTy)),
                     Call
                       ("UNPREDICTABLE",CTy"exception",
                        LS"SRLV: NotWordValue")),qVar"state")),
            qVar"state"),
         Apply
           (Call
              ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
               TP[Mop
                    (SE F64,
                     Bop
                       (Lsr,
                        EX(Mop
                             (Fst,
                              Apply
                                (Call
                                   ("GPR",ATy(qTy,PTy(F64,qTy)),
                                    Var("rt",FTy 5)),qVar"s")),LN 31,LN 0,
                           F32),
                        Mop
                          (Cast nTy,
                           EX(Mop
                                (Fst,
                                 Apply
                                   (Call
                                      ("GPR",ATy(qTy,PTy(F64,qTy)),
                                       Var("rs",FTy 5)),qVar"s")),LN 4,
                              LN 0,FTy 5)))),Var("rd",FTy 5)]),qVar"s"))))
;

val dfn'SRAV_def = Def
  ("dfn'SRAV",TP[Var("rs",FTy 5),Var("rt",FTy 5),Var("rd",FTy 5)],
   Close
     (qVar"state",
      Let
        (qVar"s",
         ITE
           (Call
              ("NotWordValue",bTy,
               Mop
                 (Fst,
                  Apply
                    (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                     qVar"state"))),
            Mop
              (Snd,
               Apply
                 (Call
                    ("raise'exception",ATy(qTy,PTy(uTy,qTy)),
                     Call
                       ("UNPREDICTABLE",CTy"exception",
                        LS"SRAV: NotWordValue")),qVar"state")),
            qVar"state"),
         Apply
           (Call
              ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
               TP[Mop
                    (SE F64,
                     Bop
                       (Asr,
                        EX(Mop
                             (Fst,
                              Apply
                                (Call
                                   ("GPR",ATy(qTy,PTy(F64,qTy)),
                                    Var("rt",FTy 5)),qVar"s")),LN 31,LN 0,
                           F32),
                        Mop
                          (Cast nTy,
                           EX(Mop
                                (Fst,
                                 Apply
                                   (Call
                                      ("GPR",ATy(qTy,PTy(F64,qTy)),
                                       Var("rs",FTy 5)),qVar"s")),LN 4,
                              LN 0,FTy 5)))),Var("rd",FTy 5)]),qVar"s"))))
;

val dfn'DSLL_def = Def
  ("dfn'DSLL",TP[Var("rt",FTy 5),Var("rd",FTy 5),Var("sa",FTy 5)],
   Close
     (qVar"state",
      Apply
        (Call
           ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
            TP[Bop
                 (Lsl,
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                        qVar"state")),Mop(Cast nTy,Var("sa",FTy 5))),
               Var("rd",FTy 5)]),qVar"state")))
;

val dfn'DSRL_def = Def
  ("dfn'DSRL",TP[Var("rt",FTy 5),Var("rd",FTy 5),Var("sa",FTy 5)],
   Close
     (qVar"state",
      Apply
        (Call
           ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
            TP[Bop
                 (Lsr,
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                        qVar"state")),Mop(Cast nTy,Var("sa",FTy 5))),
               Var("rd",FTy 5)]),qVar"state")))
;

val dfn'DSRA_def = Def
  ("dfn'DSRA",TP[Var("rt",FTy 5),Var("rd",FTy 5),Var("sa",FTy 5)],
   Close
     (qVar"state",
      Apply
        (Call
           ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
            TP[Bop
                 (Asr,
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                        qVar"state")),Mop(Cast nTy,Var("sa",FTy 5))),
               Var("rd",FTy 5)]),qVar"state")))
;

val dfn'DSLLV_def = Def
  ("dfn'DSLLV",TP[Var("rs",FTy 5),Var("rt",FTy 5),Var("rd",FTy 5)],
   Close
     (qVar"state",
      Apply
        (Call
           ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
            TP[Bop
                 (Lsl,
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                        qVar"state")),
                  Mop
                    (Cast nTy,
                     EX(Mop
                          (Fst,
                           Apply
                             (Call
                                ("GPR",ATy(qTy,PTy(F64,qTy)),
                                 Var("rs",FTy 5)),qVar"state")),LN 5,LN 0,
                        FTy 6))),Var("rd",FTy 5)]),qVar"state")))
;

val dfn'DSRLV_def = Def
  ("dfn'DSRLV",TP[Var("rs",FTy 5),Var("rt",FTy 5),Var("rd",FTy 5)],
   Close
     (qVar"state",
      Apply
        (Call
           ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
            TP[Bop
                 (Lsr,
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                        qVar"state")),
                  Mop
                    (Cast nTy,
                     EX(Mop
                          (Fst,
                           Apply
                             (Call
                                ("GPR",ATy(qTy,PTy(F64,qTy)),
                                 Var("rs",FTy 5)),qVar"state")),LN 5,LN 0,
                        FTy 6))),Var("rd",FTy 5)]),qVar"state")))
;

val dfn'DSRAV_def = Def
  ("dfn'DSRAV",TP[Var("rs",FTy 5),Var("rt",FTy 5),Var("rd",FTy 5)],
   Close
     (qVar"state",
      Apply
        (Call
           ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
            TP[Bop
                 (Asr,
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                        qVar"state")),
                  Mop
                    (Cast nTy,
                     EX(Mop
                          (Fst,
                           Apply
                             (Call
                                ("GPR",ATy(qTy,PTy(F64,qTy)),
                                 Var("rs",FTy 5)),qVar"state")),LN 5,LN 0,
                        FTy 6))),Var("rd",FTy 5)]),qVar"state")))
;

val dfn'DSLL32_def = Def
  ("dfn'DSLL32",TP[Var("rt",FTy 5),Var("rd",FTy 5),Var("sa",FTy 5)],
   Close
     (qVar"state",
      Apply
        (Call
           ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
            TP[Bop
                 (Lsl,
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                        qVar"state")),
                  Bop(Add,Mop(Cast nTy,Var("sa",FTy 5)),LN 32)),
               Var("rd",FTy 5)]),qVar"state")))
;

val dfn'DSRL32_def = Def
  ("dfn'DSRL32",TP[Var("rt",FTy 5),Var("rd",FTy 5),Var("sa",FTy 5)],
   Close
     (qVar"state",
      Apply
        (Call
           ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
            TP[Bop
                 (Lsr,
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                        qVar"state")),
                  Bop(Add,Mop(Cast nTy,Var("sa",FTy 5)),LN 32)),
               Var("rd",FTy 5)]),qVar"state")))
;

val dfn'DSRA32_def = Def
  ("dfn'DSRA32",TP[Var("rt",FTy 5),Var("rd",FTy 5),Var("sa",FTy 5)],
   Close
     (qVar"state",
      Apply
        (Call
           ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
            TP[Bop
                 (Asr,
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                        qVar"state")),
                  Bop(Add,Mop(Cast nTy,Var("sa",FTy 5)),LN 32)),
               Var("rd",FTy 5)]),qVar"state")))
;

val dfn'TGE_def = Def
  ("dfn'TGE",TP[Var("rs",FTy 5),Var("rt",FTy 5)],
   Close
     (qVar"state",
      ITE
        (Bop
           (Ge,
            Mop
              (Fst,
               Apply
                 (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                  qVar"state")),
            Mop
              (Fst,
               Apply
                 (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                  qVar"state"))),
         Apply
           (Call
              ("SignalException",ATy(qTy,PTy(uTy,qTy)),
               LC("Tr",CTy"ExceptionType")),qVar"state"),
         TP[LU,qVar"state"])))
;

val dfn'TGEU_def = Def
  ("dfn'TGEU",TP[Var("rs",FTy 5),Var("rt",FTy 5)],
   Close
     (qVar"state",
      ITE
        (Bop
           (Uge,
            Mop
              (Fst,
               Apply
                 (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                  qVar"state")),
            Mop
              (Fst,
               Apply
                 (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                  qVar"state"))),
         Apply
           (Call
              ("SignalException",ATy(qTy,PTy(uTy,qTy)),
               LC("Tr",CTy"ExceptionType")),qVar"state"),
         TP[LU,qVar"state"])))
;

val dfn'TLT_def = Def
  ("dfn'TLT",TP[Var("rs",FTy 5),Var("rt",FTy 5)],
   Close
     (qVar"state",
      ITE
        (Bop
           (Lt,
            Mop
              (Fst,
               Apply
                 (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                  qVar"state")),
            Mop
              (Fst,
               Apply
                 (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                  qVar"state"))),
         Apply
           (Call
              ("SignalException",ATy(qTy,PTy(uTy,qTy)),
               LC("Tr",CTy"ExceptionType")),qVar"state"),
         TP[LU,qVar"state"])))
;

val dfn'TLTU_def = Def
  ("dfn'TLTU",TP[Var("rs",FTy 5),Var("rt",FTy 5)],
   Close
     (qVar"state",
      ITE
        (Bop
           (Ult,
            Mop
              (Fst,
               Apply
                 (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                  qVar"state")),
            Mop
              (Fst,
               Apply
                 (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                  qVar"state"))),
         Apply
           (Call
              ("SignalException",ATy(qTy,PTy(uTy,qTy)),
               LC("Tr",CTy"ExceptionType")),qVar"state"),
         TP[LU,qVar"state"])))
;

val dfn'TEQ_def = Def
  ("dfn'TEQ",TP[Var("rs",FTy 5),Var("rt",FTy 5)],
   Close
     (qVar"state",
      ITE
        (EQ(Mop
              (Fst,
               Apply
                 (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                  qVar"state")),
            Mop
              (Fst,
               Apply
                 (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                  qVar"state"))),
         Apply
           (Call
              ("SignalException",ATy(qTy,PTy(uTy,qTy)),
               LC("Tr",CTy"ExceptionType")),qVar"state"),
         TP[LU,qVar"state"])))
;

val dfn'TNE_def = Def
  ("dfn'TNE",TP[Var("rs",FTy 5),Var("rt",FTy 5)],
   Close
     (qVar"state",
      ITE
        (Mop
           (Not,
            EQ(Mop
                 (Fst,
                  Apply
                    (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                     qVar"state")),
               Mop
                 (Fst,
                  Apply
                    (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                     qVar"state")))),
         Apply
           (Call
              ("SignalException",ATy(qTy,PTy(uTy,qTy)),
               LC("Tr",CTy"ExceptionType")),qVar"state"),
         TP[LU,qVar"state"])))
;

val dfn'TGEI_def = Def
  ("dfn'TGEI",TP[Var("rs",FTy 5),Var("immediate",F16)],
   Close
     (qVar"state",
      ITE
        (Bop
           (Ge,
            Mop
              (Fst,
               Apply
                 (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                  qVar"state")),Mop(SE F64,Var("immediate",F16))),
         Apply
           (Call
              ("SignalException",ATy(qTy,PTy(uTy,qTy)),
               LC("Tr",CTy"ExceptionType")),qVar"state"),
         TP[LU,qVar"state"])))
;

val dfn'TGEIU_def = Def
  ("dfn'TGEIU",TP[Var("rs",FTy 5),Var("immediate",F16)],
   Close
     (qVar"state",
      ITE
        (Bop
           (Uge,
            Mop
              (Fst,
               Apply
                 (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                  qVar"state")),Mop(SE F64,Var("immediate",F16))),
         Apply
           (Call
              ("SignalException",ATy(qTy,PTy(uTy,qTy)),
               LC("Tr",CTy"ExceptionType")),qVar"state"),
         TP[LU,qVar"state"])))
;

val dfn'TLTI_def = Def
  ("dfn'TLTI",TP[Var("rs",FTy 5),Var("immediate",F16)],
   Close
     (qVar"state",
      ITE
        (Bop
           (Lt,
            Mop
              (Fst,
               Apply
                 (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                  qVar"state")),Mop(SE F64,Var("immediate",F16))),
         Apply
           (Call
              ("SignalException",ATy(qTy,PTy(uTy,qTy)),
               LC("Tr",CTy"ExceptionType")),qVar"state"),
         TP[LU,qVar"state"])))
;

val dfn'TLTIU_def = Def
  ("dfn'TLTIU",TP[Var("rs",FTy 5),Var("immediate",F16)],
   Close
     (qVar"state",
      ITE
        (Bop
           (Ult,
            Mop
              (Fst,
               Apply
                 (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                  qVar"state")),Mop(SE F64,Var("immediate",F16))),
         Apply
           (Call
              ("SignalException",ATy(qTy,PTy(uTy,qTy)),
               LC("Tr",CTy"ExceptionType")),qVar"state"),
         TP[LU,qVar"state"])))
;

val dfn'TEQI_def = Def
  ("dfn'TEQI",TP[Var("rs",FTy 5),Var("immediate",F16)],
   Close
     (qVar"state",
      ITE
        (EQ(Mop
              (Fst,
               Apply
                 (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                  qVar"state")),Mop(SE F64,Var("immediate",F16))),
         Apply
           (Call
              ("SignalException",ATy(qTy,PTy(uTy,qTy)),
               LC("Tr",CTy"ExceptionType")),qVar"state"),
         TP[LU,qVar"state"])))
;

val dfn'TNEI_def = Def
  ("dfn'TNEI",TP[Var("rs",FTy 5),Var("immediate",F16)],
   Close
     (qVar"state",
      ITE
        (Mop
           (Not,
            EQ(Mop
                 (Fst,
                  Apply
                    (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                     qVar"state")),Mop(SE F64,Var("immediate",F16)))),
         Apply
           (Call
              ("SignalException",ATy(qTy,PTy(uTy,qTy)),
               LC("Tr",CTy"ExceptionType")),qVar"state"),
         TP[LU,qVar"state"])))
;

val loadByte_def = Def
  ("loadByte",
   TP[Var("base",FTy 5),Var("rt",FTy 5),Var("offset",F16),bVar"unsigned"],
   Close
     (qVar"state",
      Let
        (Var("v",F64),
         Bop
           (Add,Mop(SE F64,Var("offset",F16)),
            Mop
              (Fst,
               Apply
                 (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("base",FTy 5)),
                  qVar"state"))),
         Let
           (TP[Var("pAddr",F64),Var("CCA",FTy 3)],
            Call
              ("AddressTranslation",PTy(F64,FTy 3),
               TP[Var("v",F64),LC("DATA",CTy"IorD"),LC("LOAD",CTy"LorS")]),
            Let
              (Var("v0",FTy 3),
               Bop
                 (BXor,EX(Var("v",F64),LN 2,LN 0,FTy 3),
                  Bop
                    (Rep,
                     Mop
                       (Fst,
                        Apply
                          (Const("BigEndianCPU",ATy(qTy,PTy(F1,qTy))),
                           qVar"state")),LN 3)),
               Let
                 (Var("membyte",F8),
                  EX(Mop
                       (Fst,
                        Apply
                          (Call
                             ("LoadMemory",ATy(qTy,PTy(F64,qTy)),
                              TP[Var("CCA",FTy 3),Const("BYTE",FTy 3),
                                 CC[EX(Var("pAddr",F64),
                                       Bop(Sub,Const("PSIZE",nTy),LN 1),
                                       LN 3,FTy 61),
                                    Bop
                                      (BXor,
                                       EX(Var("pAddr",F64),LN 2,LN 0,
                                          FTy 3),
                                       Bop
                                         (Rep,
                                          Mop
                                            (Fst,
                                             Apply
                                               (Const
                                                  ("ReverseEndian",
                                                   ATy(qTy,PTy(F1,qTy))),
                                                qVar"state")),LN 3))],
                                 Var("v",F64),LC("DATA",CTy"IorD")]),
                           qVar"state")),
                     Bop
                       (Add,LN 7,
                        Bop(Mul,LN 8,Mop(Cast nTy,Var("v0",FTy 3)))),
                     Bop(Mul,LN 8,Mop(Cast nTy,Var("v0",FTy 3))),F8),
                  Apply
                    (Call
                       ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
                        TP[ITE
                             (bVar"unsigned",
                              Mop(Cast F64,Var("membyte",F8)),
                              Mop(SE F64,Var("membyte",F8))),
                           Var("rt",FTy 5)]),qVar"state")))))))
;

val loadHalf_def = Def
  ("loadHalf",
   TP[Var("base",FTy 5),Var("rt",FTy 5),Var("offset",F16),bVar"unsigned"],
   Close
     (qVar"state",
      Let
        (Var("v",F64),
         Bop
           (Add,Mop(SE F64,Var("offset",F16)),
            Mop
              (Fst,
               Apply
                 (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("base",FTy 5)),
                  qVar"state"))),
         ITE
           (Bop(Bit,Var("v",F64),LN 0),
            Apply
              (Call
                 ("SignalException",ATy(qTy,PTy(uTy,qTy)),
                  LC("AdEL",CTy"ExceptionType")),qVar"state"),
            Let
              (TP[Var("pAddr",F64),Var("CCA",FTy 3)],
               Call
                 ("AddressTranslation",PTy(F64,FTy 3),
                  TP[Var("v",F64),LC("DATA",CTy"IorD"),
                     LC("LOAD",CTy"LorS")]),
               Let
                 (Var("v0",FTy 3),
                  Bop
                    (BXor,EX(Var("v",F64),LN 2,LN 0,FTy 3),
                     CC[Bop
                          (Rep,
                           Mop
                             (Fst,
                              Apply
                                (Const
                                   ("BigEndianCPU",ATy(qTy,PTy(F1,qTy))),
                                 qVar"state")),LN 2),LW(0,1)]),
                  Let
                    (Var("memhalf",F16),
                     EX(Mop
                          (Fst,
                           Apply
                             (Call
                                ("LoadMemory",ATy(qTy,PTy(F64,qTy)),
                                 TP[Var("CCA",FTy 3),
                                    Const("HALFWORD",FTy 3),
                                    CC[EX(Var("pAddr",F64),
                                          Bop(Sub,Const("PSIZE",nTy),LN 1),
                                          LN 3,FTy 61),
                                       Bop
                                         (BXor,
                                          EX(Var("pAddr",F64),LN 2,LN 0,
                                             FTy 3),
                                          CC[Bop
                                               (Rep,
                                                Mop
                                                  (Fst,
                                                   Apply
                                                     (Const
                                                        ("ReverseEndian",
                                                         ATy
                                                           (qTy,
                                                            PTy(F1,qTy))),
                                                      qVar"state")),LN 2),
                                             LW(0,1)])],Var("v",F64),
                                    LC("DATA",CTy"IorD")]),qVar"state")),
                        Bop
                          (Add,LN 15,
                           Bop(Mul,LN 8,Mop(Cast nTy,Var("v0",FTy 3)))),
                        Bop(Mul,LN 8,Mop(Cast nTy,Var("v0",FTy 3))),F16),
                     Apply
                       (Call
                          ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
                           TP[ITE
                                (bVar"unsigned",
                                 Mop(Cast F64,Var("memhalf",F16)),
                                 Mop(SE F64,Var("memhalf",F16))),
                              Var("rt",FTy 5)]),qVar"state"))))))))
;

val loadWord_def = Def
  ("loadWord",
   TP[Var("base",FTy 5),Var("rt",FTy 5),Var("offset",F16),bVar"unsigned"],
   Close
     (qVar"state",
      Let
        (Var("v",F64),
         Bop
           (Add,Mop(SE F64,Var("offset",F16)),
            Mop
              (Fst,
               Apply
                 (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("base",FTy 5)),
                  qVar"state"))),
         ITE
           (Mop(Not,EQ(EX(Var("v",F64),LN 1,LN 0,FTy 2),LW(0,2))),
            Apply
              (Call
                 ("SignalException",ATy(qTy,PTy(uTy,qTy)),
                  LC("AdEL",CTy"ExceptionType")),qVar"state"),
            Let
              (TP[Var("pAddr",F64),Var("CCA",FTy 3)],
               Call
                 ("AddressTranslation",PTy(F64,FTy 3),
                  TP[Var("v",F64),LC("DATA",CTy"IorD"),
                     LC("LOAD",CTy"LorS")]),
               Let
                 (Var("v0",FTy 3),
                  Bop
                    (BXor,EX(Var("v",F64),LN 2,LN 0,FTy 3),
                     CC[Mop
                          (Fst,
                           Apply
                             (Const("BigEndianCPU",ATy(qTy,PTy(F1,qTy))),
                              qVar"state")),LW(0,2)]),
                  Let
                    (Var("memword",F32),
                     EX(Mop
                          (Fst,
                           Apply
                             (Call
                                ("LoadMemory",ATy(qTy,PTy(F64,qTy)),
                                 TP[Var("CCA",FTy 3),Const("WORD",FTy 3),
                                    CC[EX(Var("pAddr",F64),
                                          Bop(Sub,Const("PSIZE",nTy),LN 1),
                                          LN 3,FTy 61),
                                       Bop
                                         (BXor,
                                          EX(Var("pAddr",F64),LN 2,LN 0,
                                             FTy 3),
                                          CC[Mop
                                               (Fst,
                                                Apply
                                                  (Const
                                                     ("ReverseEndian",
                                                      ATy(qTy,PTy(F1,qTy))),
                                                   qVar"state")),LW(0,2)])],
                                    Var("v",F64),LC("DATA",CTy"IorD")]),
                              qVar"state")),
                        Bop
                          (Add,LN 31,
                           Bop(Mul,LN 8,Mop(Cast nTy,Var("v0",FTy 3)))),
                        Bop(Mul,LN 8,Mop(Cast nTy,Var("v0",FTy 3))),F32),
                     Apply
                       (Call
                          ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
                           TP[ITE
                                (bVar"unsigned",
                                 Mop(Cast F64,Var("memword",F32)),
                                 Mop(SE F64,Var("memword",F32))),
                              Var("rt",FTy 5)]),qVar"state"))))))))
;

val loadDoubleword_def = Def
  ("loadDoubleword",
   TP[Var("base",FTy 5),Var("rt",FTy 5),Var("offset",F16)],
   Close
     (qVar"state",
      Let
        (Var("v",F64),
         Bop
           (Add,Mop(SE F64,Var("offset",F16)),
            Mop
              (Fst,
               Apply
                 (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("base",FTy 5)),
                  qVar"state"))),
         ITE
           (Mop(Not,EQ(EX(Var("v",F64),LN 2,LN 0,FTy 3),LW(0,3))),
            Apply
              (Call
                 ("SignalException",ATy(qTy,PTy(uTy,qTy)),
                  LC("AdEL",CTy"ExceptionType")),qVar"state"),
            Let
              (TP[Var("pAddr",F64),Var("CCA",FTy 3)],
               Call
                 ("AddressTranslation",PTy(F64,FTy 3),
                  TP[Var("v",F64),LC("DATA",CTy"IorD"),
                     LC("LOAD",CTy"LorS")]),
               Apply
                 (Call
                    ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
                     TP[Mop
                          (Fst,
                           Apply
                             (Call
                                ("LoadMemory",ATy(qTy,PTy(F64,qTy)),
                                 TP[Var("CCA",FTy 3),
                                    Const("DOUBLEWORD",FTy 3),
                                    Var("pAddr",F64),Var("v",F64),
                                    LC("DATA",CTy"IorD")]),qVar"state")),
                        Var("rt",FTy 5)]),qVar"state"))))))
;

val dfn'LB_def = Def
  ("dfn'LB",TP[Var("base",FTy 5),Var("rt",FTy 5),Var("offset",F16)],
   Close
     (qVar"state",
      Apply
        (Call
           ("loadByte",ATy(qTy,PTy(uTy,qTy)),
            TP[Var("base",FTy 5),Var("rt",FTy 5),Var("offset",F16),LF]),
         qVar"state")))
;

val dfn'LBU_def = Def
  ("dfn'LBU",TP[Var("base",FTy 5),Var("rt",FTy 5),Var("offset",F16)],
   Close
     (qVar"state",
      Apply
        (Call
           ("loadByte",ATy(qTy,PTy(uTy,qTy)),
            TP[Var("base",FTy 5),Var("rt",FTy 5),Var("offset",F16),LT]),
         qVar"state")))
;

val dfn'LH_def = Def
  ("dfn'LH",TP[Var("base",FTy 5),Var("rt",FTy 5),Var("offset",F16)],
   Close
     (qVar"state",
      Apply
        (Call
           ("loadHalf",ATy(qTy,PTy(uTy,qTy)),
            TP[Var("base",FTy 5),Var("rt",FTy 5),Var("offset",F16),LF]),
         qVar"state")))
;

val dfn'LHU_def = Def
  ("dfn'LHU",TP[Var("base",FTy 5),Var("rt",FTy 5),Var("offset",F16)],
   Close
     (qVar"state",
      Apply
        (Call
           ("loadHalf",ATy(qTy,PTy(uTy,qTy)),
            TP[Var("base",FTy 5),Var("rt",FTy 5),Var("offset",F16),LT]),
         qVar"state")))
;

val dfn'LW_def = Def
  ("dfn'LW",TP[Var("base",FTy 5),Var("rt",FTy 5),Var("offset",F16)],
   Close
     (qVar"state",
      Apply
        (Call
           ("loadWord",ATy(qTy,PTy(uTy,qTy)),
            TP[Var("base",FTy 5),Var("rt",FTy 5),Var("offset",F16),LF]),
         qVar"state")))
;

val dfn'LWU_def = Def
  ("dfn'LWU",TP[Var("base",FTy 5),Var("rt",FTy 5),Var("offset",F16)],
   Close
     (qVar"state",
      Apply
        (Call
           ("loadWord",ATy(qTy,PTy(uTy,qTy)),
            TP[Var("base",FTy 5),Var("rt",FTy 5),Var("offset",F16),LT]),
         qVar"state")))
;

val dfn'LL_def = Def
  ("dfn'LL",TP[Var("base",FTy 5),Var("rt",FTy 5),Var("offset",F16)],
   Close
     (qVar"state",
      TP[LU,
         Rupd
           ("LLbit",
            TP[Mop
                 (Snd,
                  Apply
                    (Call
                       ("loadWord",ATy(qTy,PTy(uTy,qTy)),
                        TP[Var("base",FTy 5),Var("rt",FTy 5),
                           Var("offset",F16),LF]),qVar"state")),
               Mop(Some,LT)])]))
;

val dfn'LD_def = Def
  ("dfn'LD",TP[Var("base",FTy 5),Var("rt",FTy 5),Var("offset",F16)],
   Close
     (qVar"state",
      Apply
        (Call
           ("loadDoubleword",ATy(qTy,PTy(uTy,qTy)),
            TP[Var("base",FTy 5),Var("rt",FTy 5),Var("offset",F16)]),
         qVar"state")))
;

val dfn'LLD_def = Def
  ("dfn'LLD",TP[Var("base",FTy 5),Var("rt",FTy 5),Var("offset",F16)],
   Close
     (qVar"state",
      TP[LU,
         Rupd
           ("LLbit",
            TP[Mop
                 (Snd,
                  Apply
                    (Call
                       ("loadDoubleword",ATy(qTy,PTy(uTy,qTy)),
                        TP[Var("base",FTy 5),Var("rt",FTy 5),
                           Var("offset",F16)]),qVar"state")),Mop(Some,LT)])]))
;

val dfn'LWL_def = Def
  ("dfn'LWL",TP[Var("base",FTy 5),Var("rt",FTy 5),Var("offset",F16)],
   Close
     (qVar"state",
      Let
        (Var("v",F64),
         Bop
           (Add,Mop(SE F64,Var("offset",F16)),
            Mop
              (Fst,
               Apply
                 (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("base",FTy 5)),
                  qVar"state"))),
         Let
           (TP[Var("pAddr",F64),Var("CCA",FTy 3)],
            Call
              ("AddressTranslation",PTy(F64,FTy 3),
               TP[Var("v",F64),LC("DATA",CTy"IorD"),LC("LOAD",CTy"LorS")]),
            Let
              (Var("v0",F64),
               CC[EX(Var("pAddr",F64),Bop(Sub,Const("PSIZE",nTy),LN 1),
                     LN 3,FTy 61),
                  Bop
                    (BXor,EX(Var("pAddr",F64),LN 2,LN 0,FTy 3),
                     Bop
                       (Rep,
                        Mop
                          (Fst,
                           Apply
                             (Const("ReverseEndian",ATy(qTy,PTy(F1,qTy))),
                              qVar"state")),LN 3))],
               Let
                 (Var("v1",FTy 2),
                  Bop
                    (BXor,EX(Var("v",F64),LN 1,LN 0,FTy 2),
                     Bop
                       (Rep,
                        Mop
                          (Fst,
                           Apply
                             (Const("BigEndianCPU",ATy(qTy,PTy(F1,qTy))),
                              qVar"state")),LN 2)),
                  Let
                    (Var("v2",F64),
                     Mop
                       (Fst,
                        Apply
                          (Call
                             ("LoadMemory",ATy(qTy,PTy(F64,qTy)),
                              TP[Var("CCA",FTy 3),
                                 CC[LW(0,1),Var("v1",FTy 2)],
                                 ITE
                                   (Mop
                                      (Fst,
                                       Apply
                                         (Const
                                            ("BigEndianMem",
                                             ATy(qTy,PTy(bTy,qTy))),
                                          qVar"state")),Var("v0",F64),
                                    Bop
                                      (BAnd,Var("v0",F64),
                                       Mop(BNot,LW(7,64)))),Var("v",F64),
                                 LC("DATA",CTy"IorD")]),qVar"state")),
                     Let
                       (TP[Var("v",F32),qVar"s"],
                        CS(TP[Bop
                                (BXor,EX(Var("v",F64),LN 2,LN 2,F1),
                                 Mop
                                   (Fst,
                                    Apply
                                      (Const
                                         ("BigEndianCPU",
                                          ATy(qTy,PTy(F1,qTy))),
                                       qVar"state"))),Var("v1",FTy 2)],
                           [(TP[LW(0,1),LW(0,2)],
                             TP[CC[EX(Var("v2",F64),LN 7,LN 0,F8),
                                   EX(Mop
                                        (Fst,
                                         Apply
                                           (Call
                                              ("GPR",
                                               ATy(qTy,PTy(F64,qTy)),
                                               Var("rt",FTy 5)),
                                            qVar"state")),LN 23,LN 0,
                                      FTy 24)],qVar"state"]),
                            (TP[LW(0,1),LW(1,2)],
                             TP[CC[EX(Var("v2",F64),LN 15,LN 0,F16),
                                   EX(Mop
                                        (Fst,
                                         Apply
                                           (Call
                                              ("GPR",
                                               ATy(qTy,PTy(F64,qTy)),
                                               Var("rt",FTy 5)),
                                            qVar"state")),LN 15,LN 0,F16)],
                                qVar"state"]),
                            (TP[LW(0,1),LW(2,2)],
                             TP[CC[EX(Var("v2",F64),LN 23,LN 0,FTy 24),
                                   EX(Mop
                                        (Fst,
                                         Apply
                                           (Call
                                              ("GPR",
                                               ATy(qTy,PTy(F64,qTy)),
                                               Var("rt",FTy 5)),
                                            qVar"state")),LN 7,LN 0,F8)],
                                qVar"state"]),
                            (TP[LW(0,1),LW(3,2)],
                             TP[EX(Var("v2",F64),LN 31,LN 0,F32),
                                qVar"state"]),
                            (TP[LW(1,1),LW(0,2)],
                             TP[CC[EX(Var("v2",F64),LN 39,LN 32,F8),
                                   EX(Mop
                                        (Fst,
                                         Apply
                                           (Call
                                              ("GPR",
                                               ATy(qTy,PTy(F64,qTy)),
                                               Var("rt",FTy 5)),
                                            qVar"state")),LN 23,LN 0,
                                      FTy 24)],qVar"state"]),
                            (TP[LW(1,1),LW(1,2)],
                             TP[CC[EX(Var("v2",F64),LN 47,LN 32,F16),
                                   EX(Mop
                                        (Fst,
                                         Apply
                                           (Call
                                              ("GPR",
                                               ATy(qTy,PTy(F64,qTy)),
                                               Var("rt",FTy 5)),
                                            qVar"state")),LN 15,LN 0,F16)],
                                qVar"state"]),
                            (TP[LW(1,1),LW(2,2)],
                             TP[CC[EX(Var("v2",F64),LN 55,LN 32,FTy 24),
                                   EX(Mop
                                        (Fst,
                                         Apply
                                           (Call
                                              ("GPR",
                                               ATy(qTy,PTy(F64,qTy)),
                                               Var("rt",FTy 5)),
                                            qVar"state")),LN 7,LN 0,F8)],
                                qVar"state"]),
                            (TP[LW(1,1),LW(3,2)],
                             TP[EX(Var("v2",F64),LN 63,LN 32,F32),
                                qVar"state"])]),
                        Apply
                          (Call
                             ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
                              TP[Mop(SE F64,Var("v",F32)),Var("rt",FTy 5)]),
                           qVar"s")))))))))
;

val dfn'LWR_def = Def
  ("dfn'LWR",TP[Var("base",FTy 5),Var("rt",FTy 5),Var("offset",F16)],
   Close
     (qVar"state",
      Let
        (Var("v",F64),
         Bop
           (Add,Mop(SE F64,Var("offset",F16)),
            Mop
              (Fst,
               Apply
                 (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("base",FTy 5)),
                  qVar"state"))),
         Let
           (TP[Var("pAddr",F64),Var("CCA",FTy 3)],
            Call
              ("AddressTranslation",PTy(F64,FTy 3),
               TP[Var("v",F64),LC("DATA",CTy"IorD"),LC("LOAD",CTy"LorS")]),
            Let
              (Var("v0",F64),
               CC[EX(Var("pAddr",F64),Bop(Sub,Const("PSIZE",nTy),LN 1),
                     LN 3,FTy 61),
                  Bop
                    (BXor,EX(Var("pAddr",F64),LN 2,LN 0,FTy 3),
                     Bop
                       (Rep,
                        Mop
                          (Fst,
                           Apply
                             (Const("ReverseEndian",ATy(qTy,PTy(F1,qTy))),
                              qVar"state")),LN 3))],
               Let
                 (Var("v1",FTy 2),
                  Bop
                    (BXor,EX(Var("v",F64),LN 1,LN 0,FTy 2),
                     Bop
                       (Rep,
                        Mop
                          (Fst,
                           Apply
                             (Const("BigEndianCPU",ATy(qTy,PTy(F1,qTy))),
                              qVar"state")),LN 2)),
                  Let
                    (Var("v2",F64),
                     Mop
                       (Fst,
                        Apply
                          (Call
                             ("LoadMemory",ATy(qTy,PTy(F64,qTy)),
                              TP[Var("CCA",FTy 3),
                                 Bop
                                   (Sub,Const("WORD",FTy 3),
                                    CC[LW(0,1),Var("v1",FTy 2)]),
                                 ITE
                                   (Mop
                                      (Fst,
                                       Apply
                                         (Const
                                            ("BigEndianMem",
                                             ATy(qTy,PTy(bTy,qTy))),
                                          qVar"state")),Var("v0",F64),
                                    Bop
                                      (BAnd,Var("v0",F64),
                                       Mop(BNot,LW(7,64)))),Var("v",F64),
                                 LC("DATA",CTy"IorD")]),qVar"state")),
                     Let
                       (TP[Var("v",F32),qVar"s"],
                        CS(TP[Bop
                                (BXor,EX(Var("v",F64),LN 2,LN 2,F1),
                                 Mop
                                   (Fst,
                                    Apply
                                      (Const
                                         ("BigEndianCPU",
                                          ATy(qTy,PTy(F1,qTy))),
                                       qVar"state"))),Var("v1",FTy 2)],
                           [(TP[LW(0,1),LW(0,2)],
                             TP[EX(Var("v2",F64),LN 31,LN 0,F32),
                                qVar"state"]),
                            (TP[LW(0,1),LW(1,2)],
                             TP[CC[EX(Mop
                                        (Fst,
                                         Apply
                                           (Call
                                              ("GPR",
                                               ATy(qTy,PTy(F64,qTy)),
                                               Var("rt",FTy 5)),
                                            qVar"state")),LN 31,LN 24,F8),
                                   EX(Var("v2",F64),LN 31,LN 8,FTy 24)],
                                qVar"state"]),
                            (TP[LW(0,1),LW(2,2)],
                             TP[CC[EX(Mop
                                        (Fst,
                                         Apply
                                           (Call
                                              ("GPR",
                                               ATy(qTy,PTy(F64,qTy)),
                                               Var("rt",FTy 5)),
                                            qVar"state")),LN 31,LN 16,F16),
                                   EX(Var("v2",F64),LN 31,LN 16,F16)],
                                qVar"state"]),
                            (TP[LW(0,1),LW(3,2)],
                             TP[CC[EX(Mop
                                        (Fst,
                                         Apply
                                           (Call
                                              ("GPR",
                                               ATy(qTy,PTy(F64,qTy)),
                                               Var("rt",FTy 5)),
                                            qVar"state")),LN 31,LN 8,
                                      FTy 24),
                                   EX(Var("v2",F64),LN 31,LN 24,F8)],
                                qVar"state"]),
                            (TP[LW(1,1),LW(0,2)],
                             TP[EX(Var("v2",F64),LN 63,LN 32,F32),
                                qVar"state"]),
                            (TP[LW(1,1),LW(1,2)],
                             TP[CC[EX(Mop
                                        (Fst,
                                         Apply
                                           (Call
                                              ("GPR",
                                               ATy(qTy,PTy(F64,qTy)),
                                               Var("rt",FTy 5)),
                                            qVar"state")),LN 31,LN 24,F8),
                                   EX(Var("v2",F64),LN 63,LN 40,FTy 24)],
                                qVar"state"]),
                            (TP[LW(1,1),LW(2,2)],
                             TP[CC[EX(Mop
                                        (Fst,
                                         Apply
                                           (Call
                                              ("GPR",
                                               ATy(qTy,PTy(F64,qTy)),
                                               Var("rt",FTy 5)),
                                            qVar"state")),LN 31,LN 16,F16),
                                   EX(Var("v2",F64),LN 63,LN 48,F16)],
                                qVar"state"]),
                            (TP[LW(1,1),LW(3,2)],
                             TP[CC[EX(Mop
                                        (Fst,
                                         Apply
                                           (Call
                                              ("GPR",
                                               ATy(qTy,PTy(F64,qTy)),
                                               Var("rt",FTy 5)),
                                            qVar"state")),LN 31,LN 8,
                                      FTy 24),
                                   EX(Var("v2",F64),LN 63,LN 56,F8)],
                                qVar"state"])]),
                        Apply
                          (Call
                             ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
                              TP[Mop(SE F64,Var("v",F32)),Var("rt",FTy 5)]),
                           qVar"s")))))))))
;

val dfn'LDL_def = Def
  ("dfn'LDL",TP[Var("base",FTy 5),Var("rt",FTy 5),Var("offset",F16)],
   Close
     (qVar"state",
      Let
        (Var("v",F64),
         Bop
           (Add,Mop(SE F64,Var("offset",F16)),
            Mop
              (Fst,
               Apply
                 (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("base",FTy 5)),
                  qVar"state"))),
         Let
           (TP[Var("pAddr",F64),Var("CCA",FTy 3)],
            Call
              ("AddressTranslation",PTy(F64,FTy 3),
               TP[Var("v",F64),LC("DATA",CTy"IorD"),LC("LOAD",CTy"LorS")]),
            Let
              (Var("v0",F64),
               CC[EX(Var("pAddr",F64),Bop(Sub,Const("PSIZE",nTy),LN 1),
                     LN 3,FTy 61),
                  Bop
                    (BXor,EX(Var("pAddr",F64),LN 2,LN 0,FTy 3),
                     Bop
                       (Rep,
                        Mop
                          (Fst,
                           Apply
                             (Const("ReverseEndian",ATy(qTy,PTy(F1,qTy))),
                              qVar"state")),LN 3))],
               Let
                 (Var("v1",FTy 3),
                  Bop
                    (BXor,EX(Var("v",F64),LN 2,LN 0,FTy 3),
                     Bop
                       (Rep,
                        Mop
                          (Fst,
                           Apply
                             (Const("BigEndianCPU",ATy(qTy,PTy(F1,qTy))),
                              qVar"state")),LN 3)),
                  Let
                    (Var("v2",F64),
                     Mop
                       (Fst,
                        Apply
                          (Call
                             ("LoadMemory",ATy(qTy,PTy(F64,qTy)),
                              TP[Var("CCA",FTy 3),Var("v1",FTy 3),
                                 ITE
                                   (Mop
                                      (Fst,
                                       Apply
                                         (Const
                                            ("BigEndianMem",
                                             ATy(qTy,PTy(bTy,qTy))),
                                          qVar"state")),Var("v0",F64),
                                    Bop
                                      (BAnd,Var("v0",F64),
                                       Mop(BNot,LW(7,64)))),Var("v",F64),
                                 LC("DATA",CTy"IorD")]),qVar"state")),
                     Let
                       (TP[Var("v",F64),qVar"s"],
                        CS(Var("v1",FTy 3),
                           [(LW(0,3),
                             TP[CC[EX(Var("v2",F64),LN 7,LN 0,F8),
                                   EX(Mop
                                        (Fst,
                                         Apply
                                           (Call
                                              ("GPR",
                                               ATy(qTy,PTy(F64,qTy)),
                                               Var("rt",FTy 5)),
                                            qVar"state")),LN 55,LN 0,
                                      FTy 56)],qVar"state"]),
                            (LW(1,3),
                             TP[CC[EX(Var("v2",F64),LN 15,LN 0,F16),
                                   EX(Mop
                                        (Fst,
                                         Apply
                                           (Call
                                              ("GPR",
                                               ATy(qTy,PTy(F64,qTy)),
                                               Var("rt",FTy 5)),
                                            qVar"state")),LN 47,LN 0,
                                      FTy 48)],qVar"state"]),
                            (LW(2,3),
                             TP[CC[EX(Var("v2",F64),LN 23,LN 0,FTy 24),
                                   EX(Mop
                                        (Fst,
                                         Apply
                                           (Call
                                              ("GPR",
                                               ATy(qTy,PTy(F64,qTy)),
                                               Var("rt",FTy 5)),
                                            qVar"state")),LN 39,LN 0,
                                      FTy 40)],qVar"state"]),
                            (LW(3,3),
                             TP[CC[EX(Var("v2",F64),LN 31,LN 0,F32),
                                   EX(Mop
                                        (Fst,
                                         Apply
                                           (Call
                                              ("GPR",
                                               ATy(qTy,PTy(F64,qTy)),
                                               Var("rt",FTy 5)),
                                            qVar"state")),LN 31,LN 0,F32)],
                                qVar"state"]),
                            (LW(4,3),
                             TP[CC[EX(Var("v2",F64),LN 39,LN 0,FTy 40),
                                   EX(Mop
                                        (Fst,
                                         Apply
                                           (Call
                                              ("GPR",
                                               ATy(qTy,PTy(F64,qTy)),
                                               Var("rt",FTy 5)),
                                            qVar"state")),LN 23,LN 0,
                                      FTy 24)],qVar"state"]),
                            (LW(5,3),
                             TP[CC[EX(Var("v2",F64),LN 47,LN 0,FTy 48),
                                   EX(Mop
                                        (Fst,
                                         Apply
                                           (Call
                                              ("GPR",
                                               ATy(qTy,PTy(F64,qTy)),
                                               Var("rt",FTy 5)),
                                            qVar"state")),LN 15,LN 0,F16)],
                                qVar"state"]),
                            (LW(6,3),
                             TP[CC[EX(Var("v2",F64),LN 55,LN 0,FTy 56),
                                   EX(Mop
                                        (Fst,
                                         Apply
                                           (Call
                                              ("GPR",
                                               ATy(qTy,PTy(F64,qTy)),
                                               Var("rt",FTy 5)),
                                            qVar"state")),LN 7,LN 0,F8)],
                                qVar"state"]),
                            (LW(7,3),
                             TP[EX(Var("v2",F64),LN 63,LN 0,F64),
                                qVar"state"])]),
                        Apply
                          (Call
                             ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
                              TP[Var("v",F64),Var("rt",FTy 5)]),qVar"s")))))))))
;

val dfn'LDR_def = Def
  ("dfn'LDR",TP[Var("base",FTy 5),Var("rt",FTy 5),Var("offset",F16)],
   Close
     (qVar"state",
      Let
        (Var("v",F64),
         Bop
           (Add,Mop(SE F64,Var("offset",F16)),
            Mop
              (Fst,
               Apply
                 (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("base",FTy 5)),
                  qVar"state"))),
         Let
           (TP[Var("pAddr",F64),Var("CCA",FTy 3)],
            Call
              ("AddressTranslation",PTy(F64,FTy 3),
               TP[Var("v",F64),LC("DATA",CTy"IorD"),LC("LOAD",CTy"LorS")]),
            Let
              (Var("v0",F64),
               CC[EX(Var("pAddr",F64),Bop(Sub,Const("PSIZE",nTy),LN 1),
                     LN 3,FTy 61),
                  Bop
                    (BXor,EX(Var("pAddr",F64),LN 2,LN 0,FTy 3),
                     Bop
                       (Rep,
                        Mop
                          (Fst,
                           Apply
                             (Const("ReverseEndian",ATy(qTy,PTy(F1,qTy))),
                              qVar"state")),LN 3))],
               Let
                 (Var("v1",FTy 3),
                  Bop
                    (BXor,EX(Var("v",F64),LN 2,LN 0,FTy 3),
                     Bop
                       (Rep,
                        Mop
                          (Fst,
                           Apply
                             (Const("BigEndianCPU",ATy(qTy,PTy(F1,qTy))),
                              qVar"state")),LN 3)),
                  Let
                    (Var("v2",F64),
                     Mop
                       (Fst,
                        Apply
                          (Call
                             ("LoadMemory",ATy(qTy,PTy(F64,qTy)),
                              TP[Var("CCA",FTy 3),
                                 Bop
                                   (Sub,Const("DOUBLEWORD",FTy 3),
                                    Var("v1",FTy 3)),
                                 ITE
                                   (Mop
                                      (Fst,
                                       Apply
                                         (Const
                                            ("BigEndianMem",
                                             ATy(qTy,PTy(bTy,qTy))),
                                          qVar"state")),Var("v0",F64),
                                    Bop
                                      (BAnd,Var("v0",F64),
                                       Mop(BNot,LW(7,64)))),Var("v",F64),
                                 LC("DATA",CTy"IorD")]),qVar"state")),
                     Let
                       (TP[Var("v",F64),qVar"s"],
                        CS(Var("v1",FTy 3),
                           [(LW(0,3),
                             TP[EX(Var("v2",F64),LN 63,LN 0,F64),
                                qVar"state"]),
                            (LW(1,3),
                             TP[CC[EX(Mop
                                        (Fst,
                                         Apply
                                           (Call
                                              ("GPR",
                                               ATy(qTy,PTy(F64,qTy)),
                                               Var("rt",FTy 5)),
                                            qVar"state")),LN 63,LN 56,F8),
                                   EX(Var("v2",F64),LN 63,LN 8,FTy 56)],
                                qVar"state"]),
                            (LW(2,3),
                             TP[CC[EX(Mop
                                        (Fst,
                                         Apply
                                           (Call
                                              ("GPR",
                                               ATy(qTy,PTy(F64,qTy)),
                                               Var("rt",FTy 5)),
                                            qVar"state")),LN 63,LN 48,F16),
                                   EX(Var("v2",F64),LN 63,LN 16,FTy 48)],
                                qVar"state"]),
                            (LW(3,3),
                             TP[CC[EX(Mop
                                        (Fst,
                                         Apply
                                           (Call
                                              ("GPR",
                                               ATy(qTy,PTy(F64,qTy)),
                                               Var("rt",FTy 5)),
                                            qVar"state")),LN 63,LN 40,
                                      FTy 24),
                                   EX(Var("v2",F64),LN 63,LN 24,FTy 40)],
                                qVar"state"]),
                            (LW(4,3),
                             TP[CC[EX(Mop
                                        (Fst,
                                         Apply
                                           (Call
                                              ("GPR",
                                               ATy(qTy,PTy(F64,qTy)),
                                               Var("rt",FTy 5)),
                                            qVar"state")),LN 63,LN 32,F32),
                                   EX(Var("v2",F64),LN 63,LN 32,F32)],
                                qVar"state"]),
                            (LW(5,3),
                             TP[CC[EX(Mop
                                        (Fst,
                                         Apply
                                           (Call
                                              ("GPR",
                                               ATy(qTy,PTy(F64,qTy)),
                                               Var("rt",FTy 5)),
                                            qVar"state")),LN 63,LN 24,
                                      FTy 40),
                                   EX(Var("v2",F64),LN 63,LN 40,FTy 24)],
                                qVar"state"]),
                            (LW(6,3),
                             TP[CC[EX(Mop
                                        (Fst,
                                         Apply
                                           (Call
                                              ("GPR",
                                               ATy(qTy,PTy(F64,qTy)),
                                               Var("rt",FTy 5)),
                                            qVar"state")),LN 63,LN 16,
                                      FTy 48),
                                   EX(Var("v2",F64),LN 63,LN 48,F16)],
                                qVar"state"]),
                            (LW(7,3),
                             TP[CC[EX(Mop
                                        (Fst,
                                         Apply
                                           (Call
                                              ("GPR",
                                               ATy(qTy,PTy(F64,qTy)),
                                               Var("rt",FTy 5)),
                                            qVar"state")),LN 63,LN 8,
                                      FTy 56),
                                   EX(Var("v2",F64),LN 63,LN 56,F8)],
                                qVar"state"])]),
                        Apply
                          (Call
                             ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
                              TP[Var("v",F64),Var("rt",FTy 5)]),qVar"s")))))))))
;

val dfn'SB_def = Def
  ("dfn'SB",TP[Var("base",FTy 5),Var("rt",FTy 5),Var("offset",F16)],
   Close
     (qVar"state",
      Let
        (Var("v",F64),
         Bop
           (Add,Mop(SE F64,Var("offset",F16)),
            Mop
              (Fst,
               Apply
                 (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("base",FTy 5)),
                  qVar"state"))),
         Let
           (TP[Var("pAddr",F64),Var("CCA",FTy 3)],
            Call
              ("AddressTranslation",PTy(F64,FTy 3),
               TP[Var("v",F64),LC("DATA",CTy"IorD"),LC("STORE",CTy"LorS")]),
            Apply
              (Call
                 ("StoreMemory",ATy(qTy,PTy(uTy,qTy)),
                  TP[Var("CCA",FTy 3),Const("BYTE",FTy 3),
                     Bop
                       (Lsl,
                        Mop
                          (Fst,
                           Apply
                             (Call
                                ("GPR",ATy(qTy,PTy(F64,qTy)),
                                 Var("rt",FTy 5)),qVar"state")),
                        Bop
                          (Mul,LN 8,
                           Mop
                             (Cast nTy,
                              Bop
                                (BXor,EX(Var("v",F64),LN 2,LN 0,FTy 3),
                                 Bop
                                   (Rep,
                                    Mop
                                      (Fst,
                                       Apply
                                         (Const
                                            ("BigEndianCPU",
                                             ATy(qTy,PTy(F1,qTy))),
                                          qVar"state")),LN 3))))),
                     CC[EX(Var("pAddr",F64),
                           Bop(Sub,Const("PSIZE",nTy),LN 1),LN 3,FTy 61),
                        Bop
                          (BXor,EX(Var("pAddr",F64),LN 2,LN 0,FTy 3),
                           Bop
                             (Rep,
                              Mop
                                (Fst,
                                 Apply
                                   (Const
                                      ("ReverseEndian",
                                       ATy(qTy,PTy(F1,qTy))),qVar"state")),
                              LN 3))],Var("v",F64),LC("DATA",CTy"IorD")]),
               qVar"state")))))
;

val dfn'SH_def = Def
  ("dfn'SH",TP[Var("base",FTy 5),Var("rt",FTy 5),Var("offset",F16)],
   Close
     (qVar"state",
      Let
        (Var("v",F64),
         Bop
           (Add,Mop(SE F64,Var("offset",F16)),
            Mop
              (Fst,
               Apply
                 (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("base",FTy 5)),
                  qVar"state"))),
         ITE
           (Bop(Bit,Var("v",F64),LN 0),
            Apply
              (Call
                 ("SignalException",ATy(qTy,PTy(uTy,qTy)),
                  LC("AdES",CTy"ExceptionType")),qVar"state"),
            Let
              (TP[Var("pAddr",F64),Var("CCA",FTy 3)],
               Call
                 ("AddressTranslation",PTy(F64,FTy 3),
                  TP[Var("v",F64),LC("DATA",CTy"IorD"),
                     LC("STORE",CTy"LorS")]),
               Apply
                 (Call
                    ("StoreMemory",ATy(qTy,PTy(uTy,qTy)),
                     TP[Var("CCA",FTy 3),Const("HALFWORD",FTy 3),
                        Bop
                          (Lsl,
                           Mop
                             (Fst,
                              Apply
                                (Call
                                   ("GPR",ATy(qTy,PTy(F64,qTy)),
                                    Var("rt",FTy 5)),qVar"state")),
                           Bop
                             (Mul,LN 8,
                              Mop
                                (Cast nTy,
                                 Bop
                                   (BXor,EX(Var("v",F64),LN 2,LN 0,FTy 3),
                                    CC[Bop
                                         (Rep,
                                          Mop
                                            (Fst,
                                             Apply
                                               (Const
                                                  ("BigEndianCPU",
                                                   ATy(qTy,PTy(F1,qTy))),
                                                qVar"state")),LN 2),
                                       LW(0,1)])))),
                        CC[EX(Var("pAddr",F64),
                              Bop(Sub,Const("PSIZE",nTy),LN 1),LN 3,
                              FTy 61),
                           Bop
                             (BXor,EX(Var("pAddr",F64),LN 2,LN 0,FTy 3),
                              CC[Bop
                                   (Rep,
                                    Mop
                                      (Fst,
                                       Apply
                                         (Const
                                            ("ReverseEndian",
                                             ATy(qTy,PTy(F1,qTy))),
                                          qVar"state")),LN 2),LW(0,1)])],
                        Var("v",F64),LC("DATA",CTy"IorD")]),qVar"state"))))))
;

val storeWord_def = Def
  ("storeWord",TP[Var("base",FTy 5),Var("rt",FTy 5),Var("offset",F16)],
   Close
     (qVar"state",
      Let
        (Var("v",F64),
         Bop
           (Add,Mop(SE F64,Var("offset",F16)),
            Mop
              (Fst,
               Apply
                 (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("base",FTy 5)),
                  qVar"state"))),
         ITE
           (Mop(Not,EQ(EX(Var("v",F64),LN 1,LN 0,FTy 2),LW(0,2))),
            Apply
              (Call
                 ("SignalException",ATy(qTy,PTy(uTy,qTy)),
                  LC("AdES",CTy"ExceptionType")),qVar"state"),
            Let
              (TP[Var("pAddr",F64),Var("CCA",FTy 3)],
               Call
                 ("AddressTranslation",PTy(F64,FTy 3),
                  TP[Var("v",F64),LC("DATA",CTy"IorD"),
                     LC("STORE",CTy"LorS")]),
               Apply
                 (Call
                    ("StoreMemory",ATy(qTy,PTy(uTy,qTy)),
                     TP[Var("CCA",FTy 3),Const("WORD",FTy 3),
                        Bop
                          (Lsl,
                           Mop
                             (Fst,
                              Apply
                                (Call
                                   ("GPR",ATy(qTy,PTy(F64,qTy)),
                                    Var("rt",FTy 5)),qVar"state")),
                           Bop
                             (Mul,LN 8,
                              Mop
                                (Cast nTy,
                                 Bop
                                   (BXor,EX(Var("v",F64),LN 2,LN 0,FTy 3),
                                    CC[Mop
                                         (Fst,
                                          Apply
                                            (Const
                                               ("BigEndianCPU",
                                                ATy(qTy,PTy(F1,qTy))),
                                             qVar"state")),LW(0,2)])))),
                        CC[EX(Var("pAddr",F64),
                              Bop(Sub,Const("PSIZE",nTy),LN 1),LN 3,
                              FTy 61),
                           Bop
                             (BXor,EX(Var("pAddr",F64),LN 2,LN 0,FTy 3),
                              CC[Mop
                                   (Fst,
                                    Apply
                                      (Const
                                         ("ReverseEndian",
                                          ATy(qTy,PTy(F1,qTy))),
                                       qVar"state")),LW(0,2)])],
                        Var("v",F64),LC("DATA",CTy"IorD")]),qVar"state"))))))
;

val storeDoubleword_def = Def
  ("storeDoubleword",
   TP[Var("base",FTy 5),Var("rt",FTy 5),Var("offset",F16)],
   Close
     (qVar"state",
      Let
        (Var("v",F64),
         Bop
           (Add,Mop(SE F64,Var("offset",F16)),
            Mop
              (Fst,
               Apply
                 (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("base",FTy 5)),
                  qVar"state"))),
         ITE
           (Mop(Not,EQ(EX(Var("v",F64),LN 2,LN 0,FTy 3),LW(0,3))),
            Apply
              (Call
                 ("SignalException",ATy(qTy,PTy(uTy,qTy)),
                  LC("AdES",CTy"ExceptionType")),qVar"state"),
            Let
              (TP[Var("pAddr",F64),Var("CCA",FTy 3)],
               Call
                 ("AddressTranslation",PTy(F64,FTy 3),
                  TP[Var("v",F64),LC("DATA",CTy"IorD"),
                     LC("STORE",CTy"LorS")]),
               Apply
                 (Call
                    ("StoreMemory",ATy(qTy,PTy(uTy,qTy)),
                     TP[Var("CCA",FTy 3),Const("DOUBLEWORD",FTy 3),
                        Mop
                          (Fst,
                           Apply
                             (Call
                                ("GPR",ATy(qTy,PTy(F64,qTy)),
                                 Var("rt",FTy 5)),qVar"state")),
                        Var("pAddr",F64),Var("v",F64),LC("DATA",CTy"IorD")]),
                  qVar"state"))))))
;

val dfn'SW_def = Def
  ("dfn'SW",TP[Var("base",FTy 5),Var("rt",FTy 5),Var("offset",F16)],
   Close
     (qVar"state",
      Apply
        (Call
           ("storeWord",ATy(qTy,PTy(uTy,qTy)),
            TP[Var("base",FTy 5),Var("rt",FTy 5),Var("offset",F16)]),
         qVar"state")))
;

val dfn'SD_def = Def
  ("dfn'SD",TP[Var("base",FTy 5),Var("rt",FTy 5),Var("offset",F16)],
   Close
     (qVar"state",
      Apply
        (Call
           ("storeDoubleword",ATy(qTy,PTy(uTy,qTy)),
            TP[Var("base",FTy 5),Var("rt",FTy 5),Var("offset",F16)]),
         qVar"state")))
;

val dfn'SC_def = Def
  ("dfn'SC",TP[Var("base",FTy 5),Var("rt",FTy 5),Var("offset",F16)],
   Close
     (qVar"state",
      CS(Dest("LLbit",OTy bTy,qVar"state"),
         [(LO bTy,
           Apply
             (Call
                ("raise'exception",ATy(qTy,PTy(uTy,qTy)),
                 Call
                   ("UNPREDICTABLE",CTy"exception",LS"SC: LLbit not set")),
              qVar"state")),
          (Mop(Some,LF),
           Apply
             (Call
                ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
                 TP[LW(0,64),Var("rt",FTy 5)]),qVar"state")),
          (Mop(Some,LT),
           Apply
             (Call
                ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
                 TP[LW(1,64),Var("rt",FTy 5)]),
              Mop
                (Snd,
                 Apply
                   (Call
                      ("storeWord",ATy(qTy,PTy(uTy,qTy)),
                       TP[Var("base",FTy 5),Var("rt",FTy 5),
                          Var("offset",F16)]),qVar"state"))))])))
;

val dfn'SCD_def = Def
  ("dfn'SCD",TP[Var("base",FTy 5),Var("rt",FTy 5),Var("offset",F16)],
   Close
     (qVar"state",
      CS(Dest("LLbit",OTy bTy,qVar"state"),
         [(LO bTy,
           Apply
             (Call
                ("raise'exception",ATy(qTy,PTy(uTy,qTy)),
                 Call
                   ("UNPREDICTABLE",CTy"exception",LS"SCD: LLbit not set")),
              qVar"state")),
          (Mop(Some,LF),
           Apply
             (Call
                ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
                 TP[LW(0,64),Var("rt",FTy 5)]),qVar"state")),
          (Mop(Some,LT),
           Apply
             (Call
                ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
                 TP[LW(1,64),Var("rt",FTy 5)]),
              Mop
                (Snd,
                 Apply
                   (Call
                      ("storeDoubleword",ATy(qTy,PTy(uTy,qTy)),
                       TP[Var("base",FTy 5),Var("rt",FTy 5),
                          Var("offset",F16)]),qVar"state"))))])))
;

val dfn'SWL_def = Def
  ("dfn'SWL",TP[Var("base",FTy 5),Var("rt",FTy 5),Var("offset",F16)],
   Close
     (qVar"state",
      Let
        (Var("v",F64),
         Bop
           (Add,Mop(SE F64,Var("offset",F16)),
            Mop
              (Fst,
               Apply
                 (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("base",FTy 5)),
                  qVar"state"))),
         Let
           (TP[Var("pAddr",F64),Var("CCA",FTy 3)],
            Call
              ("AddressTranslation",PTy(F64,FTy 3),
               TP[Var("v",F64),LC("DATA",CTy"IorD"),LC("STORE",CTy"LorS")]),
            Let
              (Var("v0",F64),
               CC[EX(Var("pAddr",F64),Bop(Sub,Const("PSIZE",nTy),LN 1),
                     LN 3,FTy 61),
                  Bop
                    (BXor,EX(Var("pAddr",F64),LN 2,LN 0,FTy 3),
                     Bop
                       (Rep,
                        Mop
                          (Fst,
                           Apply
                             (Const("ReverseEndian",ATy(qTy,PTy(F1,qTy))),
                              qVar"state")),LN 3))],
               Let
                 (Var("v1",FTy 2),
                  Bop
                    (BXor,EX(Var("v",F64),LN 1,LN 0,FTy 2),
                     Bop
                       (Rep,
                        Mop
                          (Fst,
                           Apply
                             (Const("BigEndianCPU",ATy(qTy,PTy(F1,qTy))),
                              qVar"state")),LN 2)),
                  Let
                    (TP[Var("v2",F64),qVar"s0"],
                     CS(Var("v1",FTy 2),
                        [(LW(0,2),
                          TP[Mop
                               (Cast F64,
                                EX(Mop
                                     (Fst,
                                      Apply
                                        (Call
                                           ("GPR",ATy(qTy,PTy(F64,qTy)),
                                            Var("rt",FTy 5)),qVar"state")),
                                   LN 31,LN 24,F8)),qVar"state"]),
                         (LW(1,2),
                          TP[Mop
                               (Cast F64,
                                EX(Mop
                                     (Fst,
                                      Apply
                                        (Call
                                           ("GPR",ATy(qTy,PTy(F64,qTy)),
                                            Var("rt",FTy 5)),qVar"state")),
                                   LN 31,LN 16,F16)),qVar"state"]),
                         (LW(2,2),
                          TP[Mop
                               (Cast F64,
                                EX(Mop
                                     (Fst,
                                      Apply
                                        (Call
                                           ("GPR",ATy(qTy,PTy(F64,qTy)),
                                            Var("rt",FTy 5)),qVar"state")),
                                   LN 31,LN 8,FTy 24)),qVar"state"]),
                         (LW(3,2),
                          TP[Mop
                               (Cast F64,
                                EX(Mop
                                     (Fst,
                                      Apply
                                        (Call
                                           ("GPR",ATy(qTy,PTy(F64,qTy)),
                                            Var("rt",FTy 5)),qVar"state")),
                                   LN 31,LN 0,F32)),qVar"state"])]),
                     Apply
                       (Call
                          ("StoreMemory",ATy(qTy,PTy(uTy,qTy)),
                           TP[Var("CCA",FTy 3),
                              Mop(Cast(FTy 3),Var("v1",FTy 2)),
                              ITE
                                (EQ(Bop
                                      (BXor,EX(Var("v",F64),LN 2,LN 2,F1),
                                       Mop
                                         (Fst,
                                          Apply
                                            (Const
                                               ("BigEndianCPU",
                                                ATy(qTy,PTy(F1,qTy))),
                                             qVar"state"))),LW(1,1)),
                                 Bop(Lsl,Var("v2",F64),LN 32),
                                 Var("v2",F64)),
                              ITE
                                (Mop
                                   (Fst,
                                    Apply
                                      (Const
                                         ("BigEndianMem",
                                          ATy(qTy,PTy(bTy,qTy))),
                                       qVar"state")),Var("v0",F64),
                                 Bop
                                   (BAnd,Var("v0",F64),Mop(BNot,LW(3,64)))),
                              Var("v",F64),LC("DATA",CTy"IorD")]),
                        qVar"s0"))))))))
;

val dfn'SWR_def = Def
  ("dfn'SWR",TP[Var("base",FTy 5),Var("rt",FTy 5),Var("offset",F16)],
   Close
     (qVar"state",
      Let
        (Var("v",F64),
         Bop
           (Add,Mop(SE F64,Var("offset",F16)),
            Mop
              (Fst,
               Apply
                 (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("base",FTy 5)),
                  qVar"state"))),
         Let
           (TP[Var("pAddr",F64),Var("CCA",FTy 3)],
            Call
              ("AddressTranslation",PTy(F64,FTy 3),
               TP[Var("v",F64),LC("DATA",CTy"IorD"),LC("STORE",CTy"LorS")]),
            Let
              (Var("v0",F64),
               CC[EX(Var("pAddr",F64),Bop(Sub,Const("PSIZE",nTy),LN 1),
                     LN 3,FTy 61),
                  Bop
                    (BXor,EX(Var("pAddr",F64),LN 2,LN 0,FTy 3),
                     Bop
                       (Rep,
                        Mop
                          (Fst,
                           Apply
                             (Const("ReverseEndian",ATy(qTy,PTy(F1,qTy))),
                              qVar"state")),LN 3))],
               Let
                 (Var("v1",FTy 2),
                  Bop
                    (BXor,EX(Var("v",F64),LN 1,LN 0,FTy 2),
                     Bop
                       (Rep,
                        Mop
                          (Fst,
                           Apply
                             (Const("BigEndianCPU",ATy(qTy,PTy(F1,qTy))),
                              qVar"state")),LN 2)),
                  Let
                    (TP[Var("v2",F64),qVar"s0"],
                     CS(TP[Bop
                             (BXor,EX(Var("v",F64),LN 2,LN 2,F1),
                              Mop
                                (Fst,
                                 Apply
                                   (Const
                                      ("BigEndianCPU",
                                       ATy(qTy,PTy(F1,qTy))),qVar"state"))),
                           Var("v1",FTy 2)],
                        [(TP[LW(0,1),LW(0,2)],
                          TP[Mop
                               (Cast F64,
                                EX(Mop
                                     (Fst,
                                      Apply
                                        (Call
                                           ("GPR",ATy(qTy,PTy(F64,qTy)),
                                            Var("rt",FTy 5)),qVar"state")),
                                   LN 31,LN 0,F32)),qVar"state"]),
                         (TP[LW(0,1),LW(1,2)],
                          TP[Bop
                               (Lsl,
                                Mop
                                  (Cast F64,
                                   EX(Mop
                                        (Fst,
                                         Apply
                                           (Call
                                              ("GPR",
                                               ATy(qTy,PTy(F64,qTy)),
                                               Var("rt",FTy 5)),
                                            qVar"state")),LN 23,LN 0,
                                      FTy 24)),LN 8),qVar"state"]),
                         (TP[LW(0,1),LW(2,2)],
                          TP[Bop
                               (Lsl,
                                Mop
                                  (Cast F64,
                                   EX(Mop
                                        (Fst,
                                         Apply
                                           (Call
                                              ("GPR",
                                               ATy(qTy,PTy(F64,qTy)),
                                               Var("rt",FTy 5)),
                                            qVar"state")),LN 15,LN 0,F16)),
                                LN 16),qVar"state"]),
                         (TP[LW(0,1),LW(3,2)],
                          TP[Bop
                               (Lsl,
                                Mop
                                  (Cast F64,
                                   EX(Mop
                                        (Fst,
                                         Apply
                                           (Call
                                              ("GPR",
                                               ATy(qTy,PTy(F64,qTy)),
                                               Var("rt",FTy 5)),
                                            qVar"state")),LN 7,LN 0,F8)),
                                LN 24),qVar"state"]),
                         (TP[LW(1,1),LW(0,2)],
                          TP[Bop
                               (Lsl,
                                Mop
                                  (Cast F64,
                                   EX(Mop
                                        (Fst,
                                         Apply
                                           (Call
                                              ("GPR",
                                               ATy(qTy,PTy(F64,qTy)),
                                               Var("rt",FTy 5)),
                                            qVar"state")),LN 31,LN 0,F32)),
                                LN 32),qVar"state"]),
                         (TP[LW(1,1),LW(1,2)],
                          TP[Bop
                               (Lsl,
                                Mop
                                  (Cast F64,
                                   EX(Mop
                                        (Fst,
                                         Apply
                                           (Call
                                              ("GPR",
                                               ATy(qTy,PTy(F64,qTy)),
                                               Var("rt",FTy 5)),
                                            qVar"state")),LN 23,LN 0,
                                      FTy 24)),LN 40),qVar"state"]),
                         (TP[LW(1,1),LW(2,2)],
                          TP[Bop
                               (Lsl,
                                Mop
                                  (Cast F64,
                                   EX(Mop
                                        (Fst,
                                         Apply
                                           (Call
                                              ("GPR",
                                               ATy(qTy,PTy(F64,qTy)),
                                               Var("rt",FTy 5)),
                                            qVar"state")),LN 15,LN 0,F16)),
                                LN 48),qVar"state"]),
                         (TP[LW(1,1),LW(3,2)],
                          TP[Bop
                               (Lsl,
                                Mop
                                  (Cast F64,
                                   EX(Mop
                                        (Fst,
                                         Apply
                                           (Call
                                              ("GPR",
                                               ATy(qTy,PTy(F64,qTy)),
                                               Var("rt",FTy 5)),
                                            qVar"state")),LN 7,LN 0,F8)),
                                LN 56),qVar"state"])]),
                     Apply
                       (Call
                          ("StoreMemory",ATy(qTy,PTy(uTy,qTy)),
                           TP[Var("CCA",FTy 3),
                              Bop
                                (Sub,Const("WORD",FTy 3),
                                 Mop(Cast(FTy 3),Var("v1",FTy 2))),
                              Var("v2",F64),
                              ITE
                                (Mop
                                   (Fst,
                                    Apply
                                      (Const
                                         ("BigEndianMem",
                                          ATy(qTy,PTy(bTy,qTy))),
                                       qVar"state")),Var("v0",F64),
                                 Bop
                                   (BAnd,Var("v0",F64),Mop(BNot,LW(3,64)))),
                              Var("v",F64),LC("DATA",CTy"IorD")]),
                        qVar"s0"))))))))
;

val dfn'SDL_def = Def
  ("dfn'SDL",TP[Var("base",FTy 5),Var("rt",FTy 5),Var("offset",F16)],
   Close
     (qVar"state",
      Let
        (Var("v",F64),
         Bop
           (Add,Mop(SE F64,Var("offset",F16)),
            Mop
              (Fst,
               Apply
                 (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("base",FTy 5)),
                  qVar"state"))),
         Let
           (TP[Var("pAddr",F64),Var("CCA",FTy 3)],
            Call
              ("AddressTranslation",PTy(F64,FTy 3),
               TP[Var("v",F64),LC("DATA",CTy"IorD"),LC("STORE",CTy"LorS")]),
            Let
              (Var("v0",F64),
               CC[EX(Var("pAddr",F64),Bop(Sub,Const("PSIZE",nTy),LN 1),
                     LN 3,FTy 61),
                  Bop
                    (BXor,EX(Var("pAddr",F64),LN 2,LN 0,FTy 3),
                     Bop
                       (Rep,
                        Mop
                          (Fst,
                           Apply
                             (Const("ReverseEndian",ATy(qTy,PTy(F1,qTy))),
                              qVar"state")),LN 3))],
               Let
                 (Var("v1",FTy 3),
                  Bop
                    (BXor,EX(Var("v",F64),LN 2,LN 0,FTy 3),
                     Bop
                       (Rep,
                        Mop
                          (Fst,
                           Apply
                             (Const("BigEndianCPU",ATy(qTy,PTy(F1,qTy))),
                              qVar"state")),LN 3)),
                  Let
                    (TP[Var("v2",F64),qVar"s0"],
                     CS(Var("v1",FTy 3),
                        [(LW(0,3),
                          TP[Mop
                               (Cast F64,
                                EX(Mop
                                     (Fst,
                                      Apply
                                        (Call
                                           ("GPR",ATy(qTy,PTy(F64,qTy)),
                                            Var("rt",FTy 5)),qVar"state")),
                                   LN 63,LN 56,F8)),qVar"state"]),
                         (LW(1,3),
                          TP[Mop
                               (Cast F64,
                                EX(Mop
                                     (Fst,
                                      Apply
                                        (Call
                                           ("GPR",ATy(qTy,PTy(F64,qTy)),
                                            Var("rt",FTy 5)),qVar"state")),
                                   LN 63,LN 48,F16)),qVar"state"]),
                         (LW(2,3),
                          TP[Mop
                               (Cast F64,
                                EX(Mop
                                     (Fst,
                                      Apply
                                        (Call
                                           ("GPR",ATy(qTy,PTy(F64,qTy)),
                                            Var("rt",FTy 5)),qVar"state")),
                                   LN 63,LN 40,FTy 24)),qVar"state"]),
                         (LW(3,3),
                          TP[Mop
                               (Cast F64,
                                EX(Mop
                                     (Fst,
                                      Apply
                                        (Call
                                           ("GPR",ATy(qTy,PTy(F64,qTy)),
                                            Var("rt",FTy 5)),qVar"state")),
                                   LN 63,LN 32,F32)),qVar"state"]),
                         (LW(4,3),
                          TP[Mop
                               (Cast F64,
                                EX(Mop
                                     (Fst,
                                      Apply
                                        (Call
                                           ("GPR",ATy(qTy,PTy(F64,qTy)),
                                            Var("rt",FTy 5)),qVar"state")),
                                   LN 63,LN 24,FTy 40)),qVar"state"]),
                         (LW(5,3),
                          TP[Mop
                               (Cast F64,
                                EX(Mop
                                     (Fst,
                                      Apply
                                        (Call
                                           ("GPR",ATy(qTy,PTy(F64,qTy)),
                                            Var("rt",FTy 5)),qVar"state")),
                                   LN 63,LN 16,FTy 48)),qVar"state"]),
                         (LW(6,3),
                          TP[Mop
                               (Cast F64,
                                EX(Mop
                                     (Fst,
                                      Apply
                                        (Call
                                           ("GPR",ATy(qTy,PTy(F64,qTy)),
                                            Var("rt",FTy 5)),qVar"state")),
                                   LN 63,LN 8,FTy 56)),qVar"state"]),
                         (LW(7,3),
                          TP[Mop
                               (Fst,
                                Apply
                                  (Call
                                     ("GPR",ATy(qTy,PTy(F64,qTy)),
                                      Var("rt",FTy 5)),qVar"state")),
                             qVar"state"])]),
                     Apply
                       (Call
                          ("StoreMemory",ATy(qTy,PTy(uTy,qTy)),
                           TP[Var("CCA",FTy 3),Var("v1",FTy 3),
                              Var("v2",F64),
                              ITE
                                (Mop
                                   (Fst,
                                    Apply
                                      (Const
                                         ("BigEndianMem",
                                          ATy(qTy,PTy(bTy,qTy))),
                                       qVar"state")),Var("v0",F64),
                                 Bop
                                   (BAnd,Var("v0",F64),Mop(BNot,LW(7,64)))),
                              Var("v",F64),LC("DATA",CTy"IorD")]),
                        qVar"s0"))))))))
;

val dfn'SDR_def = Def
  ("dfn'SDR",TP[Var("base",FTy 5),Var("rt",FTy 5),Var("offset",F16)],
   Close
     (qVar"state",
      Let
        (Var("v",F64),
         Bop
           (Add,Mop(SE F64,Var("offset",F16)),
            Mop
              (Fst,
               Apply
                 (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("base",FTy 5)),
                  qVar"state"))),
         Let
           (TP[Var("pAddr",F64),Var("CCA",FTy 3)],
            Call
              ("AddressTranslation",PTy(F64,FTy 3),
               TP[Var("v",F64),LC("DATA",CTy"IorD"),LC("STORE",CTy"LorS")]),
            Let
              (Var("v0",F64),
               CC[EX(Var("pAddr",F64),Bop(Sub,Const("PSIZE",nTy),LN 1),
                     LN 3,FTy 61),
                  Bop
                    (BXor,EX(Var("pAddr",F64),LN 2,LN 0,FTy 3),
                     Bop
                       (Rep,
                        Mop
                          (Fst,
                           Apply
                             (Const("ReverseEndian",ATy(qTy,PTy(F1,qTy))),
                              qVar"state")),LN 3))],
               Let
                 (Var("v1",FTy 3),
                  Bop
                    (BXor,EX(Var("v",F64),LN 2,LN 0,FTy 3),
                     Bop
                       (Rep,
                        Mop
                          (Fst,
                           Apply
                             (Const("BigEndianCPU",ATy(qTy,PTy(F1,qTy))),
                              qVar"state")),LN 3)),
                  Let
                    (TP[Var("v2",F64),qVar"s0"],
                     CS(Var("v1",FTy 3),
                        [(LW(0,3),
                          TP[Mop
                               (Fst,
                                Apply
                                  (Call
                                     ("GPR",ATy(qTy,PTy(F64,qTy)),
                                      Var("rt",FTy 5)),qVar"state")),
                             qVar"state"]),
                         (LW(1,3),
                          TP[Bop
                               (Lsl,
                                Mop
                                  (Cast F64,
                                   EX(Mop
                                        (Fst,
                                         Apply
                                           (Call
                                              ("GPR",
                                               ATy(qTy,PTy(F64,qTy)),
                                               Var("rt",FTy 5)),
                                            qVar"state")),LN 63,LN 8,
                                      FTy 56)),LN 8),qVar"state"]),
                         (LW(2,3),
                          TP[Bop
                               (Lsl,
                                Mop
                                  (Cast F64,
                                   EX(Mop
                                        (Fst,
                                         Apply
                                           (Call
                                              ("GPR",
                                               ATy(qTy,PTy(F64,qTy)),
                                               Var("rt",FTy 5)),
                                            qVar"state")),LN 63,LN 16,
                                      FTy 48)),LN 16),qVar"state"]),
                         (LW(3,3),
                          TP[Bop
                               (Lsl,
                                Mop
                                  (Cast F64,
                                   EX(Mop
                                        (Fst,
                                         Apply
                                           (Call
                                              ("GPR",
                                               ATy(qTy,PTy(F64,qTy)),
                                               Var("rt",FTy 5)),
                                            qVar"state")),LN 63,LN 24,
                                      FTy 40)),LN 24),qVar"state"]),
                         (LW(4,3),
                          TP[Bop
                               (Lsl,
                                Mop
                                  (Cast F64,
                                   EX(Mop
                                        (Fst,
                                         Apply
                                           (Call
                                              ("GPR",
                                               ATy(qTy,PTy(F64,qTy)),
                                               Var("rt",FTy 5)),
                                            qVar"state")),LN 63,LN 32,F32)),
                                LN 32),qVar"state"]),
                         (LW(5,3),
                          TP[Bop
                               (Lsl,
                                Mop
                                  (Cast F64,
                                   EX(Mop
                                        (Fst,
                                         Apply
                                           (Call
                                              ("GPR",
                                               ATy(qTy,PTy(F64,qTy)),
                                               Var("rt",FTy 5)),
                                            qVar"state")),LN 63,LN 40,
                                      FTy 24)),LN 40),qVar"state"]),
                         (LW(6,3),
                          TP[Bop
                               (Lsl,
                                Mop
                                  (Cast F64,
                                   EX(Mop
                                        (Fst,
                                         Apply
                                           (Call
                                              ("GPR",
                                               ATy(qTy,PTy(F64,qTy)),
                                               Var("rt",FTy 5)),
                                            qVar"state")),LN 63,LN 48,F16)),
                                LN 48),qVar"state"]),
                         (LW(7,3),
                          TP[Bop
                               (Lsl,
                                Mop
                                  (Cast F64,
                                   EX(Mop
                                        (Fst,
                                         Apply
                                           (Call
                                              ("GPR",
                                               ATy(qTy,PTy(F64,qTy)),
                                               Var("rt",FTy 5)),
                                            qVar"state")),LN 63,LN 56,F8)),
                                LN 56),qVar"state"])]),
                     Apply
                       (Call
                          ("StoreMemory",ATy(qTy,PTy(uTy,qTy)),
                           TP[Var("CCA",FTy 3),
                              Bop
                                (Sub,Const("DOUBLEWORD",FTy 3),
                                 Var("v1",FTy 3)),Var("v2",F64),
                              ITE
                                (Mop
                                   (Fst,
                                    Apply
                                      (Const
                                         ("BigEndianMem",
                                          ATy(qTy,PTy(bTy,qTy))),
                                       qVar"state")),Var("v0",F64),
                                 Bop
                                   (BAnd,Var("v0",F64),Mop(BNot,LW(7,64)))),
                              Var("v",F64),LC("DATA",CTy"IorD")]),
                        qVar"s0"))))))))
;

val dfn'SYNC_def = Def("dfn'SYNC",Var("stype",FTy 5),LU)
;

val dfn'BREAK_def = Def
  ("dfn'BREAK",qVar"state",
   Apply
     (Call
        ("SignalException",ATy(qTy,PTy(uTy,qTy)),
         LC("Bp",CTy"ExceptionType")),qVar"state"))
;

val dfn'SYSCALL_def = Def
  ("dfn'SYSCALL",qVar"state",
   Apply
     (Call
        ("SignalException",ATy(qTy,PTy(uTy,qTy)),
         LC("Sys",CTy"ExceptionType")),qVar"state"))
;

val dfn'ERET_def = Def
  ("dfn'ERET",qVar"state",
   TP[LU,
      Rupd
        ("LLbit",
         TP[ITE
              (Dest
                 ("ERL",bTy,
                  Dest
                    ("Status",CTy"StatusRegister",
                     Dest("CP0",CTy"CP0",qVar"state"))),
               Let
                 (qVar"s",
                  Rupd
                    ("PC",
                     TP[qVar"state",
                        Dest
                          ("ErrorEPC",F64,
                           Dest("CP0",CTy"CP0",qVar"state"))]),
                  Let
                    (Var("v",CTy"CP0"),Dest("CP0",CTy"CP0",qVar"s"),
                     Rupd
                       ("CP0",
                        TP[qVar"s",
                           Rupd
                             ("Status",
                              TP[Var("v",CTy"CP0"),
                                 Rupd
                                   ("ERL",
                                    TP[Dest
                                         ("Status",CTy"StatusRegister",
                                          Var("v",CTy"CP0")),LF])])]))),
               Let
                 (qVar"s",
                  Rupd
                    ("PC",
                     TP[qVar"state",
                        Dest("EPC",F64,Dest("CP0",CTy"CP0",qVar"state"))]),
                  Let
                    (Var("v",CTy"CP0"),Dest("CP0",CTy"CP0",qVar"s"),
                     Rupd
                       ("CP0",
                        TP[qVar"s",
                           Rupd
                             ("Status",
                              TP[Var("v",CTy"CP0"),
                                 Rupd
                                   ("EXL",
                                    TP[Dest
                                         ("Status",CTy"StatusRegister",
                                          Var("v",CTy"CP0")),LF])])])))),
            Mop(Some,LF)])])
;

val dfn'MTC0_def = Def
  ("dfn'MTC0",TP[Var("rt",FTy 5),Var("rd",FTy 5),Var("sel",FTy 3)],
   Close
     (qVar"state",
      Apply
        (Call
           ("write'CPR",ATy(qTy,PTy(uTy,qTy)),
            TP[Mop
                 (Fst,
                  Apply
                    (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                     qVar"state")),LN 0,Var("rd",FTy 5),Var("sel",FTy 3)]),
         qVar"state")))
;

val dfn'DMTC0_def = Def
  ("dfn'DMTC0",TP[Var("rt",FTy 5),Var("rd",FTy 5),Var("sel",FTy 3)],
   Close
     (qVar"state",
      Apply
        (Call
           ("write'CPR",ATy(qTy,PTy(uTy,qTy)),
            TP[Mop
                 (Fst,
                  Apply
                    (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                     qVar"state")),LN 0,Var("rd",FTy 5),Var("sel",FTy 3)]),
         qVar"state")))
;

val dfn'MFC0_def = Def
  ("dfn'MFC0",TP[Var("rt",FTy 5),Var("rd",FTy 5),Var("sel",FTy 3)],
   Close
     (qVar"state",
      Apply
        (Call
           ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
            TP[Mop
                 (SE F64,
                  EX(Mop
                       (Fst,
                        Apply
                          (Call
                             ("CPR",ATy(qTy,PTy(F64,qTy)),
                              TP[LN 0,Var("rd",FTy 5),Var("sel",FTy 3)]),
                           qVar"state")),LN 32,LN 0,FTy 33)),
               Var("rt",FTy 5)]),qVar"state")))
;

val dfn'DMFC0_def = Def
  ("dfn'DMFC0",TP[Var("rt",FTy 5),Var("rd",FTy 5),Var("sel",FTy 3)],
   Close
     (qVar"state",
      Apply
        (Call
           ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
            TP[Mop
                 (Fst,
                  Apply
                    (Call
                       ("CPR",ATy(qTy,PTy(F64,qTy)),
                        TP[LN 0,Var("rd",FTy 5),Var("sel",FTy 3)]),
                     qVar"state")),Var("rt",FTy 5)]),qVar"state")))
;

val dfn'J_def = Def
  ("dfn'J",Var("instr_index",FTy 26),
   Close
     (qVar"state",
      TP[LU,
         Rupd
           ("BranchStatus",
            TP[qVar"state",
               Mop
                 (Some,
                  CC[EX(Dest("PC",F64,qVar"state"),LN 63,LN 28,FTy 36),
                     Var("instr_index",FTy 26),LW(0,2)])])]))
;

val dfn'JAL_def = Def
  ("dfn'JAL",Var("instr_index",FTy 26),
   Close
     (qVar"state",
      Let
        (qVar"s",
         Mop
           (Snd,
            Apply
              (Call
                 ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
                  TP[Bop(Add,Dest("PC",F64,qVar"state"),LW(8,64)),LW(31,5)]),
               qVar"state")),
         TP[LU,
            Rupd
              ("BranchStatus",
               TP[qVar"s",
                  Mop
                    (Some,
                     CC[EX(Dest("PC",F64,qVar"s"),LN 63,LN 28,FTy 36),
                        Var("instr_index",FTy 26),LW(0,2)])])])))
;

val dfn'JR_def = Def
  ("dfn'JR",Var("rs",FTy 5),
   Close
     (qVar"state",
      TP[LU,
         Rupd
           ("BranchStatus",
            TP[qVar"state",
               Mop
                 (Some,
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                        qVar"state")))])]))
;

val dfn'JALR_def = Def
  ("dfn'JALR",TP[Var("rs",FTy 5),Var("rd",FTy 5)],
   Close
     (qVar"state",
      TP[LU,
         Rupd
           ("BranchStatus",
            TP[Mop
                 (Snd,
                  Apply
                    (Call
                       ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
                        TP[Bop(Add,Dest("PC",F64,qVar"state"),LW(8,64)),
                           Var("rd",FTy 5)]),qVar"state")),
               Mop
                 (Some,
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                        qVar"state")))])]))
;

val dfn'BEQ_def = Def
  ("dfn'BEQ",TP[Var("rs",FTy 5),Var("rt",FTy 5),Var("offset",F16)],
   Close
     (qVar"state",
      TP[LU,
         ITE
           (EQ(Mop
                 (Fst,
                  Apply
                    (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                     qVar"state")),
               Mop
                 (Fst,
                  Apply
                    (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                     qVar"state"))),
            Rupd
              ("BranchStatus",
               TP[qVar"state",
                  Mop
                    (Some,
                     Bop
                       (Add,Dest("PC",F64,qVar"state"),
                        Bop(Lsl,Mop(SE F64,Var("offset",F16)),LN 2)))]),
            qVar"state")]))
;

val dfn'BNE_def = Def
  ("dfn'BNE",TP[Var("rs",FTy 5),Var("rt",FTy 5),Var("offset",F16)],
   Close
     (qVar"state",
      TP[LU,
         ITE
           (Mop
              (Not,
               EQ(Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                        qVar"state")),
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                        qVar"state")))),
            Rupd
              ("BranchStatus",
               TP[qVar"state",
                  Mop
                    (Some,
                     Bop
                       (Add,Dest("PC",F64,qVar"state"),
                        Bop(Lsl,Mop(SE F64,Var("offset",F16)),LN 2)))]),
            qVar"state")]))
;

val dfn'BLEZ_def = Def
  ("dfn'BLEZ",TP[Var("rs",FTy 5),Var("offset",F16)],
   Close
     (qVar"state",
      TP[LU,
         ITE
           (Bop
              (Le,
               Mop
                 (Fst,
                  Apply
                    (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                     qVar"state")),LW(0,64)),
            Rupd
              ("BranchStatus",
               TP[qVar"state",
                  Mop
                    (Some,
                     Bop
                       (Add,Dest("PC",F64,qVar"state"),
                        Bop(Lsl,Mop(SE F64,Var("offset",F16)),LN 2)))]),
            qVar"state")]))
;

val dfn'BGTZ_def = Def
  ("dfn'BGTZ",TP[Var("rs",FTy 5),Var("offset",F16)],
   Close
     (qVar"state",
      TP[LU,
         ITE
           (Bop
              (Gt,
               Mop
                 (Fst,
                  Apply
                    (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                     qVar"state")),LW(0,64)),
            Rupd
              ("BranchStatus",
               TP[qVar"state",
                  Mop
                    (Some,
                     Bop
                       (Add,Dest("PC",F64,qVar"state"),
                        Bop(Lsl,Mop(SE F64,Var("offset",F16)),LN 2)))]),
            qVar"state")]))
;

val dfn'BLTZ_def = Def
  ("dfn'BLTZ",TP[Var("rs",FTy 5),Var("offset",F16)],
   Close
     (qVar"state",
      TP[LU,
         ITE
           (Bop
              (Lt,
               Mop
                 (Fst,
                  Apply
                    (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                     qVar"state")),LW(0,64)),
            Rupd
              ("BranchStatus",
               TP[qVar"state",
                  Mop
                    (Some,
                     Bop
                       (Add,Dest("PC",F64,qVar"state"),
                        Bop(Lsl,Mop(SE F64,Var("offset",F16)),LN 2)))]),
            qVar"state")]))
;

val dfn'BGEZ_def = Def
  ("dfn'BGEZ",TP[Var("rs",FTy 5),Var("offset",F16)],
   Close
     (qVar"state",
      TP[LU,
         ITE
           (Bop
              (Ge,
               Mop
                 (Fst,
                  Apply
                    (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                     qVar"state")),LW(0,64)),
            Rupd
              ("BranchStatus",
               TP[qVar"state",
                  Mop
                    (Some,
                     Bop
                       (Add,Dest("PC",F64,qVar"state"),
                        Bop(Lsl,Mop(SE F64,Var("offset",F16)),LN 2)))]),
            qVar"state")]))
;

val dfn'BLTZAL_def = Def
  ("dfn'BLTZAL",TP[Var("rs",FTy 5),Var("offset",F16)],
   Close
     (qVar"state",
      Let
        (qVar"s",
         Mop
           (Snd,
            Apply
              (Call
                 ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
                  TP[Bop(Add,Dest("PC",F64,qVar"state"),LW(8,64)),LW(31,5)]),
               qVar"state")),
         TP[LU,
            ITE
              (Bop
                 (Lt,
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                        qVar"state")),LW(0,64)),
               Rupd
                 ("BranchStatus",
                  TP[qVar"s",
                     Mop
                       (Some,
                        Bop
                          (Add,Dest("PC",F64,qVar"s"),
                           Bop(Lsl,Mop(SE F64,Var("offset",F16)),LN 2)))]),
               qVar"s")])))
;

val dfn'BGEZAL_def = Def
  ("dfn'BGEZAL",TP[Var("rs",FTy 5),Var("offset",F16)],
   Close
     (qVar"state",
      Let
        (qVar"s",
         Mop
           (Snd,
            Apply
              (Call
                 ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
                  TP[Bop(Add,Dest("PC",F64,qVar"state"),LW(8,64)),LW(31,5)]),
               qVar"state")),
         TP[LU,
            ITE
              (Bop
                 (Ge,
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                        qVar"state")),LW(0,64)),
               Rupd
                 ("BranchStatus",
                  TP[qVar"s",
                     Mop
                       (Some,
                        Bop
                          (Add,Dest("PC",F64,qVar"s"),
                           Bop(Lsl,Mop(SE F64,Var("offset",F16)),LN 2)))]),
               qVar"s")])))
;

val dfn'BEQL_def = Def
  ("dfn'BEQL",TP[Var("rs",FTy 5),Var("rt",FTy 5),Var("offset",F16)],
   Close
     (qVar"state",
      TP[LU,
         ITE
           (EQ(Mop
                 (Fst,
                  Apply
                    (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                     qVar"state")),
               Mop
                 (Fst,
                  Apply
                    (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                     qVar"state"))),
            Rupd
              ("BranchStatus",
               TP[qVar"state",
                  Mop
                    (Some,
                     Bop
                       (Add,Dest("PC",F64,qVar"state"),
                        Bop(Lsl,Mop(SE F64,Var("offset",F16)),LN 2)))]),
            Rupd
              ("PC",
               TP[qVar"state",Bop(Add,Dest("PC",F64,qVar"state"),LW(4,64))]))]))
;

val dfn'BNEL_def = Def
  ("dfn'BNEL",TP[Var("rs",FTy 5),Var("rt",FTy 5),Var("offset",F16)],
   Close
     (qVar"state",
      TP[LU,
         ITE
           (Mop
              (Not,
               EQ(Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                        qVar"state")),
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rt",FTy 5)),
                        qVar"state")))),
            Rupd
              ("BranchStatus",
               TP[qVar"state",
                  Mop
                    (Some,
                     Bop
                       (Add,Dest("PC",F64,qVar"state"),
                        Bop(Lsl,Mop(SE F64,Var("offset",F16)),LN 2)))]),
            Rupd
              ("PC",
               TP[qVar"state",Bop(Add,Dest("PC",F64,qVar"state"),LW(4,64))]))]))
;

val dfn'BLEZL_def = Def
  ("dfn'BLEZL",TP[Var("rs",FTy 5),Var("offset",F16)],
   Close
     (qVar"state",
      TP[LU,
         ITE
           (Bop
              (Le,
               Mop
                 (Fst,
                  Apply
                    (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                     qVar"state")),LW(0,64)),
            Rupd
              ("BranchStatus",
               TP[qVar"state",
                  Mop
                    (Some,
                     Bop
                       (Add,Dest("PC",F64,qVar"state"),
                        Bop(Lsl,Mop(SE F64,Var("offset",F16)),LN 2)))]),
            Rupd
              ("PC",
               TP[qVar"state",Bop(Add,Dest("PC",F64,qVar"state"),LW(4,64))]))]))
;

val dfn'BGTZL_def = Def
  ("dfn'BGTZL",TP[Var("rs",FTy 5),Var("offset",F16)],
   Close
     (qVar"state",
      TP[LU,
         ITE
           (Bop
              (Gt,
               Mop
                 (Fst,
                  Apply
                    (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                     qVar"state")),LW(0,64)),
            Rupd
              ("BranchStatus",
               TP[qVar"state",
                  Mop
                    (Some,
                     Bop
                       (Add,Dest("PC",F64,qVar"state"),
                        Bop(Lsl,Mop(SE F64,Var("offset",F16)),LN 2)))]),
            Rupd
              ("PC",
               TP[qVar"state",Bop(Add,Dest("PC",F64,qVar"state"),LW(4,64))]))]))
;

val dfn'BLTZL_def = Def
  ("dfn'BLTZL",TP[Var("rs",FTy 5),Var("offset",F16)],
   Close
     (qVar"state",
      TP[LU,
         ITE
           (Bop
              (Lt,
               Mop
                 (Fst,
                  Apply
                    (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                     qVar"state")),LW(0,64)),
            Rupd
              ("BranchStatus",
               TP[qVar"state",
                  Mop
                    (Some,
                     Bop
                       (Add,Dest("PC",F64,qVar"state"),
                        Bop(Lsl,Mop(SE F64,Var("offset",F16)),LN 2)))]),
            Rupd
              ("PC",
               TP[qVar"state",Bop(Add,Dest("PC",F64,qVar"state"),LW(4,64))]))]))
;

val dfn'BGEZL_def = Def
  ("dfn'BGEZL",TP[Var("rs",FTy 5),Var("offset",F16)],
   Close
     (qVar"state",
      TP[LU,
         ITE
           (Bop
              (Ge,
               Mop
                 (Fst,
                  Apply
                    (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                     qVar"state")),LW(0,64)),
            Rupd
              ("BranchStatus",
               TP[qVar"state",
                  Mop
                    (Some,
                     Bop
                       (Add,Dest("PC",F64,qVar"state"),
                        Bop(Lsl,Mop(SE F64,Var("offset",F16)),LN 2)))]),
            Rupd
              ("PC",
               TP[qVar"state",Bop(Add,Dest("PC",F64,qVar"state"),LW(4,64))]))]))
;

val dfn'BLTZALL_def = Def
  ("dfn'BLTZALL",TP[Var("rs",FTy 5),Var("offset",F16)],
   Close
     (qVar"state",
      Let
        (qVar"s",
         Mop
           (Snd,
            Apply
              (Call
                 ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
                  TP[Bop(Add,Dest("PC",F64,qVar"state"),LW(8,64)),LW(31,5)]),
               qVar"state")),
         TP[LU,
            ITE
              (Bop
                 (Lt,
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                        qVar"state")),LW(0,64)),
               Rupd
                 ("BranchStatus",
                  TP[qVar"s",
                     Mop
                       (Some,
                        Bop
                          (Add,Dest("PC",F64,qVar"s"),
                           Bop(Lsl,Mop(SE F64,Var("offset",F16)),LN 2)))]),
               Rupd
                 ("PC",
                  TP[qVar"s",Bop(Add,Dest("PC",F64,qVar"s"),LW(4,64))]))])))
;

val dfn'BGEZALL_def = Def
  ("dfn'BGEZALL",TP[Var("rs",FTy 5),Var("offset",F16)],
   Close
     (qVar"state",
      Let
        (qVar"s",
         Mop
           (Snd,
            Apply
              (Call
                 ("write'GPR",ATy(qTy,PTy(uTy,qTy)),
                  TP[Bop(Add,Dest("PC",F64,qVar"state"),LW(8,64)),LW(31,5)]),
               qVar"state")),
         TP[LU,
            ITE
              (Bop
                 (Ge,
                  Mop
                    (Fst,
                     Apply
                       (Call("GPR",ATy(qTy,PTy(F64,qTy)),Var("rs",FTy 5)),
                        qVar"state")),LW(0,64)),
               Rupd
                 ("BranchStatus",
                  TP[qVar"s",
                     Mop
                       (Some,
                        Bop
                          (Add,Dest("PC",F64,qVar"s"),
                           Bop(Lsl,Mop(SE F64,Var("offset",F16)),LN 2)))]),
               Rupd
                 ("PC",
                  TP[qVar"s",Bop(Add,Dest("PC",F64,qVar"s"),LW(4,64))]))])))
;

val dfn'ReservedInstruction_def = Def
  ("dfn'ReservedInstruction",qVar"state",
   Apply
     (Call
        ("SignalException",ATy(qTy,PTy(uTy,qTy)),
         LC("RI",CTy"ExceptionType")),qVar"state"))
;

val Run_def = Def
  ("Run",Var("v0",CTy"instruction"),
   Close
     (qVar"state",
      CS(Var("v0",CTy"instruction"),
         [(Const("BREAK",CTy"instruction"),
           Apply(Const("dfn'BREAK",ATy(qTy,PTy(uTy,qTy))),qVar"state")),
          (Const("ERET",CTy"instruction"),
           Apply(Const("dfn'ERET",ATy(qTy,PTy(uTy,qTy))),qVar"state")),
          (Const("ReservedInstruction",CTy"instruction"),
           Apply
             (Const("dfn'ReservedInstruction",ATy(qTy,PTy(uTy,qTy))),
              qVar"state")),
          (Const("SYSCALL",CTy"instruction"),
           Apply(Const("dfn'SYSCALL",ATy(qTy,PTy(uTy,qTy))),qVar"state")),
          (Call("SYNC",CTy"instruction",Var("v120",FTy 5)),
           TP[Call("dfn'SYNC",uTy,Var("v120",FTy 5)),qVar"state"]),
          (Call("ArithI",CTy"instruction",Var("v1",CTy"ArithI")),
           CS(Var("v1",CTy"ArithI"),
              [(Call
                  ("ADDI",CTy"ArithI",Var("v2",PTy(FTy 5,PTy(FTy 5,F16)))),
                Apply
                  (Call
                     ("dfn'ADDI",ATy(qTy,PTy(uTy,qTy)),
                      Var("v2",PTy(FTy 5,PTy(FTy 5,F16)))),qVar"state")),
               (Call
                  ("ADDIU",CTy"ArithI",
                   Var("v3",PTy(FTy 5,PTy(FTy 5,F16)))),
                Apply
                  (Call
                     ("dfn'ADDIU",ATy(qTy,PTy(uTy,qTy)),
                      Var("v3",PTy(FTy 5,PTy(FTy 5,F16)))),qVar"state")),
               (Call
                  ("ANDI",CTy"ArithI",Var("v4",PTy(FTy 5,PTy(FTy 5,F16)))),
                Apply
                  (Call
                     ("dfn'ANDI",ATy(qTy,PTy(uTy,qTy)),
                      Var("v4",PTy(FTy 5,PTy(FTy 5,F16)))),qVar"state")),
               (Call
                  ("DADDI",CTy"ArithI",
                   Var("v5",PTy(FTy 5,PTy(FTy 5,F16)))),
                Apply
                  (Call
                     ("dfn'DADDI",ATy(qTy,PTy(uTy,qTy)),
                      Var("v5",PTy(FTy 5,PTy(FTy 5,F16)))),qVar"state")),
               (Call
                  ("DADDIU",CTy"ArithI",
                   Var("v6",PTy(FTy 5,PTy(FTy 5,F16)))),
                Apply
                  (Call
                     ("dfn'DADDIU",ATy(qTy,PTy(uTy,qTy)),
                      Var("v6",PTy(FTy 5,PTy(FTy 5,F16)))),qVar"state")),
               (Call("LUI",CTy"ArithI",Var("v7",PTy(FTy 5,F16))),
                Apply
                  (Call
                     ("dfn'LUI",ATy(qTy,PTy(uTy,qTy)),
                      Var("v7",PTy(FTy 5,F16))),qVar"state")),
               (Call
                  ("ORI",CTy"ArithI",Var("v8",PTy(FTy 5,PTy(FTy 5,F16)))),
                Apply
                  (Call
                     ("dfn'ORI",ATy(qTy,PTy(uTy,qTy)),
                      Var("v8",PTy(FTy 5,PTy(FTy 5,F16)))),qVar"state")),
               (Call
                  ("SLTI",CTy"ArithI",Var("v9",PTy(FTy 5,PTy(FTy 5,F16)))),
                Apply
                  (Call
                     ("dfn'SLTI",ATy(qTy,PTy(uTy,qTy)),
                      Var("v9",PTy(FTy 5,PTy(FTy 5,F16)))),qVar"state")),
               (Call
                  ("SLTIU",CTy"ArithI",
                   Var("v10",PTy(FTy 5,PTy(FTy 5,F16)))),
                Apply
                  (Call
                     ("dfn'SLTIU",ATy(qTy,PTy(uTy,qTy)),
                      Var("v10",PTy(FTy 5,PTy(FTy 5,F16)))),qVar"state")),
               (Call
                  ("XORI",CTy"ArithI",
                   Var("v11",PTy(FTy 5,PTy(FTy 5,F16)))),
                Apply
                  (Call
                     ("dfn'XORI",ATy(qTy,PTy(uTy,qTy)),
                      Var("v11",PTy(FTy 5,PTy(FTy 5,F16)))),qVar"state"))])),
          (Call("ArithR",CTy"instruction",Var("v12",CTy"ArithR")),
           CS(Var("v12",CTy"ArithR"),
              [(Call
                  ("ADD",CTy"ArithR",
                   Var("v13",PTy(FTy 5,PTy(FTy 5,FTy 5)))),
                Apply
                  (Call
                     ("dfn'ADD",ATy(qTy,PTy(uTy,qTy)),
                      Var("v13",PTy(FTy 5,PTy(FTy 5,FTy 5)))),qVar"state")),
               (Call
                  ("ADDU",CTy"ArithR",
                   Var("v14",PTy(FTy 5,PTy(FTy 5,FTy 5)))),
                Apply
                  (Call
                     ("dfn'ADDU",ATy(qTy,PTy(uTy,qTy)),
                      Var("v14",PTy(FTy 5,PTy(FTy 5,FTy 5)))),qVar"state")),
               (Call
                  ("AND",CTy"ArithR",
                   Var("v15",PTy(FTy 5,PTy(FTy 5,FTy 5)))),
                Apply
                  (Call
                     ("dfn'AND",ATy(qTy,PTy(uTy,qTy)),
                      Var("v15",PTy(FTy 5,PTy(FTy 5,FTy 5)))),qVar"state")),
               (Call
                  ("DADD",CTy"ArithR",
                   Var("v16",PTy(FTy 5,PTy(FTy 5,FTy 5)))),
                Apply
                  (Call
                     ("dfn'DADD",ATy(qTy,PTy(uTy,qTy)),
                      Var("v16",PTy(FTy 5,PTy(FTy 5,FTy 5)))),qVar"state")),
               (Call
                  ("DADDU",CTy"ArithR",
                   Var("v17",PTy(FTy 5,PTy(FTy 5,FTy 5)))),
                Apply
                  (Call
                     ("dfn'DADDU",ATy(qTy,PTy(uTy,qTy)),
                      Var("v17",PTy(FTy 5,PTy(FTy 5,FTy 5)))),qVar"state")),
               (Call
                  ("DSUB",CTy"ArithR",
                   Var("v18",PTy(FTy 5,PTy(FTy 5,FTy 5)))),
                Apply
                  (Call
                     ("dfn'DSUB",ATy(qTy,PTy(uTy,qTy)),
                      Var("v18",PTy(FTy 5,PTy(FTy 5,FTy 5)))),qVar"state")),
               (Call
                  ("DSUBU",CTy"ArithR",
                   Var("v19",PTy(FTy 5,PTy(FTy 5,FTy 5)))),
                Apply
                  (Call
                     ("dfn'DSUBU",ATy(qTy,PTy(uTy,qTy)),
                      Var("v19",PTy(FTy 5,PTy(FTy 5,FTy 5)))),qVar"state")),
               (Call
                  ("NOR",CTy"ArithR",
                   Var("v20",PTy(FTy 5,PTy(FTy 5,FTy 5)))),
                Apply
                  (Call
                     ("dfn'NOR",ATy(qTy,PTy(uTy,qTy)),
                      Var("v20",PTy(FTy 5,PTy(FTy 5,FTy 5)))),qVar"state")),
               (Call
                  ("OR",CTy"ArithR",
                   Var("v21",PTy(FTy 5,PTy(FTy 5,FTy 5)))),
                Apply
                  (Call
                     ("dfn'OR",ATy(qTy,PTy(uTy,qTy)),
                      Var("v21",PTy(FTy 5,PTy(FTy 5,FTy 5)))),qVar"state")),
               (Call
                  ("SLT",CTy"ArithR",
                   Var("v22",PTy(FTy 5,PTy(FTy 5,FTy 5)))),
                Apply
                  (Call
                     ("dfn'SLT",ATy(qTy,PTy(uTy,qTy)),
                      Var("v22",PTy(FTy 5,PTy(FTy 5,FTy 5)))),qVar"state")),
               (Call
                  ("SLTU",CTy"ArithR",
                   Var("v23",PTy(FTy 5,PTy(FTy 5,FTy 5)))),
                Apply
                  (Call
                     ("dfn'SLTU",ATy(qTy,PTy(uTy,qTy)),
                      Var("v23",PTy(FTy 5,PTy(FTy 5,FTy 5)))),qVar"state")),
               (Call
                  ("SUB",CTy"ArithR",
                   Var("v24",PTy(FTy 5,PTy(FTy 5,FTy 5)))),
                Apply
                  (Call
                     ("dfn'SUB",ATy(qTy,PTy(uTy,qTy)),
                      Var("v24",PTy(FTy 5,PTy(FTy 5,FTy 5)))),qVar"state")),
               (Call
                  ("SUBU",CTy"ArithR",
                   Var("v25",PTy(FTy 5,PTy(FTy 5,FTy 5)))),
                Apply
                  (Call
                     ("dfn'SUBU",ATy(qTy,PTy(uTy,qTy)),
                      Var("v25",PTy(FTy 5,PTy(FTy 5,FTy 5)))),qVar"state")),
               (Call
                  ("XOR",CTy"ArithR",
                   Var("v26",PTy(FTy 5,PTy(FTy 5,FTy 5)))),
                Apply
                  (Call
                     ("dfn'XOR",ATy(qTy,PTy(uTy,qTy)),
                      Var("v26",PTy(FTy 5,PTy(FTy 5,FTy 5)))),qVar"state"))])),
          (Call("Branch",CTy"instruction",Var("v27",CTy"Branch")),
           CS(Var("v27",CTy"Branch"),
              [(Call
                  ("BEQ",CTy"Branch",Var("v28",PTy(FTy 5,PTy(FTy 5,F16)))),
                Apply
                  (Call
                     ("dfn'BEQ",ATy(qTy,PTy(uTy,qTy)),
                      Var("v28",PTy(FTy 5,PTy(FTy 5,F16)))),qVar"state")),
               (Call
                  ("BEQL",CTy"Branch",
                   Var("v29",PTy(FTy 5,PTy(FTy 5,F16)))),
                Apply
                  (Call
                     ("dfn'BEQL",ATy(qTy,PTy(uTy,qTy)),
                      Var("v29",PTy(FTy 5,PTy(FTy 5,F16)))),qVar"state")),
               (Call("BGEZ",CTy"Branch",Var("v30",PTy(FTy 5,F16))),
                Apply
                  (Call
                     ("dfn'BGEZ",ATy(qTy,PTy(uTy,qTy)),
                      Var("v30",PTy(FTy 5,F16))),qVar"state")),
               (Call("BGEZAL",CTy"Branch",Var("v31",PTy(FTy 5,F16))),
                Apply
                  (Call
                     ("dfn'BGEZAL",ATy(qTy,PTy(uTy,qTy)),
                      Var("v31",PTy(FTy 5,F16))),qVar"state")),
               (Call("BGEZALL",CTy"Branch",Var("v32",PTy(FTy 5,F16))),
                Apply
                  (Call
                     ("dfn'BGEZALL",ATy(qTy,PTy(uTy,qTy)),
                      Var("v32",PTy(FTy 5,F16))),qVar"state")),
               (Call("BGEZL",CTy"Branch",Var("v33",PTy(FTy 5,F16))),
                Apply
                  (Call
                     ("dfn'BGEZL",ATy(qTy,PTy(uTy,qTy)),
                      Var("v33",PTy(FTy 5,F16))),qVar"state")),
               (Call("BGTZ",CTy"Branch",Var("v34",PTy(FTy 5,F16))),
                Apply
                  (Call
                     ("dfn'BGTZ",ATy(qTy,PTy(uTy,qTy)),
                      Var("v34",PTy(FTy 5,F16))),qVar"state")),
               (Call("BGTZL",CTy"Branch",Var("v35",PTy(FTy 5,F16))),
                Apply
                  (Call
                     ("dfn'BGTZL",ATy(qTy,PTy(uTy,qTy)),
                      Var("v35",PTy(FTy 5,F16))),qVar"state")),
               (Call("BLEZ",CTy"Branch",Var("v36",PTy(FTy 5,F16))),
                Apply
                  (Call
                     ("dfn'BLEZ",ATy(qTy,PTy(uTy,qTy)),
                      Var("v36",PTy(FTy 5,F16))),qVar"state")),
               (Call("BLEZL",CTy"Branch",Var("v37",PTy(FTy 5,F16))),
                Apply
                  (Call
                     ("dfn'BLEZL",ATy(qTy,PTy(uTy,qTy)),
                      Var("v37",PTy(FTy 5,F16))),qVar"state")),
               (Call("BLTZ",CTy"Branch",Var("v38",PTy(FTy 5,F16))),
                Apply
                  (Call
                     ("dfn'BLTZ",ATy(qTy,PTy(uTy,qTy)),
                      Var("v38",PTy(FTy 5,F16))),qVar"state")),
               (Call("BLTZAL",CTy"Branch",Var("v39",PTy(FTy 5,F16))),
                Apply
                  (Call
                     ("dfn'BLTZAL",ATy(qTy,PTy(uTy,qTy)),
                      Var("v39",PTy(FTy 5,F16))),qVar"state")),
               (Call("BLTZALL",CTy"Branch",Var("v40",PTy(FTy 5,F16))),
                Apply
                  (Call
                     ("dfn'BLTZALL",ATy(qTy,PTy(uTy,qTy)),
                      Var("v40",PTy(FTy 5,F16))),qVar"state")),
               (Call("BLTZL",CTy"Branch",Var("v41",PTy(FTy 5,F16))),
                Apply
                  (Call
                     ("dfn'BLTZL",ATy(qTy,PTy(uTy,qTy)),
                      Var("v41",PTy(FTy 5,F16))),qVar"state")),
               (Call
                  ("BNE",CTy"Branch",Var("v42",PTy(FTy 5,PTy(FTy 5,F16)))),
                Apply
                  (Call
                     ("dfn'BNE",ATy(qTy,PTy(uTy,qTy)),
                      Var("v42",PTy(FTy 5,PTy(FTy 5,F16)))),qVar"state")),
               (Call
                  ("BNEL",CTy"Branch",
                   Var("v43",PTy(FTy 5,PTy(FTy 5,F16)))),
                Apply
                  (Call
                     ("dfn'BNEL",ATy(qTy,PTy(uTy,qTy)),
                      Var("v43",PTy(FTy 5,PTy(FTy 5,F16)))),qVar"state")),
               (Call("J",CTy"Branch",Var("v44",FTy 26)),
                Apply
                  (Call("dfn'J",ATy(qTy,PTy(uTy,qTy)),Var("v44",FTy 26)),
                   qVar"state")),
               (Call("JAL",CTy"Branch",Var("v45",FTy 26)),
                Apply
                  (Call("dfn'JAL",ATy(qTy,PTy(uTy,qTy)),Var("v45",FTy 26)),
                   qVar"state")),
               (Call("JALR",CTy"Branch",Var("v46",PTy(FTy 5,FTy 5))),
                Apply
                  (Call
                     ("dfn'JALR",ATy(qTy,PTy(uTy,qTy)),
                      Var("v46",PTy(FTy 5,FTy 5))),qVar"state")),
               (Call("JR",CTy"Branch",Var("v47",FTy 5)),
                Apply
                  (Call("dfn'JR",ATy(qTy,PTy(uTy,qTy)),Var("v47",FTy 5)),
                   qVar"state"))])),
          (Call("CP",CTy"instruction",Var("v48",CTy"CP")),
           CS(Var("v48",CTy"CP"),
              [(Call
                  ("DMFC0",CTy"CP",Var("v49",PTy(FTy 5,PTy(FTy 5,FTy 3)))),
                Apply
                  (Call
                     ("dfn'DMFC0",ATy(qTy,PTy(uTy,qTy)),
                      Var("v49",PTy(FTy 5,PTy(FTy 5,FTy 3)))),qVar"state")),
               (Call
                  ("DMTC0",CTy"CP",Var("v50",PTy(FTy 5,PTy(FTy 5,FTy 3)))),
                Apply
                  (Call
                     ("dfn'DMTC0",ATy(qTy,PTy(uTy,qTy)),
                      Var("v50",PTy(FTy 5,PTy(FTy 5,FTy 3)))),qVar"state")),
               (Call
                  ("MFC0",CTy"CP",Var("v51",PTy(FTy 5,PTy(FTy 5,FTy 3)))),
                Apply
                  (Call
                     ("dfn'MFC0",ATy(qTy,PTy(uTy,qTy)),
                      Var("v51",PTy(FTy 5,PTy(FTy 5,FTy 3)))),qVar"state")),
               (Call
                  ("MTC0",CTy"CP",Var("v52",PTy(FTy 5,PTy(FTy 5,FTy 3)))),
                Apply
                  (Call
                     ("dfn'MTC0",ATy(qTy,PTy(uTy,qTy)),
                      Var("v52",PTy(FTy 5,PTy(FTy 5,FTy 3)))),qVar"state"))])),
          (Call("Load",CTy"instruction",Var("v53",CTy"Load")),
           CS(Var("v53",CTy"Load"),
              [(Call("LB",CTy"Load",Var("v54",PTy(FTy 5,PTy(FTy 5,F16)))),
                Apply
                  (Call
                     ("dfn'LB",ATy(qTy,PTy(uTy,qTy)),
                      Var("v54",PTy(FTy 5,PTy(FTy 5,F16)))),qVar"state")),
               (Call("LBU",CTy"Load",Var("v55",PTy(FTy 5,PTy(FTy 5,F16)))),
                Apply
                  (Call
                     ("dfn'LBU",ATy(qTy,PTy(uTy,qTy)),
                      Var("v55",PTy(FTy 5,PTy(FTy 5,F16)))),qVar"state")),
               (Call("LD",CTy"Load",Var("v56",PTy(FTy 5,PTy(FTy 5,F16)))),
                Apply
                  (Call
                     ("dfn'LD",ATy(qTy,PTy(uTy,qTy)),
                      Var("v56",PTy(FTy 5,PTy(FTy 5,F16)))),qVar"state")),
               (Call("LDL",CTy"Load",Var("v57",PTy(FTy 5,PTy(FTy 5,F16)))),
                Apply
                  (Call
                     ("dfn'LDL",ATy(qTy,PTy(uTy,qTy)),
                      Var("v57",PTy(FTy 5,PTy(FTy 5,F16)))),qVar"state")),
               (Call("LDR",CTy"Load",Var("v58",PTy(FTy 5,PTy(FTy 5,F16)))),
                Apply
                  (Call
                     ("dfn'LDR",ATy(qTy,PTy(uTy,qTy)),
                      Var("v58",PTy(FTy 5,PTy(FTy 5,F16)))),qVar"state")),
               (Call("LH",CTy"Load",Var("v59",PTy(FTy 5,PTy(FTy 5,F16)))),
                Apply
                  (Call
                     ("dfn'LH",ATy(qTy,PTy(uTy,qTy)),
                      Var("v59",PTy(FTy 5,PTy(FTy 5,F16)))),qVar"state")),
               (Call("LHU",CTy"Load",Var("v60",PTy(FTy 5,PTy(FTy 5,F16)))),
                Apply
                  (Call
                     ("dfn'LHU",ATy(qTy,PTy(uTy,qTy)),
                      Var("v60",PTy(FTy 5,PTy(FTy 5,F16)))),qVar"state")),
               (Call("LL",CTy"Load",Var("v61",PTy(FTy 5,PTy(FTy 5,F16)))),
                Apply
                  (Call
                     ("dfn'LL",ATy(qTy,PTy(uTy,qTy)),
                      Var("v61",PTy(FTy 5,PTy(FTy 5,F16)))),qVar"state")),
               (Call("LLD",CTy"Load",Var("v62",PTy(FTy 5,PTy(FTy 5,F16)))),
                Apply
                  (Call
                     ("dfn'LLD",ATy(qTy,PTy(uTy,qTy)),
                      Var("v62",PTy(FTy 5,PTy(FTy 5,F16)))),qVar"state")),
               (Call("LW",CTy"Load",Var("v63",PTy(FTy 5,PTy(FTy 5,F16)))),
                Apply
                  (Call
                     ("dfn'LW",ATy(qTy,PTy(uTy,qTy)),
                      Var("v63",PTy(FTy 5,PTy(FTy 5,F16)))),qVar"state")),
               (Call("LWL",CTy"Load",Var("v64",PTy(FTy 5,PTy(FTy 5,F16)))),
                Apply
                  (Call
                     ("dfn'LWL",ATy(qTy,PTy(uTy,qTy)),
                      Var("v64",PTy(FTy 5,PTy(FTy 5,F16)))),qVar"state")),
               (Call("LWR",CTy"Load",Var("v65",PTy(FTy 5,PTy(FTy 5,F16)))),
                Apply
                  (Call
                     ("dfn'LWR",ATy(qTy,PTy(uTy,qTy)),
                      Var("v65",PTy(FTy 5,PTy(FTy 5,F16)))),qVar"state")),
               (Call("LWU",CTy"Load",Var("v66",PTy(FTy 5,PTy(FTy 5,F16)))),
                Apply
                  (Call
                     ("dfn'LWU",ATy(qTy,PTy(uTy,qTy)),
                      Var("v66",PTy(FTy 5,PTy(FTy 5,F16)))),qVar"state"))])),
          (Call("MultDiv",CTy"instruction",Var("v67",CTy"MultDiv")),
           CS(Var("v67",CTy"MultDiv"),
              [(Call("DDIV",CTy"MultDiv",Var("v68",PTy(FTy 5,FTy 5))),
                Apply
                  (Call
                     ("dfn'DDIV",ATy(qTy,PTy(uTy,qTy)),
                      Var("v68",PTy(FTy 5,FTy 5))),qVar"state")),
               (Call("DDIVU",CTy"MultDiv",Var("v69",PTy(FTy 5,FTy 5))),
                Apply
                  (Call
                     ("dfn'DDIVU",ATy(qTy,PTy(uTy,qTy)),
                      Var("v69",PTy(FTy 5,FTy 5))),qVar"state")),
               (Call("DIV",CTy"MultDiv",Var("v70",PTy(FTy 5,FTy 5))),
                Apply
                  (Call
                     ("dfn'DIV",ATy(qTy,PTy(uTy,qTy)),
                      Var("v70",PTy(FTy 5,FTy 5))),qVar"state")),
               (Call("DIVU",CTy"MultDiv",Var("v71",PTy(FTy 5,FTy 5))),
                Apply
                  (Call
                     ("dfn'DIVU",ATy(qTy,PTy(uTy,qTy)),
                      Var("v71",PTy(FTy 5,FTy 5))),qVar"state")),
               (Call("DMULT",CTy"MultDiv",Var("v72",PTy(FTy 5,FTy 5))),
                Apply
                  (Call
                     ("dfn'DMULT",ATy(qTy,PTy(uTy,qTy)),
                      Var("v72",PTy(FTy 5,FTy 5))),qVar"state")),
               (Call("DMULTU",CTy"MultDiv",Var("v73",PTy(FTy 5,FTy 5))),
                Apply
                  (Call
                     ("dfn'DMULTU",ATy(qTy,PTy(uTy,qTy)),
                      Var("v73",PTy(FTy 5,FTy 5))),qVar"state")),
               (Call("MFHI",CTy"MultDiv",Var("v74",FTy 5)),
                Apply
                  (Call("dfn'MFHI",ATy(qTy,PTy(uTy,qTy)),Var("v74",FTy 5)),
                   qVar"state")),
               (Call("MFLO",CTy"MultDiv",Var("v75",FTy 5)),
                Apply
                  (Call("dfn'MFLO",ATy(qTy,PTy(uTy,qTy)),Var("v75",FTy 5)),
                   qVar"state")),
               (Call("MTHI",CTy"MultDiv",Var("v76",FTy 5)),
                Apply
                  (Call("dfn'MTHI",ATy(qTy,PTy(uTy,qTy)),Var("v76",FTy 5)),
                   qVar"state")),
               (Call("MTLO",CTy"MultDiv",Var("v77",FTy 5)),
                Apply
                  (Call("dfn'MTLO",ATy(qTy,PTy(uTy,qTy)),Var("v77",FTy 5)),
                   qVar"state")),
               (Call("MULT",CTy"MultDiv",Var("v78",PTy(FTy 5,FTy 5))),
                Apply
                  (Call
                     ("dfn'MULT",ATy(qTy,PTy(uTy,qTy)),
                      Var("v78",PTy(FTy 5,FTy 5))),qVar"state")),
               (Call("MULTU",CTy"MultDiv",Var("v79",PTy(FTy 5,FTy 5))),
                Apply
                  (Call
                     ("dfn'MULTU",ATy(qTy,PTy(uTy,qTy)),
                      Var("v79",PTy(FTy 5,FTy 5))),qVar"state"))])),
          (Call("Shift",CTy"instruction",Var("v80",CTy"Shift")),
           CS(Var("v80",CTy"Shift"),
              [(Call
                  ("DSLL",CTy"Shift",
                   Var("v81",PTy(FTy 5,PTy(FTy 5,FTy 5)))),
                Apply
                  (Call
                     ("dfn'DSLL",ATy(qTy,PTy(uTy,qTy)),
                      Var("v81",PTy(FTy 5,PTy(FTy 5,FTy 5)))),qVar"state")),
               (Call
                  ("DSLL32",CTy"Shift",
                   Var("v82",PTy(FTy 5,PTy(FTy 5,FTy 5)))),
                Apply
                  (Call
                     ("dfn'DSLL32",ATy(qTy,PTy(uTy,qTy)),
                      Var("v82",PTy(FTy 5,PTy(FTy 5,FTy 5)))),qVar"state")),
               (Call
                  ("DSLLV",CTy"Shift",
                   Var("v83",PTy(FTy 5,PTy(FTy 5,FTy 5)))),
                Apply
                  (Call
                     ("dfn'DSLLV",ATy(qTy,PTy(uTy,qTy)),
                      Var("v83",PTy(FTy 5,PTy(FTy 5,FTy 5)))),qVar"state")),
               (Call
                  ("DSRA",CTy"Shift",
                   Var("v84",PTy(FTy 5,PTy(FTy 5,FTy 5)))),
                Apply
                  (Call
                     ("dfn'DSRA",ATy(qTy,PTy(uTy,qTy)),
                      Var("v84",PTy(FTy 5,PTy(FTy 5,FTy 5)))),qVar"state")),
               (Call
                  ("DSRA32",CTy"Shift",
                   Var("v85",PTy(FTy 5,PTy(FTy 5,FTy 5)))),
                Apply
                  (Call
                     ("dfn'DSRA32",ATy(qTy,PTy(uTy,qTy)),
                      Var("v85",PTy(FTy 5,PTy(FTy 5,FTy 5)))),qVar"state")),
               (Call
                  ("DSRAV",CTy"Shift",
                   Var("v86",PTy(FTy 5,PTy(FTy 5,FTy 5)))),
                Apply
                  (Call
                     ("dfn'DSRAV",ATy(qTy,PTy(uTy,qTy)),
                      Var("v86",PTy(FTy 5,PTy(FTy 5,FTy 5)))),qVar"state")),
               (Call
                  ("DSRL",CTy"Shift",
                   Var("v87",PTy(FTy 5,PTy(FTy 5,FTy 5)))),
                Apply
                  (Call
                     ("dfn'DSRL",ATy(qTy,PTy(uTy,qTy)),
                      Var("v87",PTy(FTy 5,PTy(FTy 5,FTy 5)))),qVar"state")),
               (Call
                  ("DSRL32",CTy"Shift",
                   Var("v88",PTy(FTy 5,PTy(FTy 5,FTy 5)))),
                Apply
                  (Call
                     ("dfn'DSRL32",ATy(qTy,PTy(uTy,qTy)),
                      Var("v88",PTy(FTy 5,PTy(FTy 5,FTy 5)))),qVar"state")),
               (Call
                  ("DSRLV",CTy"Shift",
                   Var("v89",PTy(FTy 5,PTy(FTy 5,FTy 5)))),
                Apply
                  (Call
                     ("dfn'DSRLV",ATy(qTy,PTy(uTy,qTy)),
                      Var("v89",PTy(FTy 5,PTy(FTy 5,FTy 5)))),qVar"state")),
               (Call
                  ("SLL",CTy"Shift",
                   Var("v90",PTy(FTy 5,PTy(FTy 5,FTy 5)))),
                Apply
                  (Call
                     ("dfn'SLL",ATy(qTy,PTy(uTy,qTy)),
                      Var("v90",PTy(FTy 5,PTy(FTy 5,FTy 5)))),qVar"state")),
               (Call
                  ("SLLV",CTy"Shift",
                   Var("v91",PTy(FTy 5,PTy(FTy 5,FTy 5)))),
                Apply
                  (Call
                     ("dfn'SLLV",ATy(qTy,PTy(uTy,qTy)),
                      Var("v91",PTy(FTy 5,PTy(FTy 5,FTy 5)))),qVar"state")),
               (Call
                  ("SRA",CTy"Shift",
                   Var("v92",PTy(FTy 5,PTy(FTy 5,FTy 5)))),
                Apply
                  (Call
                     ("dfn'SRA",ATy(qTy,PTy(uTy,qTy)),
                      Var("v92",PTy(FTy 5,PTy(FTy 5,FTy 5)))),qVar"state")),
               (Call
                  ("SRAV",CTy"Shift",
                   Var("v93",PTy(FTy 5,PTy(FTy 5,FTy 5)))),
                Apply
                  (Call
                     ("dfn'SRAV",ATy(qTy,PTy(uTy,qTy)),
                      Var("v93",PTy(FTy 5,PTy(FTy 5,FTy 5)))),qVar"state")),
               (Call
                  ("SRL",CTy"Shift",
                   Var("v94",PTy(FTy 5,PTy(FTy 5,FTy 5)))),
                Apply
                  (Call
                     ("dfn'SRL",ATy(qTy,PTy(uTy,qTy)),
                      Var("v94",PTy(FTy 5,PTy(FTy 5,FTy 5)))),qVar"state")),
               (Call
                  ("SRLV",CTy"Shift",
                   Var("v95",PTy(FTy 5,PTy(FTy 5,FTy 5)))),
                Apply
                  (Call
                     ("dfn'SRLV",ATy(qTy,PTy(uTy,qTy)),
                      Var("v95",PTy(FTy 5,PTy(FTy 5,FTy 5)))),qVar"state"))])),
          (Call("Store",CTy"instruction",Var("v96",CTy"Store")),
           CS(Var("v96",CTy"Store"),
              [(Call("SB",CTy"Store",Var("v97",PTy(FTy 5,PTy(FTy 5,F16)))),
                Apply
                  (Call
                     ("dfn'SB",ATy(qTy,PTy(uTy,qTy)),
                      Var("v97",PTy(FTy 5,PTy(FTy 5,F16)))),qVar"state")),
               (Call("SC",CTy"Store",Var("v98",PTy(FTy 5,PTy(FTy 5,F16)))),
                Apply
                  (Call
                     ("dfn'SC",ATy(qTy,PTy(uTy,qTy)),
                      Var("v98",PTy(FTy 5,PTy(FTy 5,F16)))),qVar"state")),
               (Call
                  ("SCD",CTy"Store",Var("v99",PTy(FTy 5,PTy(FTy 5,F16)))),
                Apply
                  (Call
                     ("dfn'SCD",ATy(qTy,PTy(uTy,qTy)),
                      Var("v99",PTy(FTy 5,PTy(FTy 5,F16)))),qVar"state")),
               (Call
                  ("SD",CTy"Store",Var("v100",PTy(FTy 5,PTy(FTy 5,F16)))),
                Apply
                  (Call
                     ("dfn'SD",ATy(qTy,PTy(uTy,qTy)),
                      Var("v100",PTy(FTy 5,PTy(FTy 5,F16)))),qVar"state")),
               (Call
                  ("SDL",CTy"Store",Var("v101",PTy(FTy 5,PTy(FTy 5,F16)))),
                Apply
                  (Call
                     ("dfn'SDL",ATy(qTy,PTy(uTy,qTy)),
                      Var("v101",PTy(FTy 5,PTy(FTy 5,F16)))),qVar"state")),
               (Call
                  ("SDR",CTy"Store",Var("v102",PTy(FTy 5,PTy(FTy 5,F16)))),
                Apply
                  (Call
                     ("dfn'SDR",ATy(qTy,PTy(uTy,qTy)),
                      Var("v102",PTy(FTy 5,PTy(FTy 5,F16)))),qVar"state")),
               (Call
                  ("SH",CTy"Store",Var("v103",PTy(FTy 5,PTy(FTy 5,F16)))),
                Apply
                  (Call
                     ("dfn'SH",ATy(qTy,PTy(uTy,qTy)),
                      Var("v103",PTy(FTy 5,PTy(FTy 5,F16)))),qVar"state")),
               (Call
                  ("SW",CTy"Store",Var("v104",PTy(FTy 5,PTy(FTy 5,F16)))),
                Apply
                  (Call
                     ("dfn'SW",ATy(qTy,PTy(uTy,qTy)),
                      Var("v104",PTy(FTy 5,PTy(FTy 5,F16)))),qVar"state")),
               (Call
                  ("SWL",CTy"Store",Var("v105",PTy(FTy 5,PTy(FTy 5,F16)))),
                Apply
                  (Call
                     ("dfn'SWL",ATy(qTy,PTy(uTy,qTy)),
                      Var("v105",PTy(FTy 5,PTy(FTy 5,F16)))),qVar"state")),
               (Call
                  ("SWR",CTy"Store",Var("v106",PTy(FTy 5,PTy(FTy 5,F16)))),
                Apply
                  (Call
                     ("dfn'SWR",ATy(qTy,PTy(uTy,qTy)),
                      Var("v106",PTy(FTy 5,PTy(FTy 5,F16)))),qVar"state"))])),
          (Call("Trap",CTy"instruction",Var("v107",CTy"Trap")),
           CS(Var("v107",CTy"Trap"),
              [(Call("TEQ",CTy"Trap",Var("v108",PTy(FTy 5,FTy 5))),
                Apply
                  (Call
                     ("dfn'TEQ",ATy(qTy,PTy(uTy,qTy)),
                      Var("v108",PTy(FTy 5,FTy 5))),qVar"state")),
               (Call("TEQI",CTy"Trap",Var("v109",PTy(FTy 5,F16))),
                Apply
                  (Call
                     ("dfn'TEQI",ATy(qTy,PTy(uTy,qTy)),
                      Var("v109",PTy(FTy 5,F16))),qVar"state")),
               (Call("TGE",CTy"Trap",Var("v110",PTy(FTy 5,FTy 5))),
                Apply
                  (Call
                     ("dfn'TGE",ATy(qTy,PTy(uTy,qTy)),
                      Var("v110",PTy(FTy 5,FTy 5))),qVar"state")),
               (Call("TGEI",CTy"Trap",Var("v111",PTy(FTy 5,F16))),
                Apply
                  (Call
                     ("dfn'TGEI",ATy(qTy,PTy(uTy,qTy)),
                      Var("v111",PTy(FTy 5,F16))),qVar"state")),
               (Call("TGEIU",CTy"Trap",Var("v112",PTy(FTy 5,F16))),
                Apply
                  (Call
                     ("dfn'TGEIU",ATy(qTy,PTy(uTy,qTy)),
                      Var("v112",PTy(FTy 5,F16))),qVar"state")),
               (Call("TGEU",CTy"Trap",Var("v113",PTy(FTy 5,FTy 5))),
                Apply
                  (Call
                     ("dfn'TGEU",ATy(qTy,PTy(uTy,qTy)),
                      Var("v113",PTy(FTy 5,FTy 5))),qVar"state")),
               (Call("TLT",CTy"Trap",Var("v114",PTy(FTy 5,FTy 5))),
                Apply
                  (Call
                     ("dfn'TLT",ATy(qTy,PTy(uTy,qTy)),
                      Var("v114",PTy(FTy 5,FTy 5))),qVar"state")),
               (Call("TLTI",CTy"Trap",Var("v115",PTy(FTy 5,F16))),
                Apply
                  (Call
                     ("dfn'TLTI",ATy(qTy,PTy(uTy,qTy)),
                      Var("v115",PTy(FTy 5,F16))),qVar"state")),
               (Call("TLTIU",CTy"Trap",Var("v116",PTy(FTy 5,F16))),
                Apply
                  (Call
                     ("dfn'TLTIU",ATy(qTy,PTy(uTy,qTy)),
                      Var("v116",PTy(FTy 5,F16))),qVar"state")),
               (Call("TLTU",CTy"Trap",Var("v117",PTy(FTy 5,FTy 5))),
                Apply
                  (Call
                     ("dfn'TLTU",ATy(qTy,PTy(uTy,qTy)),
                      Var("v117",PTy(FTy 5,FTy 5))),qVar"state")),
               (Call("TNE",CTy"Trap",Var("v118",PTy(FTy 5,FTy 5))),
                Apply
                  (Call
                     ("dfn'TNE",ATy(qTy,PTy(uTy,qTy)),
                      Var("v118",PTy(FTy 5,FTy 5))),qVar"state")),
               (Call("TNEI",CTy"Trap",Var("v119",PTy(FTy 5,F16))),
                Apply
                  (Call
                     ("dfn'TNEI",ATy(qTy,PTy(uTy,qTy)),
                      Var("v119",PTy(FTy 5,F16))),qVar"state"))]))])))
;

val Decode_def = Def
  ("Decode",Var("w",F32),
   Let
     (TP[bVar"b'31",bVar"b'30",bVar"b'29",bVar"b'28",bVar"b'27",
         bVar"b'26",bVar"b'25",bVar"b'24",bVar"b'23",bVar"b'22",
         bVar"b'21",bVar"b'20",bVar"b'19",bVar"b'18",bVar"b'17",
         bVar"b'16",bVar"b'15",bVar"b'14",bVar"b'13",bVar"b'12",
         bVar"b'11",bVar"b'10",bVar"b'9",bVar"b'8",bVar"b'7",bVar"b'6",
         bVar"b'5",bVar"b'4",bVar"b'3",bVar"b'2",bVar"b'1",bVar"b'0"],
      BL(32,Var("w",F32)),
      ITE
        (Bop
           (And,Mop(Not,bVar"b'31"),
            Bop(And,Mop(Not,bVar"b'29"),Mop(Not,bVar"b'28"))),
         ITB
           ([(Bop
                (And,Mop(Not,bVar"b'30"),
                 Bop(And,Mop(Not,bVar"b'27"),Mop(Not,bVar"b'26"))),
              Let
                (Var("rt",FTy 5),EX(Var("w",F32),LN 20,LN 16,FTy 5),
                 Let
                   (Var("rs",FTy 5),EX(Var("w",F32),LN 25,LN 21,FTy 5),
                    Let
                      (Var("rd",FTy 5),EX(Var("w",F32),LN 15,LN 11,FTy 5),
                       Let
                         (Var("imm5",FTy 5),
                          EX(Var("w",F32),LN 10,LN 6,FTy 5),
                          Let
                            (TP[bVar"b'5",bVar"b'4",bVar"b'3",bVar"b'2",
                                bVar"b'1",bVar"b'0"],
                             BL(6,EX(Var("w",F32),LN 5,LN 0,FTy 6)),
                             ITB
                               ([(bVar"b'5",
                                  ITB
                                    ([(bVar"b'2",
                                       ITB
                                         ([(bVar"b'3",
                                            ITB
                                              ([(Bop
                                                   (And,
                                                    Mop(Not,bVar"b'4"),
                                                    Bop
                                                      (And,
                                                       Mop(Not,bVar"b'1"),
                                                       Mop(Not,bVar"b'0"))),
                                                 Call
                                                   ("ArithR",
                                                    CTy"instruction",
                                                    Call
                                                      ("DADD",CTy"ArithR",
                                                       TP[Var("rs",FTy 5),
                                                          Var("rt",FTy 5),
                                                          Var("rd",FTy 5)]))),
                                                (Bop
                                                   (And,
                                                    Mop(Not,bVar"b'4"),
                                                    Bop
                                                      (And,
                                                       Mop(Not,bVar"b'1"),
                                                       bVar"b'0")),
                                                 Call
                                                   ("ArithR",
                                                    CTy"instruction",
                                                    Call
                                                      ("DADDU",
                                                       CTy"ArithR",
                                                       TP[Var("rs",FTy 5),
                                                          Var("rt",FTy 5),
                                                          Var("rd",FTy 5)]))),
                                                (Bop
                                                   (And,
                                                    Mop(Not,bVar"b'4"),
                                                    Bop
                                                      (And,bVar"b'1",
                                                       Mop(Not,bVar"b'0"))),
                                                 Call
                                                   ("ArithR",
                                                    CTy"instruction",
                                                    Call
                                                      ("DSUB",CTy"ArithR",
                                                       TP[Var("rs",FTy 5),
                                                          Var("rt",FTy 5),
                                                          Var("rd",FTy 5)]))),
                                                (Bop
                                                   (And,
                                                    Mop(Not,bVar"b'4"),
                                                    Bop
                                                      (And,bVar"b'1",
                                                       bVar"b'0")),
                                                 Call
                                                   ("ArithR",
                                                    CTy"instruction",
                                                    Call
                                                      ("DSUBU",
                                                       CTy"ArithR",
                                                       TP[Var("rs",FTy 5),
                                                          Var("rt",FTy 5),
                                                          Var("rd",FTy 5)]))),
                                                (Bop
                                                   (And,bVar"b'4",
                                                    Bop
                                                      (And,
                                                       Mop(Not,bVar"b'1"),
                                                       Mop(Not,bVar"b'0"))),
                                                 Call
                                                   ("Shift",
                                                    CTy"instruction",
                                                    Call
                                                      ("DSLL32",
                                                       CTy"Shift",
                                                       TP[Var("rt",FTy 5),
                                                          Var("rd",FTy 5),
                                                          Var
                                                            ("imm5",FTy 5)]))),
                                                (Bop
                                                   (And,bVar"b'4",
                                                    Bop
                                                      (And,bVar"b'1",
                                                       Mop(Not,bVar"b'0"))),
                                                 Call
                                                   ("Shift",
                                                    CTy"instruction",
                                                    Call
                                                      ("DSRL32",
                                                       CTy"Shift",
                                                       TP[Var("rt",FTy 5),
                                                          Var("rd",FTy 5),
                                                          Var
                                                            ("imm5",FTy 5)]))),
                                                (Bop
                                                   (And,bVar"b'4",
                                                    Bop
                                                      (And,bVar"b'1",
                                                       bVar"b'0")),
                                                 Call
                                                   ("Shift",
                                                    CTy"instruction",
                                                    Call
                                                      ("DSRA32",
                                                       CTy"Shift",
                                                       TP[Var("rt",FTy 5),
                                                          Var("rd",FTy 5),
                                                          Var
                                                            ("imm5",FTy 5)])))],
                                               Const
                                                 ("ReservedInstruction",
                                                  CTy"instruction"))),
                                           (Bop
                                              (And,Mop(Not,bVar"b'4"),
                                               Bop
                                                 (And,Mop(Not,bVar"b'1"),
                                                  Mop(Not,bVar"b'0"))),
                                            Call
                                              ("ArithR",CTy"instruction",
                                               Call
                                                 ("AND",CTy"ArithR",
                                                  TP[Var("rs",FTy 5),
                                                     Var("rt",FTy 5),
                                                     Var("rd",FTy 5)]))),
                                           (Bop
                                              (And,Mop(Not,bVar"b'4"),
                                               Bop
                                                 (And,Mop(Not,bVar"b'1"),
                                                  bVar"b'0")),
                                            Call
                                              ("ArithR",CTy"instruction",
                                               Call
                                                 ("OR",CTy"ArithR",
                                                  TP[Var("rs",FTy 5),
                                                     Var("rt",FTy 5),
                                                     Var("rd",FTy 5)]))),
                                           (Bop
                                              (And,Mop(Not,bVar"b'4"),
                                               Bop
                                                 (And,bVar"b'1",
                                                  Mop(Not,bVar"b'0"))),
                                            Call
                                              ("ArithR",CTy"instruction",
                                               Call
                                                 ("XOR",CTy"ArithR",
                                                  TP[Var("rs",FTy 5),
                                                     Var("rt",FTy 5),
                                                     Var("rd",FTy 5)]))),
                                           (Bop
                                              (And,Mop(Not,bVar"b'4"),
                                               Bop
                                                 (And,bVar"b'1",bVar"b'0")),
                                            Call
                                              ("ArithR",CTy"instruction",
                                               Call
                                                 ("NOR",CTy"ArithR",
                                                  TP[Var("rs",FTy 5),
                                                     Var("rt",FTy 5),
                                                     Var("rd",FTy 5)]))),
                                           (Bop
                                              (And,bVar"b'4",
                                               Bop
                                                 (And,Mop(Not,bVar"b'1"),
                                                  Mop(Not,bVar"b'0"))),
                                            Call
                                              ("Trap",CTy"instruction",
                                               Call
                                                 ("TEQ",CTy"Trap",
                                                  TP[Var("rs",FTy 5),
                                                     Var("rt",FTy 5)]))),
                                           (Bop
                                              (And,bVar"b'4",
                                               Bop
                                                 (And,bVar"b'1",
                                                  Mop(Not,bVar"b'0"))),
                                            Call
                                              ("Trap",CTy"instruction",
                                               Call
                                                 ("TNE",CTy"Trap",
                                                  TP[Var("rs",FTy 5),
                                                     Var("rt",FTy 5)])))],
                                          Const
                                            ("ReservedInstruction",
                                             CTy"instruction"))),
                                      (bVar"b'4",
                                       ITB
                                         ([(Bop
                                              (And,Mop(Not,bVar"b'3"),
                                               Bop
                                                 (And,Mop(Not,bVar"b'1"),
                                                  Mop(Not,bVar"b'0"))),
                                            Call
                                              ("Trap",CTy"instruction",
                                               Call
                                                 ("TGE",CTy"Trap",
                                                  TP[Var("rs",FTy 5),
                                                     Var("rt",FTy 5)]))),
                                           (Bop
                                              (And,Mop(Not,bVar"b'3"),
                                               Bop
                                                 (And,Mop(Not,bVar"b'1"),
                                                  bVar"b'0")),
                                            Call
                                              ("Trap",CTy"instruction",
                                               Call
                                                 ("TGEU",CTy"Trap",
                                                  TP[Var("rs",FTy 5),
                                                     Var("rt",FTy 5)]))),
                                           (Bop
                                              (And,Mop(Not,bVar"b'3"),
                                               Bop
                                                 (And,bVar"b'1",
                                                  Mop(Not,bVar"b'0"))),
                                            Call
                                              ("Trap",CTy"instruction",
                                               Call
                                                 ("TLT",CTy"Trap",
                                                  TP[Var("rs",FTy 5),
                                                     Var("rt",FTy 5)]))),
                                           (Bop
                                              (And,Mop(Not,bVar"b'3"),
                                               Bop
                                                 (And,bVar"b'1",bVar"b'0")),
                                            Call
                                              ("Trap",CTy"instruction",
                                               Call
                                                 ("TLTU",CTy"Trap",
                                                  TP[Var("rs",FTy 5),
                                                     Var("rt",FTy 5)]))),
                                           (Bop
                                              (And,bVar"b'3",
                                               Bop
                                                 (And,Mop(Not,bVar"b'1"),
                                                  Mop(Not,bVar"b'0"))),
                                            Call
                                              ("Shift",CTy"instruction",
                                               Call
                                                 ("DSLL",CTy"Shift",
                                                  TP[Var("rt",FTy 5),
                                                     Var("rd",FTy 5),
                                                     Var("imm5",FTy 5)]))),
                                           (Bop
                                              (And,bVar"b'3",
                                               Bop
                                                 (And,bVar"b'1",
                                                  Mop(Not,bVar"b'0"))),
                                            Call
                                              ("Shift",CTy"instruction",
                                               Call
                                                 ("DSRL",CTy"Shift",
                                                  TP[Var("rt",FTy 5),
                                                     Var("rd",FTy 5),
                                                     Var("imm5",FTy 5)]))),
                                           (Bop
                                              (And,bVar"b'3",
                                               Bop
                                                 (And,bVar"b'1",bVar"b'0")),
                                            Call
                                              ("Shift",CTy"instruction",
                                               Call
                                                 ("DSRA",CTy"Shift",
                                                  TP[Var("rt",FTy 5),
                                                     Var("rd",FTy 5),
                                                     Var("imm5",FTy 5)])))],
                                          Const
                                            ("ReservedInstruction",
                                             CTy"instruction"))),
                                      (Bop
                                         (And,Mop(Not,bVar"b'3"),
                                          Bop
                                            (And,Mop(Not,bVar"b'1"),
                                             Mop(Not,bVar"b'0"))),
                                       Call
                                         ("ArithR",CTy"instruction",
                                          Call
                                            ("ADD",CTy"ArithR",
                                             TP[Var("rs",FTy 5),
                                                Var("rt",FTy 5),
                                                Var("rd",FTy 5)]))),
                                      (Bop
                                         (And,Mop(Not,bVar"b'3"),
                                          Bop
                                            (And,Mop(Not,bVar"b'1"),
                                             bVar"b'0")),
                                       Call
                                         ("ArithR",CTy"instruction",
                                          Call
                                            ("ADDU",CTy"ArithR",
                                             TP[Var("rs",FTy 5),
                                                Var("rt",FTy 5),
                                                Var("rd",FTy 5)]))),
                                      (Bop
                                         (And,Mop(Not,bVar"b'3"),
                                          Bop
                                            (And,bVar"b'1",
                                             Mop(Not,bVar"b'0"))),
                                       Call
                                         ("ArithR",CTy"instruction",
                                          Call
                                            ("SUB",CTy"ArithR",
                                             TP[Var("rs",FTy 5),
                                                Var("rt",FTy 5),
                                                Var("rd",FTy 5)]))),
                                      (Bop
                                         (And,Mop(Not,bVar"b'3"),
                                          Bop(And,bVar"b'1",bVar"b'0")),
                                       Call
                                         ("ArithR",CTy"instruction",
                                          Call
                                            ("SUBU",CTy"ArithR",
                                             TP[Var("rs",FTy 5),
                                                Var("rt",FTy 5),
                                                Var("rd",FTy 5)]))),
                                      (Bop
                                         (And,bVar"b'3",
                                          Bop
                                            (And,bVar"b'1",
                                             Mop(Not,bVar"b'0"))),
                                       Call
                                         ("ArithR",CTy"instruction",
                                          Call
                                            ("SLT",CTy"ArithR",
                                             TP[Var("rs",FTy 5),
                                                Var("rt",FTy 5),
                                                Var("rd",FTy 5)]))),
                                      (Bop
                                         (And,bVar"b'3",
                                          Bop(And,bVar"b'1",bVar"b'0")),
                                       Call
                                         ("ArithR",CTy"instruction",
                                          Call
                                            ("SLTU",CTy"ArithR",
                                             TP[Var("rs",FTy 5),
                                                Var("rt",FTy 5),
                                                Var("rd",FTy 5)])))],
                                     Const
                                       ("ReservedInstruction",
                                        CTy"instruction"))),
                                 (bVar"b'3",
                                  ITB
                                    ([(bVar"b'2",
                                       ITB
                                         ([(Bop
                                              (And,Mop(Not,bVar"b'4"),
                                               Bop
                                                 (And,Mop(Not,bVar"b'1"),
                                                  Mop(Not,bVar"b'0"))),
                                            Const
                                              ("SYSCALL",CTy"instruction")),
                                           (Bop
                                              (And,Mop(Not,bVar"b'4"),
                                               Bop
                                                 (And,Mop(Not,bVar"b'1"),
                                                  bVar"b'0")),
                                            Const
                                              ("BREAK",CTy"instruction")),
                                           (Bop
                                              (And,Mop(Not,bVar"b'4"),
                                               Bop
                                                 (And,bVar"b'1",bVar"b'0")),
                                            Call
                                              ("SYNC",CTy"instruction",
                                               Var("imm5",FTy 5))),
                                           (Bop
                                              (And,bVar"b'4",
                                               Bop
                                                 (And,Mop(Not,bVar"b'1"),
                                                  Mop(Not,bVar"b'0"))),
                                            Call
                                              ("MultDiv",CTy"instruction",
                                               Call
                                                 ("DMULT",CTy"MultDiv",
                                                  TP[Var("rs",FTy 5),
                                                     Var("rt",FTy 5)]))),
                                           (Bop
                                              (And,bVar"b'4",
                                               Bop
                                                 (And,Mop(Not,bVar"b'1"),
                                                  bVar"b'0")),
                                            Call
                                              ("MultDiv",CTy"instruction",
                                               Call
                                                 ("DMULTU",CTy"MultDiv",
                                                  TP[Var("rs",FTy 5),
                                                     Var("rt",FTy 5)]))),
                                           (Bop
                                              (And,bVar"b'4",
                                               Bop
                                                 (And,bVar"b'1",
                                                  Mop(Not,bVar"b'0"))),
                                            Call
                                              ("MultDiv",CTy"instruction",
                                               Call
                                                 ("DDIV",CTy"MultDiv",
                                                  TP[Var("rs",FTy 5),
                                                     Var("rt",FTy 5)]))),
                                           (Bop
                                              (And,bVar"b'4",
                                               Bop
                                                 (And,bVar"b'1",bVar"b'0")),
                                            Call
                                              ("MultDiv",CTy"instruction",
                                               Call
                                                 ("DDIVU",CTy"MultDiv",
                                                  TP[Var("rs",FTy 5),
                                                     Var("rt",FTy 5)])))],
                                          Const
                                            ("ReservedInstruction",
                                             CTy"instruction"))),
                                      (Bop
                                         (And,Mop(Not,bVar"b'4"),
                                          Bop
                                            (And,Mop(Not,bVar"b'1"),
                                             Mop(Not,bVar"b'0"))),
                                       Call
                                         ("Branch",CTy"instruction",
                                          Call
                                            ("JR",CTy"Branch",
                                             Var("rs",FTy 5)))),
                                      (Bop
                                         (And,Mop(Not,bVar"b'4"),
                                          Bop
                                            (And,Mop(Not,bVar"b'1"),
                                             bVar"b'0")),
                                       Call
                                         ("Branch",CTy"instruction",
                                          Call
                                            ("JALR",CTy"Branch",
                                             TP[Var("rs",FTy 5),
                                                Var("rd",FTy 5)]))),
                                      (Bop
                                         (And,bVar"b'4",
                                          Bop
                                            (And,Mop(Not,bVar"b'1"),
                                             Mop(Not,bVar"b'0"))),
                                       Call
                                         ("MultDiv",CTy"instruction",
                                          Call
                                            ("MULT",CTy"MultDiv",
                                             TP[Var("rs",FTy 5),
                                                Var("rt",FTy 5)]))),
                                      (Bop
                                         (And,bVar"b'4",
                                          Bop
                                            (And,Mop(Not,bVar"b'1"),
                                             bVar"b'0")),
                                       Call
                                         ("MultDiv",CTy"instruction",
                                          Call
                                            ("MULTU",CTy"MultDiv",
                                             TP[Var("rs",FTy 5),
                                                Var("rt",FTy 5)]))),
                                      (Bop
                                         (And,bVar"b'4",
                                          Bop
                                            (And,bVar"b'1",
                                             Mop(Not,bVar"b'0"))),
                                       Call
                                         ("MultDiv",CTy"instruction",
                                          Call
                                            ("DIV",CTy"MultDiv",
                                             TP[Var("rs",FTy 5),
                                                Var("rt",FTy 5)]))),
                                      (Bop
                                         (And,bVar"b'4",
                                          Bop(And,bVar"b'1",bVar"b'0")),
                                       Call
                                         ("MultDiv",CTy"instruction",
                                          Call
                                            ("DIVU",CTy"MultDiv",
                                             TP[Var("rs",FTy 5),
                                                Var("rt",FTy 5)])))],
                                     Const
                                       ("ReservedInstruction",
                                        CTy"instruction"))),
                                 (bVar"b'4",
                                  ITB
                                    ([(Bop
                                         (And,Mop(Not,bVar"b'2"),
                                          Bop
                                            (And,Mop(Not,bVar"b'1"),
                                             Mop(Not,bVar"b'0"))),
                                       Call
                                         ("MultDiv",CTy"instruction",
                                          Call
                                            ("MFHI",CTy"MultDiv",
                                             Var("rd",FTy 5)))),
                                      (Bop
                                         (And,Mop(Not,bVar"b'2"),
                                          Bop
                                            (And,Mop(Not,bVar"b'1"),
                                             bVar"b'0")),
                                       Call
                                         ("MultDiv",CTy"instruction",
                                          Call
                                            ("MTHI",CTy"MultDiv",
                                             Var("rd",FTy 5)))),
                                      (Bop
                                         (And,Mop(Not,bVar"b'2"),
                                          Bop
                                            (And,bVar"b'1",
                                             Mop(Not,bVar"b'0"))),
                                       Call
                                         ("MultDiv",CTy"instruction",
                                          Call
                                            ("MFLO",CTy"MultDiv",
                                             Var("rs",FTy 5)))),
                                      (Bop
                                         (And,Mop(Not,bVar"b'2"),
                                          Bop(And,bVar"b'1",bVar"b'0")),
                                       Call
                                         ("MultDiv",CTy"instruction",
                                          Call
                                            ("MTLO",CTy"MultDiv",
                                             Var("rs",FTy 5)))),
                                      (Bop
                                         (And,bVar"b'2",
                                          Bop
                                            (And,Mop(Not,bVar"b'1"),
                                             Mop(Not,bVar"b'0"))),
                                       Call
                                         ("Shift",CTy"instruction",
                                          Call
                                            ("DSLLV",CTy"Shift",
                                             TP[Var("rs",FTy 5),
                                                Var("rt",FTy 5),
                                                Var("rd",FTy 5)]))),
                                      (Bop
                                         (And,bVar"b'2",
                                          Bop
                                            (And,bVar"b'1",
                                             Mop(Not,bVar"b'0"))),
                                       Call
                                         ("Shift",CTy"instruction",
                                          Call
                                            ("DSRLV",CTy"Shift",
                                             TP[Var("rs",FTy 5),
                                                Var("rt",FTy 5),
                                                Var("rd",FTy 5)]))),
                                      (Bop
                                         (And,bVar"b'2",
                                          Bop(And,bVar"b'1",bVar"b'0")),
                                       Call
                                         ("Shift",CTy"instruction",
                                          Call
                                            ("DSRAV",CTy"Shift",
                                             TP[Var("rs",FTy 5),
                                                Var("rt",FTy 5),
                                                Var("rd",FTy 5)])))],
                                     Const
                                       ("ReservedInstruction",
                                        CTy"instruction"))),
                                 (Bop
                                    (And,Mop(Not,bVar"b'2"),
                                     Bop
                                       (And,Mop(Not,bVar"b'1"),
                                        Mop(Not,bVar"b'0"))),
                                  Call
                                    ("Shift",CTy"instruction",
                                     Call
                                       ("SLL",CTy"Shift",
                                        TP[Var("rt",FTy 5),
                                           Var("rd",FTy 5),
                                           Var("imm5",FTy 5)]))),
                                 (Bop
                                    (And,Mop(Not,bVar"b'2"),
                                     Bop(And,bVar"b'1",Mop(Not,bVar"b'0"))),
                                  Call
                                    ("Shift",CTy"instruction",
                                     Call
                                       ("SRL",CTy"Shift",
                                        TP[Var("rt",FTy 5),
                                           Var("rd",FTy 5),
                                           Var("imm5",FTy 5)]))),
                                 (Bop
                                    (And,Mop(Not,bVar"b'2"),
                                     Bop(And,bVar"b'1",bVar"b'0")),
                                  Call
                                    ("Shift",CTy"instruction",
                                     Call
                                       ("SRA",CTy"Shift",
                                        TP[Var("rt",FTy 5),
                                           Var("rd",FTy 5),
                                           Var("imm5",FTy 5)]))),
                                 (Bop
                                    (And,bVar"b'2",
                                     Bop
                                       (And,Mop(Not,bVar"b'1"),
                                        Mop(Not,bVar"b'0"))),
                                  Call
                                    ("Shift",CTy"instruction",
                                     Call
                                       ("SLLV",CTy"Shift",
                                        TP[Var("rs",FTy 5),
                                           Var("rt",FTy 5),Var("rd",FTy 5)]))),
                                 (Bop
                                    (And,bVar"b'2",
                                     Bop(And,bVar"b'1",Mop(Not,bVar"b'0"))),
                                  Call
                                    ("Shift",CTy"instruction",
                                     Call
                                       ("SRLV",CTy"Shift",
                                        TP[Var("rs",FTy 5),
                                           Var("rt",FTy 5),Var("rd",FTy 5)]))),
                                 (Bop
                                    (And,bVar"b'2",
                                     Bop(And,bVar"b'1",bVar"b'0")),
                                  Call
                                    ("Shift",CTy"instruction",
                                     Call
                                       ("SRAV",CTy"Shift",
                                        TP[Var("rs",FTy 5),
                                           Var("rt",FTy 5),Var("rd",FTy 5)])))],
                                Const
                                  ("ReservedInstruction",CTy"instruction")))))))),
             (Bop
                (And,Mop(Not,bVar"b'30"),
                 Bop(And,Mop(Not,bVar"b'27"),bVar"b'26")),
              Let
                (Var("rs",FTy 5),EX(Var("w",F32),LN 25,LN 21,FTy 5),
                 Let
                   (Var("immediate",F16),EX(Var("w",F32),LN 15,LN 0,F16),
                    Let
                      (TP[bVar"b'4",bVar"b'3",bVar"b'2",bVar"b'1",
                          bVar"b'0"],
                       BL(5,EX(Var("w",F32),LN 20,LN 16,FTy 5)),
                       ITB
                         ([(bVar"b'1",
                            ITB
                              ([(Bop
                                   (And,Mop(Not,bVar"b'4"),
                                    Bop
                                      (And,Mop(Not,bVar"b'3"),
                                       Bop
                                         (And,Mop(Not,bVar"b'2"),
                                          Mop(Not,bVar"b'0")))),
                                 Call
                                   ("Branch",CTy"instruction",
                                    Call
                                      ("BLTZL",CTy"Branch",
                                       TP[Var("rs",FTy 5),
                                          Var("immediate",F16)]))),
                                (Bop
                                   (And,Mop(Not,bVar"b'4"),
                                    Bop
                                      (And,Mop(Not,bVar"b'3"),
                                       Bop
                                         (And,Mop(Not,bVar"b'2"),
                                          bVar"b'0"))),
                                 Call
                                   ("Branch",CTy"instruction",
                                    Call
                                      ("BGEZL",CTy"Branch",
                                       TP[Var("rs",FTy 5),
                                          Var("immediate",F16)]))),
                                (Bop
                                   (And,Mop(Not,bVar"b'4"),
                                    Bop
                                      (And,bVar"b'3",
                                       Bop
                                         (And,Mop(Not,bVar"b'2"),
                                          Mop(Not,bVar"b'0")))),
                                 Call
                                   ("Trap",CTy"instruction",
                                    Call
                                      ("TLTI",CTy"Trap",
                                       TP[Var("rs",FTy 5),
                                          Var("immediate",F16)]))),
                                (Bop
                                   (And,Mop(Not,bVar"b'4"),
                                    Bop
                                      (And,bVar"b'3",
                                       Bop
                                         (And,Mop(Not,bVar"b'2"),
                                          bVar"b'0"))),
                                 Call
                                   ("Trap",CTy"instruction",
                                    Call
                                      ("TLTIU",CTy"Trap",
                                       TP[Var("rs",FTy 5),
                                          Var("immediate",F16)]))),
                                (Bop
                                   (And,Mop(Not,bVar"b'4"),
                                    Bop
                                      (And,bVar"b'3",
                                       Bop
                                         (And,bVar"b'2",
                                          Mop(Not,bVar"b'0")))),
                                 Call
                                   ("Trap",CTy"instruction",
                                    Call
                                      ("TNEI",CTy"Trap",
                                       TP[Var("rs",FTy 5),
                                          Var("immediate",F16)]))),
                                (Bop
                                   (And,bVar"b'4",
                                    Bop
                                      (And,Mop(Not,bVar"b'3"),
                                       Bop
                                         (And,Mop(Not,bVar"b'2"),
                                          Mop(Not,bVar"b'0")))),
                                 Call
                                   ("Branch",CTy"instruction",
                                    Call
                                      ("BLTZALL",CTy"Branch",
                                       TP[Var("rs",FTy 5),
                                          Var("immediate",F16)]))),
                                (Bop
                                   (And,bVar"b'4",
                                    Bop
                                      (And,Mop(Not,bVar"b'3"),
                                       Bop
                                         (And,Mop(Not,bVar"b'2"),
                                          bVar"b'0"))),
                                 Call
                                   ("Branch",CTy"instruction",
                                    Call
                                      ("BGEZALL",CTy"Branch",
                                       TP[Var("rs",FTy 5),
                                          Var("immediate",F16)])))],
                               Const
                                 ("ReservedInstruction",CTy"instruction"))),
                           (Bop
                              (And,Mop(Not,bVar"b'4"),
                               Bop
                                 (And,Mop(Not,bVar"b'3"),
                                  Bop
                                    (And,Mop(Not,bVar"b'2"),
                                     Mop(Not,bVar"b'0")))),
                            Call
                              ("Branch",CTy"instruction",
                               Call
                                 ("BLTZ",CTy"Branch",
                                  TP[Var("rs",FTy 5),Var("immediate",F16)]))),
                           (Bop
                              (And,Mop(Not,bVar"b'4"),
                               Bop
                                 (And,Mop(Not,bVar"b'3"),
                                  Bop(And,Mop(Not,bVar"b'2"),bVar"b'0"))),
                            Call
                              ("Branch",CTy"instruction",
                               Call
                                 ("BGEZ",CTy"Branch",
                                  TP[Var("rs",FTy 5),Var("immediate",F16)]))),
                           (Bop
                              (And,Mop(Not,bVar"b'4"),
                               Bop
                                 (And,bVar"b'3",
                                  Bop
                                    (And,Mop(Not,bVar"b'2"),
                                     Mop(Not,bVar"b'0")))),
                            Call
                              ("Trap",CTy"instruction",
                               Call
                                 ("TGEI",CTy"Trap",
                                  TP[Var("rs",FTy 5),Var("immediate",F16)]))),
                           (Bop
                              (And,Mop(Not,bVar"b'4"),
                               Bop
                                 (And,bVar"b'3",
                                  Bop(And,Mop(Not,bVar"b'2"),bVar"b'0"))),
                            Call
                              ("Trap",CTy"instruction",
                               Call
                                 ("TGEIU",CTy"Trap",
                                  TP[Var("rs",FTy 5),Var("immediate",F16)]))),
                           (Bop
                              (And,Mop(Not,bVar"b'4"),
                               Bop
                                 (And,bVar"b'3",
                                  Bop(And,bVar"b'2",Mop(Not,bVar"b'0")))),
                            Call
                              ("Trap",CTy"instruction",
                               Call
                                 ("TEQI",CTy"Trap",
                                  TP[Var("rs",FTy 5),Var("immediate",F16)]))),
                           (Bop
                              (And,bVar"b'4",
                               Bop
                                 (And,Mop(Not,bVar"b'3"),
                                  Bop
                                    (And,Mop(Not,bVar"b'2"),
                                     Mop(Not,bVar"b'0")))),
                            Call
                              ("Branch",CTy"instruction",
                               Call
                                 ("BLTZAL",CTy"Branch",
                                  TP[Var("rs",FTy 5),Var("immediate",F16)]))),
                           (Bop
                              (And,bVar"b'4",
                               Bop
                                 (And,Mop(Not,bVar"b'3"),
                                  Bop(And,Mop(Not,bVar"b'2"),bVar"b'0"))),
                            Call
                              ("Branch",CTy"instruction",
                               Call
                                 ("BGEZAL",CTy"Branch",
                                  TP[Var("rs",FTy 5),Var("immediate",F16)])))],
                          Const("ReservedInstruction",CTy"instruction")))))),
             (Bop
                (And,Mop(Not,bVar"b'30"),
                 Bop(And,bVar"b'27",Mop(Not,bVar"b'26"))),
              Call
                ("Branch",CTy"instruction",
                 Call("J",CTy"Branch",EX(Var("w",F32),LN 25,LN 0,FTy 26)))),
             (Bop(And,Mop(Not,bVar"b'30"),Bop(And,bVar"b'27",bVar"b'26")),
              Call
                ("Branch",CTy"instruction",
                 Call
                   ("JAL",CTy"Branch",EX(Var("w",F32),LN 25,LN 0,FTy 26)))),
             (Bop
                (And,bVar"b'30",
                 Bop
                   (And,Mop(Not,bVar"b'27"),
                    Bop
                      (And,Mop(Not,bVar"b'26"),
                       Bop
                         (And,Mop(Not,bVar"b'10"),
                          Bop
                            (And,Mop(Not,bVar"b'9"),
                             Bop
                               (And,Mop(Not,bVar"b'8"),
                                Bop
                                  (And,Mop(Not,bVar"b'7"),
                                   Bop
                                     (And,Mop(Not,bVar"b'6"),
                                      Bop
                                        (And,Mop(Not,bVar"b'5"),
                                         Bop
                                           (And,Mop(Not,bVar"b'4"),
                                            Mop(Not,bVar"b'3"))))))))))),
              Let
                (Var("sel",FTy 3),EX(Var("w",F32),LN 2,LN 0,FTy 3),
                 Let
                   (Var("rt",FTy 5),EX(Var("w",F32),LN 20,LN 16,FTy 5),
                    Let
                      (Var("rd",FTy 5),EX(Var("w",F32),LN 15,LN 11,FTy 5),
                       Let
                         (TP[bVar"b'4",bVar"b'3",bVar"b'2",bVar"b'1",
                             bVar"b'0"],
                          BL(5,EX(Var("w",F32),LN 25,LN 21,FTy 5)),
                          ITE
                            (Bop
                               (And,Mop(Not,bVar"b'4"),
                                Bop
                                  (And,Mop(Not,bVar"b'3"),
                                   Mop(Not,bVar"b'1"))),
                             ITB
                               ([(Bop
                                    (And,Mop(Not,bVar"b'2"),
                                     Mop(Not,bVar"b'0")),
                                  Call
                                    ("CP",CTy"instruction",
                                     Call
                                       ("MFC0",CTy"CP",
                                        TP[Var("rt",FTy 5),
                                           Var("rd",FTy 5),
                                           Var("sel",FTy 3)]))),
                                 (Bop(And,Mop(Not,bVar"b'2"),bVar"b'0"),
                                  Call
                                    ("CP",CTy"instruction",
                                     Call
                                       ("DMFC0",CTy"CP",
                                        TP[Var("rt",FTy 5),
                                           Var("rd",FTy 5),
                                           Var("sel",FTy 3)]))),
                                 (Bop(And,bVar"b'2",Mop(Not,bVar"b'0")),
                                  Call
                                    ("CP",CTy"instruction",
                                     Call
                                       ("MTC0",CTy"CP",
                                        TP[Var("rt",FTy 5),
                                           Var("rd",FTy 5),
                                           Var("sel",FTy 3)]))),
                                 (Bop(And,bVar"b'2",bVar"b'0"),
                                  Call
                                    ("CP",CTy"instruction",
                                     Call
                                       ("DMTC0",CTy"CP",
                                        TP[Var("rt",FTy 5),
                                           Var("rd",FTy 5),
                                           Var("sel",FTy 3)])))],
                                Const
                                  ("ReservedInstruction",CTy"instruction")),
                             Const("ReservedInstruction",CTy"instruction")))))))],
            Let
              (Var("rt",FTy 5),EX(Var("w",F32),LN 20,LN 16,FTy 5),
               Let
                 (Var("rs",FTy 5),EX(Var("w",F32),LN 25,LN 21,FTy 5),
                  Let
                    (Var("immediate",F16),EX(Var("w",F32),LN 15,LN 0,F16),
                     Let
                       (TP[bVar"b'5",bVar"b'4",bVar"b'3",bVar"b'2",
                           bVar"b'1",bVar"b'0"],
                        BL(6,EX(Var("w",F32),LN 31,LN 26,FTy 6)),
                        ITB
                          ([(bVar"b'5",
                             ITB
                               ([(bVar"b'2",
                                  ITB
                                    ([(bVar"b'3",
                                       ITB
                                         ([(Bop
                                              (And,Mop(Not,bVar"b'4"),
                                               Bop
                                                 (And,Mop(Not,bVar"b'1"),
                                                  Mop(Not,bVar"b'0"))),
                                            Call
                                              ("Store",CTy"instruction",
                                               Call
                                                 ("SDL",CTy"Store",
                                                  TP[Var("rs",FTy 5),
                                                     Var("rt",FTy 5),
                                                     Var("immediate",F16)]))),
                                           (Bop
                                              (And,Mop(Not,bVar"b'4"),
                                               Bop
                                                 (And,Mop(Not,bVar"b'1"),
                                                  bVar"b'0")),
                                            Call
                                              ("Store",CTy"instruction",
                                               Call
                                                 ("SDR",CTy"Store",
                                                  TP[Var("rs",FTy 5),
                                                     Var("rt",FTy 5),
                                                     Var("immediate",F16)]))),
                                           (Bop
                                              (And,Mop(Not,bVar"b'4"),
                                               Bop
                                                 (And,bVar"b'1",
                                                  Mop(Not,bVar"b'0"))),
                                            Call
                                              ("Store",CTy"instruction",
                                               Call
                                                 ("SWR",CTy"Store",
                                                  TP[Var("rs",FTy 5),
                                                     Var("rt",FTy 5),
                                                     Var("immediate",F16)]))),
                                           (Bop
                                              (And,bVar"b'4",
                                               Bop
                                                 (And,Mop(Not,bVar"b'1"),
                                                  Mop(Not,bVar"b'0"))),
                                            Call
                                              ("Store",CTy"instruction",
                                               Call
                                                 ("SCD",CTy"Store",
                                                  TP[Var("rs",FTy 5),
                                                     Var("rt",FTy 5),
                                                     Var("immediate",F16)]))),
                                           (Bop
                                              (And,bVar"b'4",
                                               Bop
                                                 (And,bVar"b'1",bVar"b'0")),
                                            Call
                                              ("Store",CTy"instruction",
                                               Call
                                                 ("SD",CTy"Store",
                                                  TP[Var("rs",FTy 5),
                                                     Var("rt",FTy 5),
                                                     Var("immediate",F16)])))],
                                          Const
                                            ("ReservedInstruction",
                                             CTy"instruction"))),
                                      (Bop
                                         (And,Mop(Not,bVar"b'4"),
                                          Bop
                                            (And,Mop(Not,bVar"b'1"),
                                             Mop(Not,bVar"b'0"))),
                                       Call
                                         ("Load",CTy"instruction",
                                          Call
                                            ("LBU",CTy"Load",
                                             TP[Var("rs",FTy 5),
                                                Var("rt",FTy 5),
                                                Var("immediate",F16)]))),
                                      (Bop
                                         (And,Mop(Not,bVar"b'4"),
                                          Bop
                                            (And,Mop(Not,bVar"b'1"),
                                             bVar"b'0")),
                                       Call
                                         ("Load",CTy"instruction",
                                          Call
                                            ("LHU",CTy"Load",
                                             TP[Var("rs",FTy 5),
                                                Var("rt",FTy 5),
                                                Var("immediate",F16)]))),
                                      (Bop
                                         (And,Mop(Not,bVar"b'4"),
                                          Bop
                                            (And,bVar"b'1",
                                             Mop(Not,bVar"b'0"))),
                                       Call
                                         ("Load",CTy"instruction",
                                          Call
                                            ("LWR",CTy"Load",
                                             TP[Var("rs",FTy 5),
                                                Var("rt",FTy 5),
                                                Var("immediate",F16)]))),
                                      (Bop
                                         (And,Mop(Not,bVar"b'4"),
                                          Bop(And,bVar"b'1",bVar"b'0")),
                                       Call
                                         ("Load",CTy"instruction",
                                          Call
                                            ("LWU",CTy"Load",
                                             TP[Var("rs",FTy 5),
                                                Var("rt",FTy 5),
                                                Var("immediate",F16)]))),
                                      (Bop
                                         (And,bVar"b'4",
                                          Bop
                                            (And,Mop(Not,bVar"b'1"),
                                             Mop(Not,bVar"b'0"))),
                                       Call
                                         ("Load",CTy"instruction",
                                          Call
                                            ("LLD",CTy"Load",
                                             TP[Var("rs",FTy 5),
                                                Var("rt",FTy 5),
                                                Var("immediate",F16)]))),
                                      (Bop
                                         (And,bVar"b'4",
                                          Bop(And,bVar"b'1",bVar"b'0")),
                                       Call
                                         ("Load",CTy"instruction",
                                          Call
                                            ("LD",CTy"Load",
                                             TP[Var("rs",FTy 5),
                                                Var("rt",FTy 5),
                                                Var("immediate",F16)])))],
                                     Const
                                       ("ReservedInstruction",
                                        CTy"instruction"))),
                                 (bVar"b'3",
                                  ITB
                                    ([(Bop
                                         (And,Mop(Not,bVar"b'4"),
                                          Bop
                                            (And,Mop(Not,bVar"b'1"),
                                             Mop(Not,bVar"b'0"))),
                                       Call
                                         ("Store",CTy"instruction",
                                          Call
                                            ("SB",CTy"Store",
                                             TP[Var("rs",FTy 5),
                                                Var("rt",FTy 5),
                                                Var("immediate",F16)]))),
                                      (Bop
                                         (And,Mop(Not,bVar"b'4"),
                                          Bop
                                            (And,Mop(Not,bVar"b'1"),
                                             bVar"b'0")),
                                       Call
                                         ("Store",CTy"instruction",
                                          Call
                                            ("SH",CTy"Store",
                                             TP[Var("rs",FTy 5),
                                                Var("rt",FTy 5),
                                                Var("immediate",F16)]))),
                                      (Bop
                                         (And,Mop(Not,bVar"b'4"),
                                          Bop
                                            (And,bVar"b'1",
                                             Mop(Not,bVar"b'0"))),
                                       Call
                                         ("Store",CTy"instruction",
                                          Call
                                            ("SWL",CTy"Store",
                                             TP[Var("rs",FTy 5),
                                                Var("rt",FTy 5),
                                                Var("immediate",F16)]))),
                                      (Bop
                                         (And,Mop(Not,bVar"b'4"),
                                          Bop(And,bVar"b'1",bVar"b'0")),
                                       Call
                                         ("Store",CTy"instruction",
                                          Call
                                            ("SW",CTy"Store",
                                             TP[Var("rs",FTy 5),
                                                Var("rt",FTy 5),
                                                Var("immediate",F16)]))),
                                      (Bop
                                         (And,bVar"b'4",
                                          Bop
                                            (And,Mop(Not,bVar"b'1"),
                                             Mop(Not,bVar"b'0"))),
                                       Call
                                         ("Store",CTy"instruction",
                                          Call
                                            ("SC",CTy"Store",
                                             TP[Var("rs",FTy 5),
                                                Var("rt",FTy 5),
                                                Var("immediate",F16)])))],
                                     Const
                                       ("ReservedInstruction",
                                        CTy"instruction"))),
                                 (Bop
                                    (And,Mop(Not,bVar"b'4"),
                                     Bop
                                       (And,Mop(Not,bVar"b'1"),
                                        Mop(Not,bVar"b'0"))),
                                  Call
                                    ("Load",CTy"instruction",
                                     Call
                                       ("LB",CTy"Load",
                                        TP[Var("rs",FTy 5),
                                           Var("rt",FTy 5),
                                           Var("immediate",F16)]))),
                                 (Bop
                                    (And,Mop(Not,bVar"b'4"),
                                     Bop(And,Mop(Not,bVar"b'1"),bVar"b'0")),
                                  Call
                                    ("Load",CTy"instruction",
                                     Call
                                       ("LH",CTy"Load",
                                        TP[Var("rs",FTy 5),
                                           Var("rt",FTy 5),
                                           Var("immediate",F16)]))),
                                 (Bop
                                    (And,Mop(Not,bVar"b'4"),
                                     Bop(And,bVar"b'1",Mop(Not,bVar"b'0"))),
                                  Call
                                    ("Load",CTy"instruction",
                                     Call
                                       ("LWL",CTy"Load",
                                        TP[Var("rs",FTy 5),
                                           Var("rt",FTy 5),
                                           Var("immediate",F16)]))),
                                 (Bop
                                    (And,Mop(Not,bVar"b'4"),
                                     Bop(And,bVar"b'1",bVar"b'0")),
                                  Call
                                    ("Load",CTy"instruction",
                                     Call
                                       ("LW",CTy"Load",
                                        TP[Var("rs",FTy 5),
                                           Var("rt",FTy 5),
                                           Var("immediate",F16)]))),
                                 (Bop
                                    (And,bVar"b'4",
                                     Bop
                                       (And,Mop(Not,bVar"b'1"),
                                        Mop(Not,bVar"b'0"))),
                                  Call
                                    ("Load",CTy"instruction",
                                     Call
                                       ("LL",CTy"Load",
                                        TP[Var("rs",FTy 5),
                                           Var("rt",FTy 5),
                                           Var("immediate",F16)])))],
                                Const
                                  ("ReservedInstruction",CTy"instruction"))),
                            (bVar"b'1",
                             ITB
                               ([(bVar"b'0",
                                  ITB
                                    ([(Bop
                                         (And,Mop(Not,bVar"b'4"),
                                          Bop
                                            (And,Mop(Not,bVar"b'3"),
                                             bVar"b'2")),
                                       Call
                                         ("Branch",CTy"instruction",
                                          Call
                                            ("BGTZ",CTy"Branch",
                                             TP[Var("rs",FTy 5),
                                                Var("immediate",F16)]))),
                                      (Bop
                                         (And,Mop(Not,bVar"b'4"),
                                          Bop
                                            (And,bVar"b'3",
                                             Mop(Not,bVar"b'2"))),
                                       Call
                                         ("ArithI",CTy"instruction",
                                          Call
                                            ("SLTIU",CTy"ArithI",
                                             TP[Var("rs",FTy 5),
                                                Var("rt",FTy 5),
                                                Var("immediate",F16)]))),
                                      (Bop
                                         (And,Mop(Not,bVar"b'4"),
                                          Bop(And,bVar"b'3",bVar"b'2")),
                                       Call
                                         ("ArithI",CTy"instruction",
                                          Call
                                            ("LUI",CTy"ArithI",
                                             TP[Var("rt",FTy 5),
                                                Var("immediate",F16)]))),
                                      (Bop
                                         (And,bVar"b'4",
                                          Bop
                                            (And,Mop(Not,bVar"b'3"),
                                             bVar"b'2")),
                                       Call
                                         ("Branch",CTy"instruction",
                                          Call
                                            ("BGTZL",CTy"Branch",
                                             TP[Var("rs",FTy 5),
                                                Var("immediate",F16)]))),
                                      (Bop
                                         (And,bVar"b'4",
                                          Bop
                                            (And,bVar"b'3",
                                             Mop(Not,bVar"b'2"))),
                                       Call
                                         ("Load",CTy"instruction",
                                          Call
                                            ("LDR",CTy"Load",
                                             TP[Var("rs",FTy 5),
                                                Var("rt",FTy 5),
                                                Var("immediate",F16)])))],
                                     Const
                                       ("ReservedInstruction",
                                        CTy"instruction"))),
                                 (Bop
                                    (And,Mop(Not,bVar"b'4"),
                                     Bop(And,Mop(Not,bVar"b'3"),bVar"b'2")),
                                  Call
                                    ("Branch",CTy"instruction",
                                     Call
                                       ("BLEZ",CTy"Branch",
                                        TP[Var("rs",FTy 5),
                                           Var("immediate",F16)]))),
                                 (Bop
                                    (And,Mop(Not,bVar"b'4"),
                                     Bop(And,bVar"b'3",Mop(Not,bVar"b'2"))),
                                  Call
                                    ("ArithI",CTy"instruction",
                                     Call
                                       ("SLTI",CTy"ArithI",
                                        TP[Var("rs",FTy 5),
                                           Var("rt",FTy 5),
                                           Var("immediate",F16)]))),
                                 (Bop
                                    (And,Mop(Not,bVar"b'4"),
                                     Bop(And,bVar"b'3",bVar"b'2")),
                                  Call
                                    ("ArithI",CTy"instruction",
                                     Call
                                       ("XORI",CTy"ArithI",
                                        TP[Var("rs",FTy 5),
                                           Var("rt",FTy 5),
                                           Var("immediate",F16)]))),
                                 (Bop
                                    (And,bVar"b'4",
                                     Bop(And,Mop(Not,bVar"b'3"),bVar"b'2")),
                                  Call
                                    ("Branch",CTy"instruction",
                                     Call
                                       ("BLEZL",CTy"Branch",
                                        TP[Var("rs",FTy 5),
                                           Var("immediate",F16)]))),
                                 (Bop
                                    (And,bVar"b'4",
                                     Bop(And,bVar"b'3",Mop(Not,bVar"b'2"))),
                                  Call
                                    ("Load",CTy"instruction",
                                     Call
                                       ("LDL",CTy"Load",
                                        TP[Var("rs",FTy 5),
                                           Var("rt",FTy 5),
                                           Var("immediate",F16)])))],
                                Const
                                  ("ReservedInstruction",CTy"instruction"))),
                            (bVar"b'0",
                             ITB
                               ([(Bop
                                    (And,Mop(Not,bVar"b'4"),
                                     Bop(And,Mop(Not,bVar"b'3"),bVar"b'2")),
                                  Call
                                    ("Branch",CTy"instruction",
                                     Call
                                       ("BNE",CTy"Branch",
                                        TP[Var("rs",FTy 5),
                                           Var("rt",FTy 5),
                                           Var("immediate",F16)]))),
                                 (Bop
                                    (And,Mop(Not,bVar"b'4"),
                                     Bop(And,bVar"b'3",Mop(Not,bVar"b'2"))),
                                  Call
                                    ("ArithI",CTy"instruction",
                                     Call
                                       ("ADDIU",CTy"ArithI",
                                        TP[Var("rs",FTy 5),
                                           Var("rt",FTy 5),
                                           Var("immediate",F16)]))),
                                 (Bop
                                    (And,Mop(Not,bVar"b'4"),
                                     Bop(And,bVar"b'3",bVar"b'2")),
                                  Call
                                    ("ArithI",CTy"instruction",
                                     Call
                                       ("ORI",CTy"ArithI",
                                        TP[Var("rs",FTy 5),
                                           Var("rt",FTy 5),
                                           Var("immediate",F16)]))),
                                 (Bop
                                    (And,bVar"b'4",
                                     Bop(And,Mop(Not,bVar"b'3"),bVar"b'2")),
                                  Call
                                    ("Branch",CTy"instruction",
                                     Call
                                       ("BNEL",CTy"Branch",
                                        TP[Var("rs",FTy 5),
                                           Var("rt",FTy 5),
                                           Var("immediate",F16)]))),
                                 (Bop
                                    (And,bVar"b'4",
                                     Bop(And,bVar"b'3",Mop(Not,bVar"b'2"))),
                                  Call
                                    ("ArithI",CTy"instruction",
                                     Call
                                       ("DADDIU",CTy"ArithI",
                                        TP[Var("rs",FTy 5),
                                           Var("rt",FTy 5),
                                           Var("immediate",F16)])))],
                                Const
                                  ("ReservedInstruction",CTy"instruction"))),
                            (Bop
                               (And,Mop(Not,bVar"b'4"),
                                Bop(And,Mop(Not,bVar"b'3"),bVar"b'2")),
                             Call
                               ("Branch",CTy"instruction",
                                Call
                                  ("BEQ",CTy"Branch",
                                   TP[Var("rs",FTy 5),Var("rt",FTy 5),
                                      Var("immediate",F16)]))),
                            (Bop
                               (And,Mop(Not,bVar"b'4"),
                                Bop(And,bVar"b'3",Mop(Not,bVar"b'2"))),
                             Call
                               ("ArithI",CTy"instruction",
                                Call
                                  ("ADDI",CTy"ArithI",
                                   TP[Var("rs",FTy 5),Var("rt",FTy 5),
                                      Var("immediate",F16)]))),
                            (Bop
                               (And,Mop(Not,bVar"b'4"),
                                Bop(And,bVar"b'3",bVar"b'2")),
                             Call
                               ("ArithI",CTy"instruction",
                                Call
                                  ("ANDI",CTy"ArithI",
                                   TP[Var("rs",FTy 5),Var("rt",FTy 5),
                                      Var("immediate",F16)]))),
                            (Bop
                               (And,bVar"b'4",
                                Bop(And,Mop(Not,bVar"b'3"),bVar"b'2")),
                             Call
                               ("Branch",CTy"instruction",
                                Call
                                  ("BEQL",CTy"Branch",
                                   TP[Var("rs",FTy 5),Var("rt",FTy 5),
                                      Var("immediate",F16)]))),
                            (Bop
                               (And,bVar"b'4",
                                Bop(And,bVar"b'3",Mop(Not,bVar"b'2"))),
                             Call
                               ("ArithI",CTy"instruction",
                                Call
                                  ("DADDI",CTy"ArithI",
                                   TP[Var("rs",FTy 5),Var("rt",FTy 5),
                                      Var("immediate",F16)])))],
                           Const("ReservedInstruction",CTy"instruction"))))))),
         Let
           (Var("rt",FTy 5),EX(Var("w",F32),LN 20,LN 16,FTy 5),
            Let
              (Var("rs",FTy 5),EX(Var("w",F32),LN 25,LN 21,FTy 5),
               Let
                 (Var("immediate",F16),EX(Var("w",F32),LN 15,LN 0,F16),
                  Let
                    (TP[bVar"b'5",bVar"b'4",bVar"b'3",bVar"b'2",bVar"b'1",
                        bVar"b'0"],
                     BL(6,EX(Var("w",F32),LN 31,LN 26,FTy 6)),
                     ITB
                       ([(bVar"b'5",
                          ITB
                            ([(bVar"b'2",
                               ITB
                                 ([(bVar"b'3",
                                    ITB
                                      ([(Bop
                                           (And,Mop(Not,bVar"b'4"),
                                            Bop
                                              (And,Mop(Not,bVar"b'1"),
                                               Mop(Not,bVar"b'0"))),
                                         Call
                                           ("Store",CTy"instruction",
                                            Call
                                              ("SDL",CTy"Store",
                                               TP[Var("rs",FTy 5),
                                                  Var("rt",FTy 5),
                                                  Var("immediate",F16)]))),
                                        (Bop
                                           (And,Mop(Not,bVar"b'4"),
                                            Bop
                                              (And,Mop(Not,bVar"b'1"),
                                               bVar"b'0")),
                                         Call
                                           ("Store",CTy"instruction",
                                            Call
                                              ("SDR",CTy"Store",
                                               TP[Var("rs",FTy 5),
                                                  Var("rt",FTy 5),
                                                  Var("immediate",F16)]))),
                                        (Bop
                                           (And,Mop(Not,bVar"b'4"),
                                            Bop
                                              (And,bVar"b'1",
                                               Mop(Not,bVar"b'0"))),
                                         Call
                                           ("Store",CTy"instruction",
                                            Call
                                              ("SWR",CTy"Store",
                                               TP[Var("rs",FTy 5),
                                                  Var("rt",FTy 5),
                                                  Var("immediate",F16)]))),
                                        (Bop
                                           (And,bVar"b'4",
                                            Bop
                                              (And,Mop(Not,bVar"b'1"),
                                               Mop(Not,bVar"b'0"))),
                                         Call
                                           ("Store",CTy"instruction",
                                            Call
                                              ("SCD",CTy"Store",
                                               TP[Var("rs",FTy 5),
                                                  Var("rt",FTy 5),
                                                  Var("immediate",F16)]))),
                                        (Bop
                                           (And,bVar"b'4",
                                            Bop(And,bVar"b'1",bVar"b'0")),
                                         Call
                                           ("Store",CTy"instruction",
                                            Call
                                              ("SD",CTy"Store",
                                               TP[Var("rs",FTy 5),
                                                  Var("rt",FTy 5),
                                                  Var("immediate",F16)])))],
                                       Const
                                         ("ReservedInstruction",
                                          CTy"instruction"))),
                                   (Bop
                                      (And,Mop(Not,bVar"b'4"),
                                       Bop
                                         (And,Mop(Not,bVar"b'1"),
                                          Mop(Not,bVar"b'0"))),
                                    Call
                                      ("Load",CTy"instruction",
                                       Call
                                         ("LBU",CTy"Load",
                                          TP[Var("rs",FTy 5),
                                             Var("rt",FTy 5),
                                             Var("immediate",F16)]))),
                                   (Bop
                                      (And,Mop(Not,bVar"b'4"),
                                       Bop
                                         (And,Mop(Not,bVar"b'1"),
                                          bVar"b'0")),
                                    Call
                                      ("Load",CTy"instruction",
                                       Call
                                         ("LHU",CTy"Load",
                                          TP[Var("rs",FTy 5),
                                             Var("rt",FTy 5),
                                             Var("immediate",F16)]))),
                                   (Bop
                                      (And,Mop(Not,bVar"b'4"),
                                       Bop
                                         (And,bVar"b'1",
                                          Mop(Not,bVar"b'0"))),
                                    Call
                                      ("Load",CTy"instruction",
                                       Call
                                         ("LWR",CTy"Load",
                                          TP[Var("rs",FTy 5),
                                             Var("rt",FTy 5),
                                             Var("immediate",F16)]))),
                                   (Bop
                                      (And,Mop(Not,bVar"b'4"),
                                       Bop(And,bVar"b'1",bVar"b'0")),
                                    Call
                                      ("Load",CTy"instruction",
                                       Call
                                         ("LWU",CTy"Load",
                                          TP[Var("rs",FTy 5),
                                             Var("rt",FTy 5),
                                             Var("immediate",F16)]))),
                                   (Bop
                                      (And,bVar"b'4",
                                       Bop
                                         (And,Mop(Not,bVar"b'1"),
                                          Mop(Not,bVar"b'0"))),
                                    Call
                                      ("Load",CTy"instruction",
                                       Call
                                         ("LLD",CTy"Load",
                                          TP[Var("rs",FTy 5),
                                             Var("rt",FTy 5),
                                             Var("immediate",F16)]))),
                                   (Bop
                                      (And,bVar"b'4",
                                       Bop(And,bVar"b'1",bVar"b'0")),
                                    Call
                                      ("Load",CTy"instruction",
                                       Call
                                         ("LD",CTy"Load",
                                          TP[Var("rs",FTy 5),
                                             Var("rt",FTy 5),
                                             Var("immediate",F16)])))],
                                  Const
                                    ("ReservedInstruction",
                                     CTy"instruction"))),
                              (bVar"b'3",
                               ITB
                                 ([(Bop
                                      (And,Mop(Not,bVar"b'4"),
                                       Bop
                                         (And,Mop(Not,bVar"b'1"),
                                          Mop(Not,bVar"b'0"))),
                                    Call
                                      ("Store",CTy"instruction",
                                       Call
                                         ("SB",CTy"Store",
                                          TP[Var("rs",FTy 5),
                                             Var("rt",FTy 5),
                                             Var("immediate",F16)]))),
                                   (Bop
                                      (And,Mop(Not,bVar"b'4"),
                                       Bop
                                         (And,Mop(Not,bVar"b'1"),
                                          bVar"b'0")),
                                    Call
                                      ("Store",CTy"instruction",
                                       Call
                                         ("SH",CTy"Store",
                                          TP[Var("rs",FTy 5),
                                             Var("rt",FTy 5),
                                             Var("immediate",F16)]))),
                                   (Bop
                                      (And,Mop(Not,bVar"b'4"),
                                       Bop
                                         (And,bVar"b'1",
                                          Mop(Not,bVar"b'0"))),
                                    Call
                                      ("Store",CTy"instruction",
                                       Call
                                         ("SWL",CTy"Store",
                                          TP[Var("rs",FTy 5),
                                             Var("rt",FTy 5),
                                             Var("immediate",F16)]))),
                                   (Bop
                                      (And,Mop(Not,bVar"b'4"),
                                       Bop(And,bVar"b'1",bVar"b'0")),
                                    Call
                                      ("Store",CTy"instruction",
                                       Call
                                         ("SW",CTy"Store",
                                          TP[Var("rs",FTy 5),
                                             Var("rt",FTy 5),
                                             Var("immediate",F16)]))),
                                   (Bop
                                      (And,bVar"b'4",
                                       Bop
                                         (And,Mop(Not,bVar"b'1"),
                                          Mop(Not,bVar"b'0"))),
                                    Call
                                      ("Store",CTy"instruction",
                                       Call
                                         ("SC",CTy"Store",
                                          TP[Var("rs",FTy 5),
                                             Var("rt",FTy 5),
                                             Var("immediate",F16)])))],
                                  Const
                                    ("ReservedInstruction",
                                     CTy"instruction"))),
                              (Bop
                                 (And,Mop(Not,bVar"b'4"),
                                  Bop
                                    (And,Mop(Not,bVar"b'1"),
                                     Mop(Not,bVar"b'0"))),
                               Call
                                 ("Load",CTy"instruction",
                                  Call
                                    ("LB",CTy"Load",
                                     TP[Var("rs",FTy 5),Var("rt",FTy 5),
                                        Var("immediate",F16)]))),
                              (Bop
                                 (And,Mop(Not,bVar"b'4"),
                                  Bop(And,Mop(Not,bVar"b'1"),bVar"b'0")),
                               Call
                                 ("Load",CTy"instruction",
                                  Call
                                    ("LH",CTy"Load",
                                     TP[Var("rs",FTy 5),Var("rt",FTy 5),
                                        Var("immediate",F16)]))),
                              (Bop
                                 (And,Mop(Not,bVar"b'4"),
                                  Bop(And,bVar"b'1",Mop(Not,bVar"b'0"))),
                               Call
                                 ("Load",CTy"instruction",
                                  Call
                                    ("LWL",CTy"Load",
                                     TP[Var("rs",FTy 5),Var("rt",FTy 5),
                                        Var("immediate",F16)]))),
                              (Bop
                                 (And,Mop(Not,bVar"b'4"),
                                  Bop(And,bVar"b'1",bVar"b'0")),
                               Call
                                 ("Load",CTy"instruction",
                                  Call
                                    ("LW",CTy"Load",
                                     TP[Var("rs",FTy 5),Var("rt",FTy 5),
                                        Var("immediate",F16)]))),
                              (Bop
                                 (And,bVar"b'4",
                                  Bop
                                    (And,Mop(Not,bVar"b'1"),
                                     Mop(Not,bVar"b'0"))),
                               Call
                                 ("Load",CTy"instruction",
                                  Call
                                    ("LL",CTy"Load",
                                     TP[Var("rs",FTy 5),Var("rt",FTy 5),
                                        Var("immediate",F16)])))],
                             Const("ReservedInstruction",CTy"instruction"))),
                         (bVar"b'1",
                          ITB
                            ([(bVar"b'0",
                               ITB
                                 ([(Bop
                                      (And,Mop(Not,bVar"b'4"),
                                       Bop
                                         (And,Mop(Not,bVar"b'3"),
                                          bVar"b'2")),
                                    Call
                                      ("Branch",CTy"instruction",
                                       Call
                                         ("BGTZ",CTy"Branch",
                                          TP[Var("rs",FTy 5),
                                             Var("immediate",F16)]))),
                                   (Bop
                                      (And,Mop(Not,bVar"b'4"),
                                       Bop
                                         (And,bVar"b'3",
                                          Mop(Not,bVar"b'2"))),
                                    Call
                                      ("ArithI",CTy"instruction",
                                       Call
                                         ("SLTIU",CTy"ArithI",
                                          TP[Var("rs",FTy 5),
                                             Var("rt",FTy 5),
                                             Var("immediate",F16)]))),
                                   (Bop
                                      (And,Mop(Not,bVar"b'4"),
                                       Bop(And,bVar"b'3",bVar"b'2")),
                                    Call
                                      ("ArithI",CTy"instruction",
                                       Call
                                         ("LUI",CTy"ArithI",
                                          TP[Var("rt",FTy 5),
                                             Var("immediate",F16)]))),
                                   (Bop
                                      (And,bVar"b'4",
                                       Bop
                                         (And,Mop(Not,bVar"b'3"),
                                          bVar"b'2")),
                                    Call
                                      ("Branch",CTy"instruction",
                                       Call
                                         ("BGTZL",CTy"Branch",
                                          TP[Var("rs",FTy 5),
                                             Var("immediate",F16)]))),
                                   (Bop
                                      (And,bVar"b'4",
                                       Bop
                                         (And,bVar"b'3",
                                          Mop(Not,bVar"b'2"))),
                                    Call
                                      ("Load",CTy"instruction",
                                       Call
                                         ("LDR",CTy"Load",
                                          TP[Var("rs",FTy 5),
                                             Var("rt",FTy 5),
                                             Var("immediate",F16)])))],
                                  Const
                                    ("ReservedInstruction",
                                     CTy"instruction"))),
                              (Bop
                                 (And,Mop(Not,bVar"b'4"),
                                  Bop(And,Mop(Not,bVar"b'3"),bVar"b'2")),
                               Call
                                 ("Branch",CTy"instruction",
                                  Call
                                    ("BLEZ",CTy"Branch",
                                     TP[Var("rs",FTy 5),
                                        Var("immediate",F16)]))),
                              (Bop
                                 (And,Mop(Not,bVar"b'4"),
                                  Bop(And,bVar"b'3",Mop(Not,bVar"b'2"))),
                               Call
                                 ("ArithI",CTy"instruction",
                                  Call
                                    ("SLTI",CTy"ArithI",
                                     TP[Var("rs",FTy 5),Var("rt",FTy 5),
                                        Var("immediate",F16)]))),
                              (Bop
                                 (And,Mop(Not,bVar"b'4"),
                                  Bop(And,bVar"b'3",bVar"b'2")),
                               Call
                                 ("ArithI",CTy"instruction",
                                  Call
                                    ("XORI",CTy"ArithI",
                                     TP[Var("rs",FTy 5),Var("rt",FTy 5),
                                        Var("immediate",F16)]))),
                              (Bop
                                 (And,bVar"b'4",
                                  Bop(And,Mop(Not,bVar"b'3"),bVar"b'2")),
                               Call
                                 ("Branch",CTy"instruction",
                                  Call
                                    ("BLEZL",CTy"Branch",
                                     TP[Var("rs",FTy 5),
                                        Var("immediate",F16)]))),
                              (Bop
                                 (And,bVar"b'4",
                                  Bop(And,bVar"b'3",Mop(Not,bVar"b'2"))),
                               Call
                                 ("Load",CTy"instruction",
                                  Call
                                    ("LDL",CTy"Load",
                                     TP[Var("rs",FTy 5),Var("rt",FTy 5),
                                        Var("immediate",F16)])))],
                             Const("ReservedInstruction",CTy"instruction"))),
                         (bVar"b'0",
                          ITB
                            ([(Bop
                                 (And,Mop(Not,bVar"b'4"),
                                  Bop(And,Mop(Not,bVar"b'3"),bVar"b'2")),
                               Call
                                 ("Branch",CTy"instruction",
                                  Call
                                    ("BNE",CTy"Branch",
                                     TP[Var("rs",FTy 5),Var("rt",FTy 5),
                                        Var("immediate",F16)]))),
                              (Bop
                                 (And,Mop(Not,bVar"b'4"),
                                  Bop(And,bVar"b'3",Mop(Not,bVar"b'2"))),
                               Call
                                 ("ArithI",CTy"instruction",
                                  Call
                                    ("ADDIU",CTy"ArithI",
                                     TP[Var("rs",FTy 5),Var("rt",FTy 5),
                                        Var("immediate",F16)]))),
                              (Bop
                                 (And,Mop(Not,bVar"b'4"),
                                  Bop(And,bVar"b'3",bVar"b'2")),
                               Call
                                 ("ArithI",CTy"instruction",
                                  Call
                                    ("ORI",CTy"ArithI",
                                     TP[Var("rs",FTy 5),Var("rt",FTy 5),
                                        Var("immediate",F16)]))),
                              (Bop
                                 (And,bVar"b'4",
                                  Bop(And,Mop(Not,bVar"b'3"),bVar"b'2")),
                               Call
                                 ("Branch",CTy"instruction",
                                  Call
                                    ("BNEL",CTy"Branch",
                                     TP[Var("rs",FTy 5),Var("rt",FTy 5),
                                        Var("immediate",F16)]))),
                              (Bop
                                 (And,bVar"b'4",
                                  Bop(And,bVar"b'3",Mop(Not,bVar"b'2"))),
                               Call
                                 ("ArithI",CTy"instruction",
                                  Call
                                    ("DADDIU",CTy"ArithI",
                                     TP[Var("rs",FTy 5),Var("rt",FTy 5),
                                        Var("immediate",F16)])))],
                             Const("ReservedInstruction",CTy"instruction"))),
                         (Bop
                            (And,Mop(Not,bVar"b'4"),
                             Bop(And,Mop(Not,bVar"b'3"),bVar"b'2")),
                          Call
                            ("Branch",CTy"instruction",
                             Call
                               ("BEQ",CTy"Branch",
                                TP[Var("rs",FTy 5),Var("rt",FTy 5),
                                   Var("immediate",F16)]))),
                         (Bop
                            (And,Mop(Not,bVar"b'4"),
                             Bop(And,bVar"b'3",Mop(Not,bVar"b'2"))),
                          Call
                            ("ArithI",CTy"instruction",
                             Call
                               ("ADDI",CTy"ArithI",
                                TP[Var("rs",FTy 5),Var("rt",FTy 5),
                                   Var("immediate",F16)]))),
                         (Bop
                            (And,Mop(Not,bVar"b'4"),
                             Bop(And,bVar"b'3",bVar"b'2")),
                          Call
                            ("ArithI",CTy"instruction",
                             Call
                               ("ANDI",CTy"ArithI",
                                TP[Var("rs",FTy 5),Var("rt",FTy 5),
                                   Var("immediate",F16)]))),
                         (Bop
                            (And,bVar"b'4",
                             Bop(And,Mop(Not,bVar"b'3"),bVar"b'2")),
                          Call
                            ("Branch",CTy"instruction",
                             Call
                               ("BEQL",CTy"Branch",
                                TP[Var("rs",FTy 5),Var("rt",FTy 5),
                                   Var("immediate",F16)]))),
                         (Bop
                            (And,bVar"b'4",
                             Bop(And,bVar"b'3",Mop(Not,bVar"b'2"))),
                          Call
                            ("ArithI",CTy"instruction",
                             Call
                               ("DADDI",CTy"ArithI",
                                TP[Var("rs",FTy 5),Var("rt",FTy 5),
                                   Var("immediate",F16)])))],
                        Const("ReservedInstruction",CTy"instruction")))))))))
;

val Fetch_def = Def
  ("Fetch",qVar"state",
   Let
     (Var("v",F64),Dest("PC",F64,qVar"state"),
      Let
        (TP[Var("pAddr",F64),Var("CCA",FTy 3)],
         Call
           ("AddressTranslation",PTy(F64,FTy 3),
            TP[Var("v",F64),LC("INSTRUCTION",CTy"IorD"),
               LC("LOAD",CTy"LorS")]),
         Let
           (Var("v0",FTy 3),
            Bop
              (BXor,EX(Var("v",F64),LN 2,LN 0,FTy 3),
               CC[Mop
                    (Fst,
                     Apply
                       (Const("BigEndianCPU",ATy(qTy,PTy(F1,qTy))),
                        qVar"state")),LW(0,2)]),
            TP[EX(Mop
                    (Fst,
                     Apply
                       (Call
                          ("LoadMemory",ATy(qTy,PTy(F64,qTy)),
                           TP[Var("CCA",FTy 3),Const("WORD",FTy 3),
                              Var("pAddr",F64),Var("v",F64),
                              LC("INSTRUCTION",CTy"IorD")]),qVar"state")),
                  Bop
                    (Add,LN 31,
                     Bop(Mul,LN 8,Mop(Cast nTy,Var("v0",FTy 3)))),
                  Bop(Mul,LN 8,Mop(Cast nTy,Var("v0",FTy 3))),F32),
               qVar"state"]))))
;

val Next_def = Def
  ("Next",qVar"state",
   Let
     (qVar"s",
      Mop
        (Snd,
         Apply
           (Call
              ("Run",ATy(qTy,PTy(uTy,qTy)),
               Call
                 ("Decode",CTy"instruction",
                  Mop
                    (Fst,
                     Apply
                       (Const("Fetch",ATy(qTy,PTy(F32,qTy))),qVar"state")))),
            Rupd("BranchStatus",TP[qVar"state",LO F64]))),
      Let
        (qVar"s",
         CS(Dest("BranchStatus",OTy F64,qVar"state"),
            [(Mop(Some,Var("addr",F64)),
              ITE
                (Mop(IsSome,Dest("BranchStatus",OTy F64,qVar"s")),
                 Mop
                   (Snd,
                    Apply
                      (Call
                         ("raise'exception",ATy(qTy,PTy(uTy,qTy)),
                          Call
                            ("UNPREDICTABLE",CTy"exception",
                             LS"Branch follows branch")),qVar"s")),
                 Rupd("PC",TP[qVar"s",Var("addr",F64)]))),(LO F64,qVar"s")]),
         Let
           (qVar"s",
            Rupd
              ("PC",TP[qVar"s",Bop(Add,Dest("PC",F64,qVar"s"),LW(4,64))]),
            TP[LU,
               Rupd
                 ("CP0",
                  TP[qVar"s",
                     Rupd
                       ("Count",
                        TP[Dest("CP0",CTy"CP0",qVar"s"),
                           Bop
                             (Add,
                              Dest
                                ("Count",F32,Dest("CP0",CTy"CP0",qVar"s")),
                              LW(1,32))])])]))))

val () = Import.finish 1
