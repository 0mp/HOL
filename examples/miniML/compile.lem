open MiniML

(* Remove all ML data constructors and replace them with untyped tuples with
 * numeric indices *)
val remove_ctors : (conN -> num) -> exp -> exp

let rec 
pat_remove_ctors cnmap (Pvar vn) = Pvar vn
and
pat_remove_ctors cnmap (Plit l) = Plit l
and
pat_remove_ctors cnmap (Pcon None ps) = 
  Pcon None (List.map (pat_remove_ctors cnmap) ps)
and
pat_remove_ctors cnmap (Pcon (Some cn) ps) = 
  Pcon None ((Plit (Num (cnmap cn))) :: List.map (pat_remove_ctors cnmap) ps)

let rec
remove_ctors cnmap (Raise err) = Raise err
and
remove_ctors cnmap (Val v) = Val (v_remove_ctors cnmap v)
and
remove_ctors cnmap (Con None es) = Con None (List.map (remove_ctors cnmap) es)
and
remove_ctors cnmap (Con (Some cn) es) = 
  Con None (Val (Lit (Num (cnmap cn))) :: List.map (remove_ctors cnmap) es)
and
remove_ctors cnmap (Var vn) = Var vn
and
remove_ctors cnmap (Fun vn e) = Fun vn (remove_ctors cnmap e)
and 
remove_ctors cnmap (App op e1 e2) = 
  App op (remove_ctors cnmap e1) (remove_ctors cnmap e2)
and
remove_ctors cnmap (Log op' e1 e2) = 
  Log op' (remove_ctors cnmap e1) (remove_ctors cnmap e2)
and
remove_ctors cnmap (If e1 e2 e3) = 
  If (remove_ctors cnmap e1) (remove_ctors cnmap e2) (remove_ctors cnmap e3)
and
remove_ctors cnmap (Mat e pes) = 
  Mat (remove_ctors cnmap e) (match_remove_ctors cnmap pes)
and
remove_ctors cnmap (Let vn e1 e2) = 
  Let vn (remove_ctors cnmap e1) (remove_ctors cnmap e2)
and
remove_ctors cnmap (Letrec funs e) =
  Letrec (funs_remove_ctors cnmap funs) (remove_ctors cnmap e)
and
remove_ctors cnmap (Proj e n) = Proj (remove_ctors cnmap e) n
and
v_remove_ctors cnmap (Lit l) = Lit l
and
v_remove_ctors cnmap (Conv None vs) = 
  Conv None (List.map (v_remove_ctors cnmap) vs)
and 
v_remove_ctors cnmap (Closure envE vn e) =
  Closure (env_remove_ctors cnmap envE) vn (remove_ctors cnmap e)
and
v_remove_ctors cnmap (Recclosure envE funs vn) =
  Recclosure (env_remove_ctors cnmap envE) (funs_remove_ctors cnmap funs) vn
and
env_remove_ctors cnmap [] = []
and
env_remove_ctors cnmap ((vn,v)::env) = 
  ((vn, v_remove_ctors cnmap v)::env_remove_ctors cnmap env)
and
funs_remove_ctors cnmap [] = []
and
funs_remove_ctors cnmap ((vn1,vn2,e)::funs) = 
  ((vn1,vn2,remove_ctors cnmap e)::funs_remove_ctors cnmap funs)
and
match_remove_ctors cnmap [] = []
and
match_remove_ctors cnmap ((p,e)::pes) =
  (pat_remove_ctors cnmap p, remove_ctors cnmap e)::match_remove_ctors cnmap pes 
