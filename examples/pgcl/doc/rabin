Date: Thu, 6 Feb 2003 11:59:28 +1100 (EST)
From: Annabelle McIver
Subject: Rabin's mutual exclusion


Given the program

Rabin:=   do ( i> 1) -->
           n:= i;
           do (n > 0) -->
            i:= i-1 PC{0.5} i:= i;
            n:= n-1;
           od;
          od;

we are interested in the final state "i=1".  (Recall that corresponds to
there being a unique winner in the voting competition.) It is clear that
if variable i is initialised to some integer greater than 1 then the final
value of i will be either 0 or 1.  (It's also cl;ear that this program
terminates with probability 1?)

It turns out that the chance that "i=1" finally is at least 2/3 (for any i
>=0).  Verification of this fact follows from the validity of the
following Hoare Triple:

   {2/3 (i>1) + (i=1)} Rabin {i=1},

equivalently,

    2/3 (i>1) + (i=1) <= Wp.Rabin.(i=1)  (*)

(where "a <= b", or  " a is no more than b" means
(\<forall> s: S . a.s <= b.s)).

Verification of (*) follows from the verification of the annotated program:

         I1 := (1 - (i=n+1)/2^n - (n+1)(i=n)/2^n)
         I2 := (i= n+1)/2^n + n(i=n)/2^n)

          {2/3 (i>1) + (i=1)}                           (1)
          do ( i> 1) -->
           {2/3(i>1) + (i=1)}                           (2)
           n:= i;
            do (n > 0) -->
             {(i>=0) && (i>= n) &&[ 2/3*I1 + I2 ]}      (3)
             i:= i-1 PC{0.5} i:= i;
             n:= n-1;
             {(i>=0) && (i>= n) && [ 2/3*I1 + I2 ]}     (4)
            od;
           {2/3(i>1) + (i=1)}                           (5)
          od;
          {i=1}                                         (6)


Notes:

     (a)   (5) AND NOT(i>1) implies (6) (Outer loop guard.)

     (b)   (4) AND NOT(n>0) implies (5) (Inner loop guard.)

     (c)    Wp.(n:= i).(2) >= (1)*(i>1)
           (Establish invariance  of (1) for the outer loop --
            this fact relies on the inequality
             -2/3*(n+1) + n >=0, for n >= 2)

     (c)   (i>=0) and (i>=n) are standard invariants of the inner loop.

     (d)   (i>=n) && I1 is an invariant of the inner loop.

     (e)   (i>=n) && I2 is an invariant of the inner loop.
