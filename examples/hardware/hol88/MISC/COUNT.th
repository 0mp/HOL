(setq %theorydata '((parents HOL) (types) (nametypes) (operators (COUNT_IMP fun (prod (fun (num) (bool)) (prod (fun (num) (num)) (fun (num) (num)))) (bool)) (INCR fun (prod (fun (num) (num)) (fun (num) (num))) (bool)) (REG fun (prod (fun (num) (num)) (fun (num) (num))) (bool)) (MUX fun (prod (fun (num) (bool)) (prod (fun (num) (num)) (prod (fun (num) (num)) (fun (num) (num))))) (bool)) (COUNT_SPEC fun (prod (fun (num) (bool)) (prod (fun (num) (num)) (fun (num) (num)))) (bool)) (INC fun (fun (num) (num)) (fun (num) (num))) (DEL fun (prod (fun (num) (num)) (fun (num) (num))) (bool))) (paired-infixes) (curried-infixes) (predicates) (version . 1) (stamp . 500683887)))
(setq %theorems '((sharetypes 4 (|,%3| prod (fun (num) (num)) (prod (fun (num) (num)) (fun (num) (num)))) (|,%2| prod (fun (num) (num)) (fun (num) (num))) (sw%1 fun (num) (bool)) (x%0 fun (num) (num))) (axiom (COUNT_IMP pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((comb ((const =) comb ((const COUNT_IMP) comb ((comb ((const |,|) var sw %t . sw%1)) comb ((comb ((const |,|) var i %t . x%0)) var o %t . x%0) %t . |,%2|)))) comb ((const ?) abs ((var l1 %t . x%0) comb ((const ?) abs ((var l2 %t . x%0) comb ((comb ((const |/\\|) comb ((const MUX) comb ((comb ((const |,|) var sw %t . sw%1)) comb ((comb ((const |,|) var i %t . x%0)) comb ((comb ((const |,|) var l2 %t . x%0)) var l1 %t . x%0) %t . |,%2|) %t . |,%3|)))) comb ((comb ((const |/\\|) comb ((const REG) comb ((comb ((const |,|) var l1 %t . x%0)) var o %t . x%0)))) comb ((const INCR) comb ((comb ((const |,|) var o %t . x%0)) var l2 %t . x%0)))))) bool)) bool))) (INCR pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((comb ((const =) comb ((const INCR) comb ((comb ((const |,|) var i %t . x%0)) var o %t . x%0)))) comb ((comb ((const =) var o %t . x%0)) comb ((const INC) var i)) bool))) (REG pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((comb ((const =) comb ((const REG) comb ((comb ((const |,|) var i %t . x%0)) var o %t . x%0)))) comb ((const DEL) comb ((comb ((const |,|) var o %t . x%0)) var i %t . x%0))))) (MUX pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((comb ((const =) comb ((const MUX) comb ((comb ((const |,|) var switch %t . sw%1)) comb ((comb ((const |,|) var i1 %t . x%0)) comb ((comb ((const |,|) var i2 %t . x%0)) var o %t . x%0) %t . |,%2|) %t . |,%3|)))) comb ((comb ((const =) var o %t . x%0)) comb ((comb ((comb ((const FCOND) var switch %t . sw%1)) var i1 %t . x%0)) var i2 %t . x%0) %t . x%0) bool))) (COUNT_SPEC pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((comb ((const =) comb ((const COUNT_SPEC) comb ((comb ((const |,|) var sw %t . sw%1)) comb ((comb ((const |,|) var i %t . x%0)) var o %t . x%0) %t . |,%2|)))) comb ((const DEL) comb ((comb ((const |,|) var o %t . x%0)) comb ((comb ((comb ((const FCOND) var sw %t . sw%1)) var i %t . x%0)) comb ((const INC) var o)) %t . x%0))))) (INC pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((comb ((const =) comb ((const INC) var x))) abs ((var t num) comb ((comb ((const +) comb ((var x %t . x%0) var t))) const |1|))))) (DEL pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((comb ((const =) comb ((const DEL) comb ((comb ((const |,|) var x %t . x%0)) var |x'| %t . x%0)))) comb ((const !) abs ((var t num) comb ((comb ((const =) comb ((var x %t . x%0) var t))) comb ((var |x'| %t . x%0) comb ((comb ((const -) var t)) const |1|))) bool)) bool)))) (fact (COUNT_CORRECTNESS pred HOL_ASSERT comb ((comb ((const =) comb ((const COUNT_SPEC) comb ((comb ((const |,|) var sw %t . sw%1)) comb ((comb ((const |,|) var i %t . x%0)) var o %t . x%0) %t . |,%2|)))) comb ((const COUNT_IMP) comb ((comb ((const |,|) var sw %t . sw%1)) comb ((comb ((const |,|) var i %t . x%0)) var o %t . x%0) %t . |,%2|))) bool))))
