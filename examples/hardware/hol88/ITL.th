(setq %theorydata '((parents HOL) (types) (nametypes) (operators (FIN fun (fun (num) (fun (num) (bool))) (fun (num) (fun (num) (bool)))) (STABLE fun (fun (num) (fun (num) (%VARTYPE . *))) (fun (num) (fun (num) (bool)))) (SKIP fun (num) (fun (num) (bool))) (EMPTY fun (num) (fun (num) (bool))) (TWO fun (num) (fun (num) (num))) (ONE fun (num) (fun (num) (num))) (ZERO fun (num) (fun (num) (num))) (FALSE fun (num) (fun (num) (bool))) (TRUE fun (num) (fun (num) (bool))) (VALID fun (fun (num) (fun (num) (bool))) (bool)) (EXISTS fun (fun (fun (num) (fun (num) (%VARTYPE . *))) (fun (num) (fun (num) (bool)))) (fun (num) (fun (num) (bool)))) (BOX fun (fun (num) (fun (num) (bool))) (fun (num) (fun (num) (bool)))) (O fun (fun (num) (fun (num) (bool))) (fun (num) (fun (num) (bool)))) (NOT fun (fun (num) (fun (num) (bool))) (fun (num) (fun (num) (bool)))) (NEXT fun (fun (num) (fun (num) (%VARTYPE . *))) (fun (num) (fun (num) (%VARTYPE . *)))) (MK_STATIC fun (%VARTYPE . *) (fun (num) (fun (num) (%VARTYPE . *)))) (IS_STATIC fun (fun (num) (fun (num) (%VARTYPE . *))) (bool)) (MK_SIG fun (fun (num) (%VARTYPE . *)) (fun (num) (fun (num) (%VARTYPE . *)))) (IS_SIG fun (fun (num) (fun (num) (%VARTYPE . *))) (bool))) (paired-infixes) (curried-infixes (GETS fun (fun (num) (fun (num) (%VARTYPE . *))) (fun (fun (num) (fun (num) (%VARTYPE . *))) (fun (num) (fun (num) (bool))))) (IMPLIES fun (fun (num) (fun (num) (bool))) (fun (fun (num) (fun (num) (bool))) (fun (num) (fun (num) (bool))))) (OR fun (fun (num) (fun (num) (bool))) (fun (fun (num) (fun (num) (bool))) (fun (num) (fun (num) (bool))))) (THEN fun (fun (num) (fun (num) (bool))) (fun (fun (num) (fun (num) (bool))) (fun (num) (fun (num) (bool))))) (AND fun (fun (num) (fun (num) (bool))) (fun (fun (num) (fun (num) (bool))) (fun (num) (fun (num) (bool))))) (== fun (fun (num) (fun (num) (%VARTYPE . *))) (fun (fun (num) (fun (num) (%VARTYPE . *))) (fun (num) (fun (num) (bool)))))) (predicates) (version . "1.08") (stamp . 614333435)))
(setq %theorems '((sharetypes 6 (MK_STATIC%5 fun (num) (fun (num) (num))) (P%4 fun (fun (num) (fun (num) (%VARTYPE . *))) (fun (num) (fun (num) (bool)))) (==%3 fun (num) (fun (num) (bool))) (c%2 %VARTYPE . *) (f%1 fun (num) (%VARTYPE . *)) (X%0 fun (num) (fun (num) (%VARTYPE . *)))) (axiom (FIN pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var X %t . ==%3) comb ((comb ((const =) comb ((const FIN) var X))) comb ((const BOX) comb ((comb ((const IMPLIES) const EMPTY)) var X))) bool)))) (STABLE pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var X %t . X%0) comb ((comb ((const =) comb ((const STABLE) var X %t . X%0) %t . ==%3)) comb ((comb ((const GETS) var X %t . X%0)) var X %t . X%0) %t . ==%3) bool)))) (GETS pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var X %t . X%0) comb ((const !) abs ((var Y %t . X%0) comb ((comb ((const =) comb ((comb ((const GETS) var X %t . X%0)) var Y %t . X%0) %t . ==%3)) comb ((const BOX) comb ((comb ((const IMPLIES) comb ((const NOT) const EMPTY))) comb ((comb ((const ==) comb ((const NEXT) var X %t . X%0) %t . X%0)) var Y %t . X%0)))) bool)) bool)))) (SKIP pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((comb ((const =) const SKIP)) comb ((const O) const EMPTY)))) (EMPTY pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((comb ((const =) const EMPTY)) comb ((const NOT) comb ((const O) const TRUE))))) (IMPLIES pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var X %t . ==%3) comb ((const !) abs ((var Y %t . ==%3) comb ((comb ((const =) comb ((comb ((const IMPLIES) var X)) var Y))) comb ((comb ((const OR) comb ((const NOT) var X))) var Y)) bool)) bool)))) (OR pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var X %t . ==%3) comb ((const !) abs ((var Y %t . ==%3) comb ((comb ((const =) comb ((comb ((const OR) var X)) var Y))) comb ((const NOT) comb ((comb ((const AND) comb ((const NOT) var X))) comb ((const NOT) var Y)))) bool)) bool)))) (TWO pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((comb ((const =) const TWO)) comb ((const MK_STATIC) const |2|) %t . MK_STATIC%5))) (ONE pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((comb ((const =) const ONE)) comb ((const MK_STATIC) const |1|) %t . MK_STATIC%5))) (ZERO pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((comb ((const =) const ZERO)) comb ((const MK_STATIC) const |0|) %t . MK_STATIC%5))) (FALSE pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((comb ((const =) const FALSE)) comb ((const MK_STATIC) const F) %t . ==%3))) (TRUE pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((comb ((const =) const TRUE)) comb ((const MK_STATIC) const T) %t . ==%3))) (VALID pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var X %t . ==%3) comb ((comb ((const =) comb ((const VALID) var X))) comb ((const !) abs ((var m num) comb ((const !) abs ((var n num) comb ((comb ((var X %t . ==%3) var m)) var n))) bool)) bool) bool)))) (EXISTS pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var P %t . P%4) comb ((comb ((const =) comb ((const EXISTS) var P %t . P%4) %t . ==%3)) abs ((var m num) abs ((var n num) comb ((const ?) abs ((var X %t . X%0) comb ((comb ((comb ((var P %t . P%4) var X)) var m)) var n))) bool))) bool)))) (THEN pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var X %t . ==%3) comb ((const !) abs ((var Y %t . ==%3) comb ((comb ((const =) comb ((comb ((const THEN) var X)) var Y))) abs ((var m num) abs ((var n num) comb ((const ?) abs ((var i num) comb ((comb ((const |/\\|) comb ((comb ((const <=) var m)) var i))) comb ((comb ((const |/\\|) comb ((comb ((const <=) var i)) var n))) comb ((comb ((const |/\\|) comb ((comb ((var X %t . ==%3) var m)) var i))) comb ((comb ((var Y %t . ==%3) var i)) var n)))))) bool))) bool)) bool)))) (BOX pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var X %t . ==%3) comb ((comb ((const =) comb ((const BOX) var X))) abs ((var m num) abs ((var n num) comb ((const !) abs ((var i num) comb ((comb ((const ==>) comb ((comb ((const |/\\|) comb ((comb ((const <=) var m)) var i))) comb ((comb ((const <=) var i)) var n)))) comb ((comb ((var X %t . ==%3) var i)) var n)))) bool))) bool)))) (O pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var X %t . ==%3) comb ((comb ((const =) comb ((const O) var X))) abs ((var m num) abs ((var n num) comb ((comb ((const |/\\|) comb ((comb ((const >) var n)) var m))) comb ((comb ((var X %t . ==%3) comb ((comb ((const +) var m)) const |1|))) var n))))) bool)))) (AND pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var X %t . ==%3) comb ((const !) abs ((var Y %t . ==%3) comb ((comb ((const =) comb ((comb ((const AND) var X)) var Y))) abs ((var m num) abs ((var n num) comb ((comb ((const |/\\|) comb ((comb ((var X %t . ==%3) var m)) var n))) comb ((comb ((var Y %t . ==%3) var m)) var n))))) bool)) bool)))) (NOT pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var X %t . ==%3) comb ((comb ((const =) comb ((const NOT) var X))) abs ((var m num) abs ((var n num) comb ((const ~) comb ((comb ((var X %t . ==%3) var m)) var n))))) bool)))) (== pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var X %t . X%0) comb ((const !) abs ((var Y %t . X%0) comb ((comb ((const =) comb ((comb ((const ==) var X %t . X%0)) var Y %t . X%0) %t . ==%3)) abs ((var m num) abs ((var n num) comb ((comb ((const =) comb ((comb ((var X %t . X%0) var m)) var n))) comb ((comb ((var Y %t . X%0) var m)) var n)) bool))) bool)) bool)))) (NEXT pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var X %t . X%0) comb ((comb ((const =) comb ((const NEXT) var X %t . X%0) %t . X%0)) abs ((var m num) abs ((var n num) comb ((comb ((var X %t . X%0) comb ((comb ((const +) var m)) const |1|))) var n)))) bool)))) (MK_STATIC pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var c %t . c%2) comb ((comb ((const =) comb ((const MK_STATIC) var c %t . c%2) %t . X%0)) abs ((var m num) abs ((var n num) var c %t . c%2))) bool)))) (IS_STATIC pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var X %t . X%0) comb ((comb ((const =) comb ((const IS_STATIC) var X %t . X%0) bool)) comb ((const ?) abs ((var c %t . c%2) comb ((const !) abs ((var m num) comb ((const !) abs ((var n num) comb ((comb ((const =) comb ((comb ((var X %t . X%0) var m)) var n))) var c %t . c%2) bool)) bool)) bool)) bool) bool)))) (MK_SIG pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var f %t . f%1) comb ((comb ((const =) comb ((const MK_SIG) var f %t . f%1) %t . X%0)) abs ((var m num) abs ((var n num) comb ((var f %t . f%1) var m)))) bool)))) (IS_SIG pred HOL_ASSERT comb ((const HOL_DEFINITION) comb ((const !) abs ((var X %t . X%0) comb ((comb ((const =) comb ((const IS_SIG) var X %t . X%0) bool)) comb ((const ?) abs ((var f %t . f%1) comb ((const !) abs ((var m num) comb ((const !) abs ((var n num) comb ((comb ((const =) comb ((comb ((var X %t . X%0) var m)) var n))) comb ((var f %t . f%1) var m)) bool)) bool)) bool)) bool) bool))))) (fact)))
