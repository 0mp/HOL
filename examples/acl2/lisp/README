==========================================================================
These files were written by and are maintained by Matt Kaufmann and
Mike Gordon.  This README file is an abbreviated version (created by
MJCG) of Matt's longer original file.
==========================================================================

NOTE: See "editable variables" in Makefile, a2ml.csh, filter-forms.csh
      and pprint-file.csh.

==========================================================================

.cert and .o files: Generated by (certify-book "...").

a2ml.lisp         ACL2 book to translate internal form ACL2 file to ML file
a2ml.csh          Shell wrapper for a2ml.lisp
filter-forms.lisp ACL2 book subsidiary to pprint-file.lisp
filter-forms.csh  Shell wrapper for filter-forms.lisp to translate to internal form
pprint-file.lisp  ACL2 book for pretty-printing an ACL2 input file to an output file
pprint-file.csh   Shell wrapper for pprint-file.lisp
patch.lisp        Needed by print-file.lisp
Makefile          To re-certify ACL2 books in this directory

==========================================================================

Usage:

To update tools after updating their sources:

 ./make


To pretty-print axioms.lisp:

  ./pprint-file.csh axioms.lisp outfile t

To translate into ACL2's internal form (needed for a2ml.csh):

  ./filter-forms.csh infile outfile


To pretty-print other than axioms.lisp:

  ./pprint-file.csh infile outfile


To convert a file of ACL defun, mutual-recursion, defaxiom, defthm
events into a file that can be read into HOL:

  ./a2ml.csh infile outfile

The outfile created will contain

  val _ = current_package := <package-name>

  val _ = sexp.acl2_list_ref := [<mlsexp1>, ... ,<mlsexpn>]

where <package-name> evaluates to an ML string (e.g. "ACL2") and
<mlsexp1>, ... ,<mlsexpn> are ML expressions of type mlsexp that
represent the corresponding ACL2 s-expressions in infile (the
apparently redundant "val _ = " is boilerplate needed if the file is
to be compiled).

==========================================================================

The file defaxioms.lisp.trans contains
versions of each defaxiom from axioms.lisp translated to internal form
(e.g. LET is expanded to LAMBDA).

The file defaxioms.lisp.trans is generated by executing

 ./filter-forms.csh defaxioms.lisp defaxioms.lisp.trans

The file defaxioms.lisp.trans.ml is generated by executing

 ./a2ml.csh defaxioms.lisp.trans defaxioms.lisp.trans.ml

