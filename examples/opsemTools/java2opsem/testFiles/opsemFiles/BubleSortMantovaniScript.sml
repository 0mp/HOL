(* This file has been generated by java2opSem from /usr/local/provers/HOL/examples/opsemTools/java2opsem/testFiles/javaFiles/BubleSortMantovani.java*)


open HolKernel Parse boolLib
stringLib IndDefLib IndDefRules
finite_mapTheory relationTheory
newOpsemTheory
computeLib bossLib;

val _ = new_theory "BubleSortMantovani";

(* Method sort*)
val MAIN_def =
  Define `MAIN =
    RSPEC
    (\state.
      (!i . ((0<=i)/\(i<ScalarOf (state ' "aLength")))==>(((ArrayOf (state ' "a") ' (i))=(ScalarOf (state ' "aLength")-1)-i))))
      (Seq
        (Assign "i"
          (Const 0)
        )
        (While 
          (Less 
            (Var "i")
            (Sub 
              (Var "aLength")
              (Const 1)
            )
          )
          (Seq
            (Assign "j"
              (Const 0)
            )
            (Seq
              (While 
                (Less 
                  (Var "j")
                  (Sub 
                    (Sub 
                      (Var "aLength")
                      (Var "i")
                    )
                    (Const 1)
                  )
                )
                (Seq
                  (Cond 
                    (Less 
                      (Arr "a"
                        (Plus 
                          (Var "j")
                          (Const 1)
                        )
                      )
                      (Arr "a"
                        (Var "j")
                      )
                    )
                    (Seq
                      (Assign "aux"
                        (Arr "a"
                          (Var "j")
                        )
                      )
                      (Seq
                        (ArrayAssign "a"
                          (Var "j")
                          (Arr "a"
                            (Plus 
                              (Var "j")
                              (Const 1)
                            )
                          )
                        )
                        (ArrayAssign "a"
                          (Plus 
                            (Var "j")
                            (Const 1)
                          )
                          (Var "aux")
                        )
                      )
                    )
                    Skip
                  )
                  (Assign "j"
                    (Plus 
                      (Var "j")
                      (Const 1)
                    )
                  )
                )
              )
              (Assign "i"
                (Plus 
                  (Var "i")
                  (Const 1)
                )
              )
            )
          )
        )
      )
    (\state1 state2.
      (!i . ((0<=i)/\(i<ScalarOf (state1 ' "aLength")-1))==>(((ArrayOf (state2 ' "a") ' (i))<=(ArrayOf (state2 ' "a") ' (i+1))))))
    `

  val _ = export_theory();
