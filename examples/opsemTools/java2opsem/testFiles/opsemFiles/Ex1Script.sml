(* This file has been generated by java2opSem from /usr/local/provers/HOL/examples/opsemTools/java2opsem/testFiles/javaFiles/Ex1.java*)


open HolKernel Parse boolLib
stringLib IndDefLib IndDefRules
finite_mapTheory relationTheory
newOpsemTheory
computeLib bossLib;

val _ = new_theory "Ex1";

(* Method sum*)
val MAIN_def =
  Define `MAIN =
    RSPEC
    (\state.
      ((ScalarOf (state ' "k")>3)\/(ScalarOf (state ' "i")>8)))
      (Seq
        (Assign "result" (Const 0))
        (Seq
          (Assign "k"
            (Const 0)
          )
          (Seq
            (Assign "result"
              (Plus 
                (Var "k")
                (Var "j")
              )
            )
            (Seq
              (Assign "k"
                (Plus 
                  (Const 12)
                  (Const 8)
                )
              )
              (Seq
                (Assign "k"
                  (Plus 
                    (Var "k")
                    (Const 3)
                  )
                )
                (Seq
                  (Cond 
                    (Equal 
                      (Var "i")
                      (Var "j")
                    )
                    (Assign "result"
                      (Var "k")
                    )
                    Skip
                  )
                  (Seq
                    (Cond 
                      (Less 
                        (Var "j")
                        (Var "i")
                      )
                      (Assign "result"
                        (Plus 
                          (Var "k")
                          (Const 1)
                        )
                      )
                      Skip
                    )
                    (Cond 
                      (LessEq 
                        (Var "i")
                        (Plus 
                          (Var "j")
                          (Var "k")
                        )
                      )
                      (Seq
                        (Assign "i"
                          (Const 3)
                        )
                        (Assign "result"
                          (Plus 
                            (Var "result")
                            (Var "i")
                          )
                        )
                      )
                      (Assign "result"
                        (Var "k")
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    (\state1 state2.
      (((ScalarOf (state1 ' "k")=6))) ==> ((~(ScalarOf (state2 ' "result")=ScalarOf (state1 ' "k")+3)/\(ScalarOf (state2 ' "result")>ScalarOf (state2 ' "i")+ScalarOf (state2 ' "j")))))
    `

  val _ = export_theory();
