(* build command line tool *)
use (Globals.HOLDIR ^ "/examples/separationLogic/src/holfoot/poly/header.sml");
use (Globals.HOLDIR ^ "/examples/separationLogic/src/holfoot/poly/holfoot_command_line.sml");


val examplesDir = ".";

fun use_file file =
let
   val _ = print ("using file '"^file^"'\n\n");
   val _ = use file
in
   ()
end;

fun holfoot_run_simple () = holfoot_run (false, fn x => Parse.print_with_style [PPBackEnd.FG PPBackEnd.OrangeRed] "File mode not supported in compressed version!\n");

fun holfoot_run_full () = holfoot_run (true, use_file);

val _ = PolyML.export (Globals.HOLDIR ^ "/examples/separationLogic/src/holfoot/poly/holfoot", holfoot_run_simple);
val _ = PolyML.export (Globals.HOLDIR ^ "/examples/separationLogic/src/holfoot/poly/holfoot-full", holfoot_run_full);
val _ = PolyML.export (Globals.HOLDIR ^ "/examples/separationLogic/src/holfoot/poly/holfoot-web", holfoot_web_interface);



