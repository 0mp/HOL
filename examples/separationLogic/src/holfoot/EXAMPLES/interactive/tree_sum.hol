use (Globals.HOLDIR ^ "/examples/separationLogic/src/holfoot/header.sml");

(******************************************************************************)
(* Some useful REWRITES                                                       *)
(******************************************************************************)

open treeTheory rich_listTheory

val TREE_SUM_def = Define `TREE_SUM =
   TREE_FOLD (0:num, \v vL. (FOLDL (\a b. a + b) 0 ((HD v)::vL)))`

val TREE_SUM_REWRITE = prove (``
   (TREE_SUM leaf = 0) /\
   (TREE_SUM (node v tL) =
    SUM ((HD v)::(MAP TREE_SUM tL)))``,

SIMP_TAC (std_ss++boolSimps.ETA_ss) [TREE_SUM_def, TREE_FOLD_def,
   SUM_FOLDL]);


(******************************************************************************)
(* Verify specification                                                       *)
(******************************************************************************)

val file = concat [examplesDir, "/interactive/tree_sum.dsf"];
val spec_thm = holfoot_verify_spec file [ add_rewrites [TREE_SUM_REWRITE] ] 



