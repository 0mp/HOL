HOLyHammer is a machine learning for theorem proving framework.

Requires:

* OCaml >= 3.12
    sudo apt-get install ocaml 
* g++ >= 4.8 (recent version with C++11 support)  
    Ubuntu 12.04:
    sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
    sudo apt-get update
    sudo apt-get install g++-4.8

Install holyhammer: (done during the build)
 
  run Holmake in src/holyhammer
  run Holmake in src/holyhammer/hh/hh1
  run Holmake in src/holyhammer/hh
  run Holmake in src/holyhammer/predict
  run Holmake in src/holyhammer/predict/mepo

Supported provers: Eprover, Vampire and Z3 
  
  Eprover: 
    Tested with 1.8 and 1.9.
  Vampire: 
    Tested with version 2.6. Parsing may need changing for higher versions
  Z3: 
    Tested with 4.0. The newest version of z3 does not support 
    tptp input. Can be fetch from http://isabelle.in.tum.de/components/.
  CVC4: 
    Waiting for a good minimization algorithm to be implemented
    as it does not output have unsatisfiable cores.
  
Predictors:

  The two best predictors are KNN and Mepo. The default predictor is KNN. 
  - Mepo works best when your conjecture has rare symbols.
  - KNN learns from previous proofs.
  - Kepo is a combination of the previous two.
  They have different strength so please switch between predictors:
  - "set_predictors KNN;"
  - "set_predictors Mepo;" 
  - "set_predictors Kepo;"
  Alternatively, you can call hh_try which tries all of them sequentially.
   
Example: 

  load "holyHammer";
  open holyHammer;
  hh [] ``1 + 1 = 2``;
  METIS_PROVE lemmas ``1 + 1 = 2``; 

Questions:

  If you have any question, you can send an email to thibault_gauthier@hotmail.fr.
