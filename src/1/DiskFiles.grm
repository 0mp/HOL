open DiskFilesHeader HolKernel

fun warn s = TextIO.output(TextIO.stdErr, s ^ "\n")

fun mkidvector strs intps =
    List.foldr (fn ((thyi,namei), A) => {Thy = Vector.sub(strs,thyi),
                                         Name = Vector.sub(strs,namei)} :: A)
               []
               intps |> Vector.fromList

%%
%name DiskFiles
%keyword STRINGS IDS TYPES TERMS THEOREMS

%nonterm theoryfile of parse_result
       | strings_section of string vector
       | string_list of string list
       | ids_section of (int * int) list
       | idpair_list1 of (int * int) list
       | idpair_list of (int*int) list
       | idpair of int * int
       | types_section of pretype vector
       | tysize_spec
       | tmsize_spec
       | idsize_spec
       | typedecl_list of pretype list
       | typedecl of pretype
       | intlist_ne of int list
       | terms_section of pre_vc vector
       | termdecl_list of pre_vc list
       | termdecl of pre_vc
       | theorems of (string * prethm) list
       | namethm_list of (string * prethm) list
       | namethm of (string * prethm)
       | term of preterm
       | term_a of preterm
       | term_c of preterm
       | base_term of preterm
       | termlist of preterm list
       | tmid of int




%term EOF | ID of string | DOLLAR | FULLSTOP | LPAREN | RPAREN | BACKSLASH |
      IDS | TYPES | TERMS | THEOREMS | LBRACKET | RBRACKET | NUMBER of int |
      TYV | TYOP | TMV | TMC | STRINGS | COMMA

%eop EOF
%pos int
%noshift EOF
%verbose
%pure

%start theoryfile

%%
theoryfile : strings_section ids_section types_section terms_section theorems
                (strings_section, mkidvector strings_section ids_section,
                 types_section, terms_section, theorems)

strings_section: STRINGS LBRACKET string_list RBRACKET
                    (Vector.fromList string_list)

string_list : ([])
            | ID string_list (ID :: string_list)

ids_section : IDS LBRACKET idpair_list RBRACKET (idpair_list)

idpair_list : ([])
            | idpair_list1 (idpair_list1)

idpair_list1 : idpair ([idpair])
             | idpair COMMA idpair_list1 (idpair :: idpair_list1)

idpair : NUMBER NUMBER ( (NUMBER1, NUMBER2)  )

types_section : TYPES typedecl_list (Vector.fromList typedecl_list)

typedecl_list : ([])
              | typedecl typedecl_list (typedecl::typedecl_list)

typedecl : TYV ID (ptv ID)
         | TYOP LBRACKET intlist_ne RBRACKET
              (ptop (hd intlist_ne, tl intlist_ne))

intlist_ne : NUMBER ([NUMBER])
           | NUMBER intlist_ne (NUMBER::intlist_ne)

terms_section : TERMS termdecl_list (Vector.fromList termdecl_list)

termdecl_list : ([])
              | termdecl termdecl_list
                   (termdecl :: termdecl_list)

termdecl : TMV LBRACKET ID NUMBER RBRACKET (ptm_v(ID, NUMBER))
         | TMC LBRACKET NUMBER NUMBER RBRACKET
             (ptm_c(NUMBER1, NUMBER2))

theorems : THEOREMS namethm_list (namethm_list)

namethm_list : ([]) | namethm namethm_list (namethm :: namethm_list)

namethm : ID termlist ((ID, (tl termlist, hd termlist)))

termlist : term ([term])
         | term termlist (term :: termlist)

term : LPAREN term_a RPAREN (term_a)

term_a :
   BACKSLASH tmid FULLSTOP term_a (abs(tmid, term_a))
 | term_c (term_c)

term_c : term_c base_term (app(term_c, base_term))
       | base_term (base_term)

base_term : LPAREN term_a RPAREN (term_a)
          | tmid (atom tmid)

tmid :  NUMBER (NUMBER)
