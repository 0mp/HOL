\DOC CASE_TAC

\TYPE {CASE_TAC : tactic}

\SYNOPSIS
Case splits on a term {t} that features in the goal as {case t of ...},
and then performs some simplification.

\DESCRIBE
{SingleStep.CASE_TAC} first calls {SingleStep.PURE_CASE_TAC}, which
searches the goal for an instance of {case t of ...} and performs a
{SingleStep.Cases_on `t`}. If this succeeds, it then simplifies the
goal using definitions of {case} constants, plus distinctness and
injectivity theorems for datatypes.

\COMMENTS
When there are multiple {case} constants in the goal, it can be very
convenient to execute the tactic {REPEAT CASE_TAC}.

\FAILURE
{SingleStep.CASE_TAC} fails precisely when {SingleStep.PURE_CASE_TAC}
fails.

\SEEALSO
SingleStep.PURE_CASE_TAC.

\ENDDOC
