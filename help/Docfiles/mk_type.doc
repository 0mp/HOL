\DOC mk_type

\TYPE {mk_type : string * hol_type list -> hol_type}

\SYNOPSIS
Constructs a type (other than a variable type).

\DESCRIBE
{mk_type(tyop,[ty1,...,tyn])} returns {(ty1,...,tyn)tyop}, 
if {tyop} is the name of a known {n}-ary type constructor.

\FAILURE
Fails if {tyop} is not the name of a known type, or if {tyop} is known,
but the length of the list of argument types is not equal to the arity 
of {tyop}.

\EXAMPLE
{
- mk_type ("bool",[]);
> val it = `:bool` : hol_type

- mk_type ("fun",[alpha,it]);
> val it = `:'a -> bool` : hol_type
}
\SEEALSO
mk_thy_type, dest_type, mk_vartype, -->.

\ENDDOC
