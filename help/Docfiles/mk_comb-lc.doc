\DOC mk_comb

\TYPE {mk_comb : term * term -> term}

\SYNOPSIS
Constructs a combination (function application).

\DESCRIBE
{mk_comb (t1, t2)} returns the combination {t1 t2}.

\FAILURE
Fails if {t1} does not have a function type, or if {t1} has a
function type, but its domain does not equal the type of {t2}.

\EXAMPLE
{
   - mk_comb (boolSyntax.neg_tm, boolSyntax.T);

   > val it = `~T` : term

   - mk_comb(boolSyntax.T, boolSyntax.T) handle e => Raise e;

   Exception raised at Term.mk_comb:
   incompatible types
   ! Uncaught exception:
   ! HOL_ERR <poly>
}
\SEEALSO
dest_comb, is_comb, list_mk_comb, mk_var, mk_const, mk_abs.

\ENDDOC
