digraph G {
     ratio = compress
     size = "10,16.5"
     ranksep = 1.0
     nodesep = 0.30
     node [fontcolor = darkgreen fontsize=30 fontname=Helvetica]
     
     bag [URL = "bagTheory.html"]
     container [URL = "containerTheory.html"]
     prime [URL = "primeTheory.html"]
     gcd [URL = "gcdTheory.html"]
     int_arith [URL = "int_arithTheory.html"]
     DeepSyntax [URL = "DeepSyntaxTheory.html"]
     defCNF [URL = "defCNFTheory.html"]
     finite_map [URL = "finite_mapTheory.html"]
     fixedPoint [URL = "fixedPointTheory.html"]
     integerRing [URL = "integerRingTheory.html"]
     llist [URL = "llistTheory.html"]
     MachineTransition [URL = "MachineTransitionTheory.html"]
     marker [URL = "markerTheory.html"]
     ring [URL = "ringTheory.html"]
     semi_ring [URL = "semi_ringTheory.html"]
     prelim [URL = "prelimTheory.html"]
     quote [URL = "quoteTheory.html"]
     canonical [URL = "canonicalTheory.html"]
     ringNorm [URL = "ringNormTheory.html"]
     numRing [URL = "numRingTheory.html"]
     divides [URL = "dividesTheory.html"]
     integer [URL = "integerTheory.html"]
     Omega [URL = "OmegaTheory.html"]
     Temporal_Logic [URL = "Temporal_LogicTheory.html"]
     Past_Temporal_Logic [URL = "Past_Temporal_LogicTheory.html"]
     Omega_Automata [URL = "Omega_AutomataTheory.html"]
     prob_pseudo [URL = "prob_pseudoTheory.html"]
     boolean_sequence [URL = "boolean_sequenceTheory.html"]
     powser [URL = "powserTheory.html"]
     transc [URL = "transcTheory.html"]
     hrat [URL = "hratTheory.html"]
     hreal [URL = "hrealTheory.html"]
     realax [URL = "realaxTheory.html"]
     real [URL = "realTheory.html"]
     topology [URL = "topologyTheory.html"]
     nets [URL = "netsTheory.html"]
     seq [URL = "seqTheory.html"]
     lim [URL = "limTheory.html"]
     poly [URL = "polyTheory.html"]
     prob_extra [URL = "prob_extraTheory.html"]
     prob_canon [URL = "prob_canonTheory.html"]
     prob_algebra [URL = "prob_algebraTheory.html"]
     prob [URL = "probTheory.html"]
     state_transformer [URL = "state_transformerTheory.html"]
     prob_indep [URL = "prob_indepTheory.html"]
     prob_uniform [URL = "prob_uniformTheory.html"]
     string [URL = "stringTheory.html"]
     bits [URL = "bitsTheory.html"]
     word32 [URL = "word32Theory.html"]
     word_num [URL = "word_numTheory.html"]
     bword_num [URL = "bword_numTheory.html"]
     bword_arith [URL = "bword_arithTheory.html"]
     operator [URL = "operatorTheory.html"]
     ind_type [URL = "ind_typeTheory.html"]
     list [URL = "listTheory.html"]
     rich_list [URL = "rich_listTheory.html"]
     pair [URL = "pairTheory.html"]
     relation [URL = "relationTheory.html"]
     num [URL = "numTheory.html"]
     prim_rec [URL = "prim_recTheory.html"]
     arithmetic [URL = "arithmeticTheory.html"]
     numeral [URL = "numeralTheory.html"]
     one [URL = "oneTheory.html"]
     min [URL = "minTheory.html"]
     bool [URL = "boolTheory.html"]
     combin [URL = "combinTheory.html"]
     sum [URL = "sumTheory.html"]
     option [URL = "optionTheory.html"]
     pred_set [URL = "pred_setTheory.html"]
     res_quan [URL = "res_quanTheory.html"]
     word_base [URL = "word_baseTheory.html"]
     word_bitop [URL = "word_bitopTheory.html"]
     bword_bitop [URL = "bword_bitopTheory.html"]
     word [URL = "wordTheory.html"]
     
     Past_Temporal_Logic -> Omega_Automata
     Temporal_Logic -> Past_Temporal_Logic
     arithmetic -> numeral
     bag -> container
     bits -> word32
     bool -> marker
     bool -> operator
     bool -> num
     bool -> one
     bool -> combin
     boolean_sequence -> prob_pseudo
     boolean_sequence -> prob_algebra
     bword_arith -> word
     bword_bitop -> word
     bword_num -> bword_arith
     canonical -> ringNorm
     combin -> relation
     combin -> sum
     divides -> prime
     divides -> integer
     gcd -> int_arith
     hrat -> hreal
     hreal -> realax
     ind_type -> semi_ring
     ind_type -> list
     int_arith -> DeepSyntax
     integer -> int_arith
     integer -> integerRing
     integer -> Omega
     lim -> powser
     lim -> poly
     list -> container
     list -> DeepSyntax
     list -> fixedPoint
     list -> llist
     list -> MachineTransition
     list -> prelim
     list -> Omega
     list -> poly
     list -> string
     list -> bits
     list -> rich_list
     min -> bool
     nets -> seq
     num -> prim_rec
     numeral -> finite_map
     numeral -> divides
     numeral -> Temporal_Logic
     numeral -> hrat
     numeral -> ind_type
     numeral -> pred_set
     one -> finite_map
     one -> option
     operator -> rich_list
     option -> defCNF
     option -> llist
     option -> MachineTransition
     option -> semi_ring
     option -> prelim
     option -> divides
     option -> bits
     option -> pred_set
     pair -> finite_map
     pair -> semi_ring
     pair -> divides
     pair -> Temporal_Logic
     pair -> hrat
     pair -> state_transformer
     pair -> list
     pair -> pred_set
     poly -> prob_extra
     powser -> transc
     pred_set -> bag
     pred_set -> DeepSyntax
     pred_set -> fixedPoint
     pred_set -> poly
     pred_set -> res_quan
     prelim -> quote
     prim_rec -> arithmetic
     prime -> gcd
     prob -> prob_indep
     prob_algebra -> prob
     prob_canon -> prob_algebra
     prob_extra -> boolean_sequence
     prob_extra -> prob_canon
     prob_indep -> prob_uniform
     quote -> canonical
     real -> topology
     realax -> real
     relation -> pair
     relation -> prim_rec
     res_quan -> word_base
     rich_list -> defCNF
     rich_list -> prob_extra
     rich_list -> word_base
     ring -> ringNorm
     ringNorm -> integerRing
     ringNorm -> numRing
     semi_ring -> ring
     semi_ring -> canonical
     seq -> lim
     state_transformer -> prob_indep
     sum -> finite_map
     sum -> Temporal_Logic
     sum -> hrat
     sum -> ind_type
     sum -> option
     topology -> nets
     transc -> prob_extra
     word_base -> word_num
     word_base -> word_bitop
     word_bitop -> bword_num
     word_bitop -> bword_bitop
     word_num -> bword_num
}
