# this -*- shell-script -*- can be used to create a HOL tar ball.

homesvn=https://hol.svn.sourceforge.net/svnroot/hol

# typical usage: ./releasing-hol -f branches/HOL-Omega Kananaskis-5 `which poly`

usage () {
        echo "Usage: releasing-hol [-f] [--svn URL] <release-path> <verson> <ML>" >&2
        echo "  <release-path> is a path wrt $homesvn" >&2
        echo "  <version> is a version name, e.g. kananaskis-5" >&2
        echo "  <ML> is a path to mosml or poly" >&2
        echo "  Use the -f option to force fresh svn call (ignoring cache)" >&2
        echo "  Use --svn <repo-URL> to specify alternative svn repo" >&2
        exit 1
}

TEMP=$(getopt -n releasing-hol -of -l svn: -- "$@")
eval set -- "$TEMP"

force=false

while true
do
    case "$1" in
        -f ) force=true ; echo "Forcing a fresh svn export call" >&2; shift ;;
        --svn ) homesvn=$2 ; shift 2 ;;
        -- ) shift ; break ;;
        * ) echo "Internal error!" >&2 ; exit 1 ;;
    esac
done


if [ $# -ne 3 ]
then
    usage
fi
origname=$1
version=$2
ML=$3

MLbase=$(basename $ML)
if [ $MLbase != mosml -a $MLbase != poly ]
then
    echo "MLs supported are Poly/ML and Moscow ML" >&2
    exit 1
fi

toLower() {
  echo $1 | tr "[:upper:]" "[:lower:]" 
}

repos=$homesvn/$origname
shortname=$(basename $origname)
# name=${origname////-}
name=${shortname////-}
version=$(toLower $version)
name=$(toLower $name)
tmpholdir=$name
echo "Building $name-$version:"

localholdir="`dirname $0`/.."
localholdir=$(cd $localholdir ; pwd)
echo "Local HOL directory: $localholdir"

texlogs=/tmp/$name-latex-logs

createdir () {
  if mkdir $1 2> /dev/null
  then
      :
  else
    if /bin/rm -rf $1 2> /dev/null
    then
        mkdir $1
    else
        echo "Couldn't create directory $1" >&2
        exit 1
    fi
  fi
}

# initial setup
createdir $texlogs
createdir "/tmp/svn-export-result"        # where output from svn export will go
/bin/rm -rf "/tmp/$tmpholdir"             # final directory to be tarred

if /bin/ls -1 $localholdir | grep std.prelude > /dev/null 2>&1
then
    :
else
    echo "Local HOL directory looks bogus" >&2
    exit 1
fi

cd /tmp
/bin/rm -f svn-export.log


echo "Getting copy of $repos from SourceForge"
echo -n "Progress: "
linecount=0
(if [ -d $name-svn-cache -a $force = false ]
 then
      echo "Using cache"
      cat /tmp/$name-svn-export-output
      /bin/rm -r svn-export-result
      cp -R $name-svn-cache svn-export-result
 else
      echo "Calling svn export $repos svn-export-result"
      /bin/rm -rf svn-export-result $name-svn-cache
      svn export $repos svn-export-result | tee /tmp/$name-svn-export-output
      cp -R svn-export-result $name-svn-cache
 fi) 2>&1 | tee /tmp/svn-export.log |
  while read foo
  do  linecount=$[ $linecount + 1 ]
      if [ $[ $linecount % 20 ] -eq 0 ] ; then echo -n . ; fi
  done

if [ $? -ne 0 ] ; then
  echo ; echo "svn export failed, consult /tmp/svn-export.log" ; exit 1
else
  echo
fi

if [ ! -r svn-export-result/std.prelude -o ! -d svn-export-result/src ]
then
    echo "svn export doesn't seem to have worked" >&2
    exit 1
fi

echo -n "Copying various theorems from local installation: "
for i in pair res_quan string
do
  echo -n "$i "
  if /bin/cp -R $localholdir/src/$i/help/thms /tmp/svn-export-result/src/$i/help 2> /dev/null
  then
      :
  else
      echo
      echo "Couldn't find theorems for $i" >&2
      exit 1
  fi
done
echo

echo "Copying theory graph from local installation"
# see the file help/src/DOT for instructions on how to generate the
# theorygraph files
/bin/cp $localholdir/help/theorygraph/*.html $localholdir/help/theorygraph/theories.* /tmp/svn-export-result/help/theorygraph ||
  (echo "Couldn't copy theory graph." >&2 ; exit 1)

if [ $ML = "mosml" ]
then
    echo "Running configure script"
    cd /tmp/svn-export-result
    $ML < tools/smart-configure.sml > /tmp/$name-config-log 2>&1
    if [ $? -ne 0 ] ; then
        echo "HOL configuration failed, consult /tmp/$name-config.log" ; exit 1
    fi
fi


echo Now building Doc2Tex
cd /tmp/svn-export-result/help/src-sml
# ../../bin/Holmake Doc2Tex
if [ $ML = "mosml" ]
then
    ../../bin/Holmake Doc2Tex.exe
else
    $ML < poly-Doc2Tex.ML
    gcc -o Doc2Tex.exe Doc2Tex.o -L/usr/lib -lpolymain -lpolyml
fi

echo Now building documentation
for man_name in Reference Description Tutorial Quick Logic
do
    lcname=$(echo $man_name | tr A-Z a-z)
    echo Making $man_name
    cd /tmp/svn-export-result/Manual/$man_name
    if make $lcname.pdf > $texlogs/$man_name.log 2>&1 < /dev/null
    then :
    else echo Build failed - see $texlogs/$man_name.log ; exit 1
    fi
    mv $lcname.pdf /tmp/$name-$version-$lcname.pdf
done

echo Removing Buddy documentation from distribution
cd /tmp/
mv svn-export-result/examples/muddy/muddyC/buddy/doc/*.ps .

echo Now starting to clean up and make tar ball
cd /tmp/svn-export-result
/bin/rm -rf developers
/bin/rm -rf Manual
/bin/rm -rf examples/HolBdd/Manual

mv bin/README ../bin-README
if [ $ML = "mosml" ]
then
    /bin/rm tools/Holmake/*.{uo,ui} tools/hol-mode.el
    /bin/rm tools/Holmake/{Parser,Lexer}.sml tools/Holmake/Parser.sig
    /bin/rm tools/Holmake/Holmake_tokens.sml
    (cd tools/quote-filter ; ../../bin/Holmake cleanAll)
    (cd tools/mlyacc/mlyacclib ; ../../../bin/Holmake cleanAll)
    (cd tools/mlyacc/src ; ../../../bin/Holmake cleanAll)
    (cd sigobj ; /bin/rm Systeml.{uo,ui})
    (cd tools/mllex ; ../../bin/Holmake cleanAll)
    (cd help/src-sml ; ../../bin/Holmake cleanAll)
fi

/bin/rm -f bin/*

mv ../bin-README bin/README

cd /tmp
mv svn-export-result $tmpholdir

echo "Creating tar file"

# Remove unnecessary or old examples and other junk
/bin/rm -rf $tmpholdir/examples/ARM/v4T
/bin/rm -rf $tmpholdir/examples/PSL
/bin/rm -rf $tmpholdir/examples/opsemTools
/bin/rm -rf $tmpholdir/examples/temporal_deep
/bin/rm -rf $tmpholdir/examples/elliptic
/bin/rm -rf $tmpholdir/examples/dev/sw
/bin/rm -rf $tmpholdir/examples/dev/sw2
/bin/rm -rf $tmpholdir/examples/ring.sml
/bin/rm -rf $tmpholdir/examples/fsub
/bin/rm -rf $tmpholdir/examples/pgcl
/bin/rm -rf $tmpholdir/scheme
/bin/rm -rf $tmpholdir/tools/mlton

tar czf $name-$version.tar.gz $tmpholdir
echo "Created tar file $name-$version.tar.gz in /tmp"

cp -p $tmpholdir/doc/$version.release.html .

